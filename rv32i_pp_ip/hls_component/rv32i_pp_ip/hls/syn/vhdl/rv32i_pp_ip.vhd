-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rv32i_pp_ip is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 19;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of rv32i_pp_ip is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "rv32i_pp_ip_rv32i_pp_ip,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.031000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=128,HLS_SYN_DSP=0,HLS_SYN_FF=2296,HLS_SYN_LUT=3945,HLS_VERSION=2024_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_8067 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000001100111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv15_2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_const_lv15_4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal or_ln21_3_fu_2904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal start_pc : STD_LOGIC_VECTOR (31 downto 0);
    signal code_ram_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal code_ram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal nb_instruction : STD_LOGIC_VECTOR (31 downto 0);
    signal nb_instruction_ap_vld : STD_LOGIC;
    signal nb_cycle_ap_vld : STD_LOGIC;
    signal e_to_e_1_reg_600 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_cancel_1_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_to_w_cancel_1_reg_623 : STD_LOGIC_VECTOR (0 downto 0);
    signal f7_6_reg_635 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_25_reg_646 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_from_m_has_no_dest_load_reg_3426 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal m_from_e_d_i_is_store_load_reg_3430 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_to_w_rd_3_reg_3434 : STD_LOGIC_VECTOR (4 downto 0);
    signal e_to_m_result_2_reg_3438 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_to_e_d_i_rs2_reg_3443 : STD_LOGIC_VECTOR (4 downto 0);
    signal m_to_w_result_2_reg_3448 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_to_m_d_i_rd_3_reg_3485 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_func3_load_fu_1139_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_to_e_d_i_func3_reg_3490 : STD_LOGIC_VECTOR (2 downto 0);
    signal pc_fu_1142_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal pc_reg_3495 : STD_LOGIC_VECTOR (14 downto 0);
    signal xor_ln32_fu_1478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln32_reg_3506 : STD_LOGIC_VECTOR (0 downto 0);
    signal rv1_fu_1576_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv1_reg_3511 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln59_fu_1584_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln59_reg_3530 : STD_LOGIC_VECTOR (16 downto 0);
    signal rv2_fu_1596_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_reg_3535 : STD_LOGIC_VECTOR (31 downto 0);
    signal msize_load_reg_3545 : STD_LOGIC_VECTOR (2 downto 0);
    signal a01_fu_1607_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal a01_reg_3554 : STD_LOGIC_VECTOR (1 downto 0);
    signal a1_fu_1611_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal a1_reg_3561 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_ram_addr_reg_3566 : STD_LOGIC_VECTOR (14 downto 0);
    signal e_to_m_rv2_1_load_reg_3571 : STD_LOGIC_VECTOR (31 downto 0);
    signal msize_1_fu_1637_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal msize_1_reg_3576 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln79_fu_1665_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln79_reg_3580 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln79_2_fu_1683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln79_2_reg_3585 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln76_fu_1697_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln76_reg_3590 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln76_2_fu_1715_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln76_2_reg_3595 : STD_LOGIC_VECTOR (31 downto 0);
    signal is_ret_load_reg_3600 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal e_to_m_d_i_is_op_imm_load_reg_3605 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_lui_load_reg_3610 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_ret_load_reg_3615 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_jal_load_reg_3620 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_jalr_load_reg_3625 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_load_load_reg_3631 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_imm_reg_3637 : STD_LOGIC_VECTOR (19 downto 0);
    signal f_to_e_d_i_type_reg_3642 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_to_e_pc_reg_3646 : STD_LOGIC_VECTOR (14 downto 0);
    signal f_to_e_d_i_rd_reg_3651 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_f_fu_1763_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal f_to_f_reg_3658 : STD_LOGIC_VECTOR (14 downto 0);
    signal instruction_reg_3663 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_to_e_d_i_rd_1_fu_1778_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_rd_1_reg_3677 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_imm_inst_19_12_reg_3683 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_to_e_d_i_func3_1_reg_3688 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_to_e_d_i_rs1_1_reg_3693 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_rs2_1_reg_3700 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_is_jal_fu_1852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_jal_reg_3707 : STD_LOGIC_VECTOR (0 downto 0);
    signal opch_reg_3712 : STD_LOGIC_VECTOR (1 downto 0);
    signal opcl_reg_3716 : STD_LOGIC_VECTOR (2 downto 0);
    signal e_to_m_d_i_is_r_type_load_reg_3720 : STD_LOGIC_VECTOR (0 downto 0);
    signal taken_branch_fu_2001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal taken_branch_reg_3725 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln82_fu_2007_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln82_reg_3730 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_fu_2033_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_11_fu_2052_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_11_reg_3740 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_8_fu_2060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln55_fu_2070_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln53_fu_2079_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_5_fu_2087_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_5_reg_3760 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_4_fu_2108_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_2116_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal npc_fu_2121_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal npc_reg_3775 : STD_LOGIC_VECTOR (14 downto 0);
    signal j_b_target_pc_fu_2137_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal j_b_target_pc_reg_3783 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_target_pc_reg_3789 : STD_LOGIC_VECTOR (14 downto 0);
    signal xor_ln92_1_fu_2170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln92_1_reg_3794 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_3_fu_2194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_3_reg_3800 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_to_w_result_fu_2397_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_to_w_result_reg_3805 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_to_f_set_pc_fu_2726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_e_to_e_1_phi_fu_603_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_m_to_w_cancel_1_phi_fu_626_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_f7_6_phi_fu_639_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_result_25_phi_fu_650_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln29_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_result_25_reg_646 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln23_fu_1977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_fu_1984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln14_fu_1989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12 : STD_LOGIC_VECTOR (19 downto 0);
    signal f_to_e_d_i_imm_1_fu_2553_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_f_to_e_d_i_imm_6_reg_713 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln41_fu_2487_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln40_fu_2508_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln39_fu_2522_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_result_26_phi_fu_734_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_result_26_reg_731 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_result_27_phi_fu_755_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln109_fu_2614_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_result_27_reg_752 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_17_fu_2593_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_820_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln86_fu_2609_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_19_fu_2601_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_next_pc_phi_fu_773_p8 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_reg_pp0_iter0_next_pc_reg_770 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln139_fu_2631_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln133_fu_2638_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_mux_empty_phi_fu_786_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_reg_783 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln98_fu_2669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln100_fu_2705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln99_fu_2685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_e_to_f_target_pc_3_phi_fu_800_p6 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_reg_pp0_iter0_e_to_f_target_pc_3_reg_797 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln8_fu_1150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln18_fu_1629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_from_m_has_no_dest_fu_294 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal is_ret_fu_298 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_to_w_has_no_dest_fu_302 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_to_w_is_ret_fu_306 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_from_e_d_i_is_store_fu_310 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal m_from_e_d_i_is_load_fu_314 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal e_to_m_d_i_is_r_type_fu_318 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_is_r_type_fu_2432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_has_no_dest_fu_322 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_has_no_dest_fu_1888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_op_imm_fu_326 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_is_op_imm_fu_1870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_lui_fu_330 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_is_lui_fu_1864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_ret_fu_334 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_is_ret_fu_1858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_jal_fu_338 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal e_to_m_d_i_is_jalr_fu_342 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_is_jalr_fu_1846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_branch_fu_346 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_is_branch_fu_1840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_store_fu_350 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_is_store_fu_1834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_load_fu_354 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal f_to_e_d_i_is_load_fu_1828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_nbc_fu_358 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal add_ln53_fu_2920_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal counter_nbi_fu_362 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal c_nbi_fu_2881_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_from_m_rd_fu_366 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal msize_fu_370 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal e_to_m_rv2_1_fu_374 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal m_from_e_result_fu_378 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal e_to_m_result_fu_2736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_from_e_target_pc_fu_382 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal e_to_f_target_pc_fu_825_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_allocacmp_e_to_f_target_pc_4 : STD_LOGIC_VECTOR (14 downto 0);
    signal e_to_m_d_i_imm_fu_386 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal e_to_m_d_i_type_fu_390 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal e_to_m_d_i_rs2_fu_394 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal e_to_m_d_i_rs1_fu_398 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal pc_1_fu_402 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal f_to_f_1_fu_406 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal reg_file_fu_410 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred566_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_1_fu_414 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred575_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_33 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_2_fu_418 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred584_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_34 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_3_fu_422 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred593_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_35 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_4_fu_426 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred602_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_36 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_5_fu_430 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred611_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_37 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_6_fu_434 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred620_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_38 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_7_fu_438 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred629_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_39 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_8_fu_442 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred638_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_40 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_9_fu_446 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred647_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_41 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_10_fu_450 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred656_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_42 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_11_fu_454 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred665_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_43 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_12_fu_458 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred674_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_44 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_13_fu_462 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred683_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_45 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_14_fu_466 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred692_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_46 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_15_fu_470 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred701_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_47 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_16_fu_474 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred710_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_48 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_17_fu_478 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred719_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_49 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_18_fu_482 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred728_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_50 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_19_fu_486 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred737_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_51 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_20_fu_490 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred746_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_52 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_21_fu_494 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred755_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_53 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_22_fu_498 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred764_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_23_fu_502 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred773_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_55 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_24_fu_506 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred782_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_25_fu_510 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred791_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_57 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_26_fu_514 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred800_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_27_fu_518 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred809_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_59 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_28_fu_522 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred818_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_60 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_29_fu_526 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred827_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_61 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_30_fu_530 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred836_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_62 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_to_w_result_3_fu_534 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_31_fu_538 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_pred849_state3 : BOOLEAN;
    signal ap_sig_allocacmp_reg_file_63 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_to_w_rd_fu_542 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal e_to_m_d_i_func3_fu_546 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal e_to_m_d_i_rd_fu_550 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal code_ram_ce0_local : STD_LOGIC;
    signal data_ram_ce0_local : STD_LOGIC;
    signal data_ram_address0_local : STD_LOGIC_VECTOR (14 downto 0);
    signal data_ram_we0_local : STD_LOGIC_VECTOR (3 downto 0);
    signal data_ram_d0_local : STD_LOGIC_VECTOR (31 downto 0);
    signal r1_fu_1170_p65 : STD_LOGIC_VECTOR (31 downto 0);
    signal r2_fu_1306_p65 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln30_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_1_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln30_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln30_fu_1466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_fu_1484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_fu_1496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln32_1_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln32_fu_1502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_bp_1_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_bp_1_fu_1508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln36_1_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln35_fu_1532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln36_fu_1520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_fu_1550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_fu_1544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_bp_2_fu_1538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_bp_2_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bypass_rs1_fu_1514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln8_fu_1568_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r1_fu_1170_p67 : STD_LOGIC_VECTOR (31 downto 0);
    signal bypass_rs2_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln8_1_fu_1588_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r2_fu_1306_p67 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_fu_1619_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal rv2_01_fu_1645_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln_fu_1653_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln79_1_fu_1661_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln79_1_fu_1671_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln79_fu_1649_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln79_2_fu_1679_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_0_fu_1641_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln76_1_fu_1693_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln76_1_fu_1703_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln76_fu_1689_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln76_2_fu_1711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_to_e_d_i_opcode_fu_1768_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln21_fu_1876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_fu_1882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln82_fu_2007_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln81_fu_2011_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal rs_fu_2015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_fu_2022_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shift_1_fu_2026_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln60_fu_2038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_9_fu_2042_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_10_fu_2047_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_7_fu_2065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_6_fu_2074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln51_fu_2083_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln46_fu_2092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_2_fu_2098_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_fu_2103_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2_fu_2127_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln2_fu_2127_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln81_fu_2011_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln127_fu_2143_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln93_fu_2164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln92_fu_2158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_1_fu_2182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_2_fu_2188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_fu_2176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_2_fu_2248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_3_fu_2253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_4_fu_2258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_fu_2273_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_2273_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_2273_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_2273_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_2273_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_2273_p10 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_2273_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal h1_fu_2238_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal h0_fu_2214_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal h_fu_2305_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln44_fu_2326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_1_fu_2337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_2_fu_2348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_3_fu_2359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_4_fu_2370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_2320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_fu_2331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_1_fu_2342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_2_fu_2353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_3_fu_2364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_4_fu_2375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_to_w_result_fu_2397_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_to_w_result_fu_2397_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_to_w_result_fu_2397_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_to_w_result_fu_2397_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_to_w_result_fu_2397_p15 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_to_w_result_fu_2397_p16 : STD_LOGIC_VECTOR (5 downto 0);
    signal d_imm_inst_31_fu_2438_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_imm_inst_7_fu_2454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_2466_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal d_imm_inst_11_8_fu_2445_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal f_to_e_d_i_imm_5_fu_2475_p5 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_2492_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal f_to_e_d_i_imm_4_fu_2501_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal f_to_e_d_i_imm_3_fu_2513_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_2537_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_2544_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal pc4_fu_2572_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal imm12_fu_2565_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln106_fu_2583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_16_fu_2587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal npc4_fu_2577_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln85_fu_2619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln98_1_fu_2664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_1_fu_2648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_fu_2675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln99_1_fu_2679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln92_2_fu_2644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln97_fu_2653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_fu_2691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln100_2_fu_2699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln100_1_fu_2695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln102_1_fu_2716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln102_fu_2711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln102_2_fu_2720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln98_fu_2658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln110_fu_2732_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_21_fu_2623_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln27_fu_2878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln21_2_fu_2893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln21_fu_2888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_2_fu_2898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_1922 : BOOLEAN;
    signal r1_fu_1170_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p7 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p9 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p11 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p13 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p15 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p17 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p19 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p21 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p23 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p25 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p27 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p29 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p31 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p35 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p37 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p39 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p41 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p43 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p45 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p47 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p49 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p51 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p53 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p55 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p57 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p59 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p61 : STD_LOGIC_VECTOR (4 downto 0);
    signal r1_fu_1170_p63 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p7 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p9 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p11 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p13 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p15 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p17 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p19 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p21 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p23 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p25 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p27 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p29 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p31 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p35 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p37 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p39 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p41 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p43 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p45 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p47 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p49 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p51 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p53 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p55 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p57 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p59 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p61 : STD_LOGIC_VECTOR (4 downto 0);
    signal r2_fu_1306_p63 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_fu_2273_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_2273_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_2273_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_2273_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal m_to_w_result_fu_2397_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_to_w_result_fu_2397_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_to_w_result_fu_2397_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_to_w_result_fu_2397_p7 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_to_w_result_fu_2397_p9 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_to_w_result_fu_2397_p11 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_to_w_result_fu_2397_p13 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component rv32i_pp_ip_sparsemux_65_5_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (4 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (4 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (4 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (4 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (4 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (4 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (4 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (4 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (4 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (4 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (4 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (4 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (4 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (4 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (4 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (4 downto 0);
        din15_WIDTH : INTEGER;
        CASE16 : STD_LOGIC_VECTOR (4 downto 0);
        din16_WIDTH : INTEGER;
        CASE17 : STD_LOGIC_VECTOR (4 downto 0);
        din17_WIDTH : INTEGER;
        CASE18 : STD_LOGIC_VECTOR (4 downto 0);
        din18_WIDTH : INTEGER;
        CASE19 : STD_LOGIC_VECTOR (4 downto 0);
        din19_WIDTH : INTEGER;
        CASE20 : STD_LOGIC_VECTOR (4 downto 0);
        din20_WIDTH : INTEGER;
        CASE21 : STD_LOGIC_VECTOR (4 downto 0);
        din21_WIDTH : INTEGER;
        CASE22 : STD_LOGIC_VECTOR (4 downto 0);
        din22_WIDTH : INTEGER;
        CASE23 : STD_LOGIC_VECTOR (4 downto 0);
        din23_WIDTH : INTEGER;
        CASE24 : STD_LOGIC_VECTOR (4 downto 0);
        din24_WIDTH : INTEGER;
        CASE25 : STD_LOGIC_VECTOR (4 downto 0);
        din25_WIDTH : INTEGER;
        CASE26 : STD_LOGIC_VECTOR (4 downto 0);
        din26_WIDTH : INTEGER;
        CASE27 : STD_LOGIC_VECTOR (4 downto 0);
        din27_WIDTH : INTEGER;
        CASE28 : STD_LOGIC_VECTOR (4 downto 0);
        din28_WIDTH : INTEGER;
        CASE29 : STD_LOGIC_VECTOR (4 downto 0);
        din29_WIDTH : INTEGER;
        CASE30 : STD_LOGIC_VECTOR (4 downto 0);
        din30_WIDTH : INTEGER;
        CASE31 : STD_LOGIC_VECTOR (4 downto 0);
        din31_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rv32i_pp_ip_sparsemux_9_3_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component rv32i_pp_ip_sparsemux_15_6_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (5 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (5 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (5 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (5 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (5 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (5 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (5 downto 0);
        din6_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rv32i_pp_ip_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        start_pc : OUT STD_LOGIC_VECTOR (31 downto 0);
        nb_instruction : IN STD_LOGIC_VECTOR (31 downto 0);
        nb_instruction_ap_vld : IN STD_LOGIC;
        nb_cycle : IN STD_LOGIC_VECTOR (31 downto 0);
        nb_cycle_ap_vld : IN STD_LOGIC;
        code_ram_address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        code_ram_ce0 : IN STD_LOGIC;
        code_ram_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_ram_address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        data_ram_ce0 : IN STD_LOGIC;
        data_ram_we0 : IN STD_LOGIC_VECTOR (3 downto 0);
        data_ram_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_ram_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component rv32i_pp_ip_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component rv32i_pp_ip_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        start_pc => start_pc,
        nb_instruction => nb_instruction,
        nb_instruction_ap_vld => nb_instruction_ap_vld,
        nb_cycle => counter_nbc_fu_358,
        nb_cycle_ap_vld => nb_cycle_ap_vld,
        code_ram_address0 => code_ram_address0,
        code_ram_ce0 => code_ram_ce0_local,
        code_ram_q0 => code_ram_q0,
        data_ram_address0 => data_ram_address0_local,
        data_ram_ce0 => data_ram_ce0_local,
        data_ram_we0 => data_ram_we0_local,
        data_ram_d0 => data_ram_d0_local,
        data_ram_q0 => data_ram_q0,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    sparsemux_65_5_32_1_1_U1 : component rv32i_pp_ip_sparsemux_65_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000",
        din0_WIDTH => 32,
        CASE1 => "00001",
        din1_WIDTH => 32,
        CASE2 => "00010",
        din2_WIDTH => 32,
        CASE3 => "00011",
        din3_WIDTH => 32,
        CASE4 => "00100",
        din4_WIDTH => 32,
        CASE5 => "00101",
        din5_WIDTH => 32,
        CASE6 => "00110",
        din6_WIDTH => 32,
        CASE7 => "00111",
        din7_WIDTH => 32,
        CASE8 => "01000",
        din8_WIDTH => 32,
        CASE9 => "01001",
        din9_WIDTH => 32,
        CASE10 => "01010",
        din10_WIDTH => 32,
        CASE11 => "01011",
        din11_WIDTH => 32,
        CASE12 => "01100",
        din12_WIDTH => 32,
        CASE13 => "01101",
        din13_WIDTH => 32,
        CASE14 => "01110",
        din14_WIDTH => 32,
        CASE15 => "01111",
        din15_WIDTH => 32,
        CASE16 => "10000",
        din16_WIDTH => 32,
        CASE17 => "10001",
        din17_WIDTH => 32,
        CASE18 => "10010",
        din18_WIDTH => 32,
        CASE19 => "10011",
        din19_WIDTH => 32,
        CASE20 => "10100",
        din20_WIDTH => 32,
        CASE21 => "10101",
        din21_WIDTH => 32,
        CASE22 => "10110",
        din22_WIDTH => 32,
        CASE23 => "10111",
        din23_WIDTH => 32,
        CASE24 => "11000",
        din24_WIDTH => 32,
        CASE25 => "11001",
        din25_WIDTH => 32,
        CASE26 => "11010",
        din26_WIDTH => 32,
        CASE27 => "11011",
        din27_WIDTH => 32,
        CASE28 => "11100",
        din28_WIDTH => 32,
        CASE29 => "11101",
        din29_WIDTH => 32,
        CASE30 => "11110",
        din30_WIDTH => 32,
        CASE31 => "11111",
        din31_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => ap_sig_allocacmp_reg_file_32,
        din1 => ap_sig_allocacmp_reg_file_33,
        din2 => ap_sig_allocacmp_reg_file_34,
        din3 => ap_sig_allocacmp_reg_file_35,
        din4 => ap_sig_allocacmp_reg_file_36,
        din5 => ap_sig_allocacmp_reg_file_37,
        din6 => ap_sig_allocacmp_reg_file_38,
        din7 => ap_sig_allocacmp_reg_file_39,
        din8 => ap_sig_allocacmp_reg_file_40,
        din9 => ap_sig_allocacmp_reg_file_41,
        din10 => ap_sig_allocacmp_reg_file_42,
        din11 => ap_sig_allocacmp_reg_file_43,
        din12 => ap_sig_allocacmp_reg_file_44,
        din13 => ap_sig_allocacmp_reg_file_45,
        din14 => ap_sig_allocacmp_reg_file_46,
        din15 => ap_sig_allocacmp_reg_file_47,
        din16 => ap_sig_allocacmp_reg_file_48,
        din17 => ap_sig_allocacmp_reg_file_49,
        din18 => ap_sig_allocacmp_reg_file_50,
        din19 => ap_sig_allocacmp_reg_file_51,
        din20 => ap_sig_allocacmp_reg_file_52,
        din21 => ap_sig_allocacmp_reg_file_53,
        din22 => ap_sig_allocacmp_reg_file_54,
        din23 => ap_sig_allocacmp_reg_file_55,
        din24 => ap_sig_allocacmp_reg_file_56,
        din25 => ap_sig_allocacmp_reg_file_57,
        din26 => ap_sig_allocacmp_reg_file_58,
        din27 => ap_sig_allocacmp_reg_file_59,
        din28 => ap_sig_allocacmp_reg_file_60,
        din29 => ap_sig_allocacmp_reg_file_61,
        din30 => ap_sig_allocacmp_reg_file_62,
        din31 => ap_sig_allocacmp_reg_file_63,
        def => r1_fu_1170_p65,
        sel => e_to_m_d_i_rs1_fu_398,
        dout => r1_fu_1170_p67);

    sparsemux_65_5_32_1_1_U2 : component rv32i_pp_ip_sparsemux_65_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000",
        din0_WIDTH => 32,
        CASE1 => "00001",
        din1_WIDTH => 32,
        CASE2 => "00010",
        din2_WIDTH => 32,
        CASE3 => "00011",
        din3_WIDTH => 32,
        CASE4 => "00100",
        din4_WIDTH => 32,
        CASE5 => "00101",
        din5_WIDTH => 32,
        CASE6 => "00110",
        din6_WIDTH => 32,
        CASE7 => "00111",
        din7_WIDTH => 32,
        CASE8 => "01000",
        din8_WIDTH => 32,
        CASE9 => "01001",
        din9_WIDTH => 32,
        CASE10 => "01010",
        din10_WIDTH => 32,
        CASE11 => "01011",
        din11_WIDTH => 32,
        CASE12 => "01100",
        din12_WIDTH => 32,
        CASE13 => "01101",
        din13_WIDTH => 32,
        CASE14 => "01110",
        din14_WIDTH => 32,
        CASE15 => "01111",
        din15_WIDTH => 32,
        CASE16 => "10000",
        din16_WIDTH => 32,
        CASE17 => "10001",
        din17_WIDTH => 32,
        CASE18 => "10010",
        din18_WIDTH => 32,
        CASE19 => "10011",
        din19_WIDTH => 32,
        CASE20 => "10100",
        din20_WIDTH => 32,
        CASE21 => "10101",
        din21_WIDTH => 32,
        CASE22 => "10110",
        din22_WIDTH => 32,
        CASE23 => "10111",
        din23_WIDTH => 32,
        CASE24 => "11000",
        din24_WIDTH => 32,
        CASE25 => "11001",
        din25_WIDTH => 32,
        CASE26 => "11010",
        din26_WIDTH => 32,
        CASE27 => "11011",
        din27_WIDTH => 32,
        CASE28 => "11100",
        din28_WIDTH => 32,
        CASE29 => "11101",
        din29_WIDTH => 32,
        CASE30 => "11110",
        din30_WIDTH => 32,
        CASE31 => "11111",
        din31_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => ap_sig_allocacmp_reg_file_32,
        din1 => ap_sig_allocacmp_reg_file_33,
        din2 => ap_sig_allocacmp_reg_file_34,
        din3 => ap_sig_allocacmp_reg_file_35,
        din4 => ap_sig_allocacmp_reg_file_36,
        din5 => ap_sig_allocacmp_reg_file_37,
        din6 => ap_sig_allocacmp_reg_file_38,
        din7 => ap_sig_allocacmp_reg_file_39,
        din8 => ap_sig_allocacmp_reg_file_40,
        din9 => ap_sig_allocacmp_reg_file_41,
        din10 => ap_sig_allocacmp_reg_file_42,
        din11 => ap_sig_allocacmp_reg_file_43,
        din12 => ap_sig_allocacmp_reg_file_44,
        din13 => ap_sig_allocacmp_reg_file_45,
        din14 => ap_sig_allocacmp_reg_file_46,
        din15 => ap_sig_allocacmp_reg_file_47,
        din16 => ap_sig_allocacmp_reg_file_48,
        din17 => ap_sig_allocacmp_reg_file_49,
        din18 => ap_sig_allocacmp_reg_file_50,
        din19 => ap_sig_allocacmp_reg_file_51,
        din20 => ap_sig_allocacmp_reg_file_52,
        din21 => ap_sig_allocacmp_reg_file_53,
        din22 => ap_sig_allocacmp_reg_file_54,
        din23 => ap_sig_allocacmp_reg_file_55,
        din24 => ap_sig_allocacmp_reg_file_56,
        din25 => ap_sig_allocacmp_reg_file_57,
        din26 => ap_sig_allocacmp_reg_file_58,
        din27 => ap_sig_allocacmp_reg_file_59,
        din28 => ap_sig_allocacmp_reg_file_60,
        din29 => ap_sig_allocacmp_reg_file_61,
        din30 => ap_sig_allocacmp_reg_file_62,
        din31 => ap_sig_allocacmp_reg_file_63,
        def => r2_fu_1306_p65,
        sel => e_to_m_d_i_rs2_fu_394,
        dout => r2_fu_1306_p67);

    sparsemux_9_3_8_1_1_U3 : component rv32i_pp_ip_sparsemux_9_3_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100",
        din0_WIDTH => 8,
        CASE1 => "010",
        din1_WIDTH => 8,
        CASE2 => "001",
        din2_WIDTH => 8,
        CASE3 => "000",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => b_fu_2273_p2,
        din1 => b_fu_2273_p4,
        din2 => b_fu_2273_p6,
        din3 => b_fu_2273_p8,
        def => b_fu_2273_p9,
        sel => b_fu_2273_p10,
        dout => b_fu_2273_p11);

    sparsemux_15_6_32_1_1_U4 : component rv32i_pp_ip_sparsemux_15_6_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100000",
        din0_WIDTH => 32,
        CASE1 => "010000",
        din1_WIDTH => 32,
        CASE2 => "001000",
        din2_WIDTH => 32,
        CASE3 => "000100",
        din3_WIDTH => 32,
        CASE4 => "000010",
        din4_WIDTH => 32,
        CASE5 => "000001",
        din5_WIDTH => 32,
        CASE6 => "000000",
        din6_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => e_to_m_result_2_reg_3438,
        din1 => m_to_w_result_fu_2397_p4,
        din2 => data_ram_q0,
        din3 => m_to_w_result_fu_2397_p8,
        din4 => m_to_w_result_fu_2397_p10,
        din5 => m_to_w_result_fu_2397_p12,
        din6 => ap_const_lv32_0,
        def => m_to_w_result_fu_2397_p15,
        sel => m_to_w_result_fu_2397_p16,
        dout => m_to_w_result_fu_2397_p17);

    flow_control_loop_pipe_U : component rv32i_pp_ip_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_const_logic_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_result_26_reg_731_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_0)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_731 <= result_4_fu_2108_p3;
                elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_2)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_731 <= zext_ln53_fu_2079_p1;
                elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_3)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_731 <= zext_ln55_fu_2070_p1;
                elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_4)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_731 <= result_8_fu_2060_p2;
                elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_6)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_731 <= result_12_fu_2033_p2;
                elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_7)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_731 <= result_fu_2116_p2;
                end if;
            end if; 
        end if;
    end process;

    counter_nbc_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                counter_nbc_fu_358 <= ap_const_lv32_1;
            elsif (((or_ln21_3_fu_2904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                counter_nbc_fu_358 <= add_ln53_fu_2920_p2;
            end if; 
        end if;
    end process;

    counter_nbi_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                counter_nbi_fu_362 <= ap_const_lv32_0;
            elsif (((or_ln21_3_fu_2904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                counter_nbi_fu_362 <= c_nbi_fu_2881_p2;
            end if; 
        end if;
    end process;

    e_to_e_1_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln21_3_fu_2904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                e_to_e_1_reg_600 <= e_to_f_set_pc_fu_2726_p2;
            elsif (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                e_to_e_1_reg_600 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    e_to_m_cancel_1_reg_611_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln21_3_fu_2904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                e_to_m_cancel_1_reg_611 <= e_to_e_1_reg_600;
            elsif (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                e_to_m_cancel_1_reg_611 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    f7_6_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln21_3_fu_2904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                f7_6_reg_635 <= instruction_reg_3663(30 downto 30);
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                f7_6_reg_635 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    f_from_e_target_pc_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                f_from_e_target_pc_fu_382 <= e_to_f_target_pc_fu_825_p1;
            elsif (((or_ln21_3_fu_2904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                f_from_e_target_pc_fu_382 <= ap_phi_mux_e_to_f_target_pc_3_phi_fu_800_p6;
            end if; 
        end if;
    end process;

    m_to_w_cancel_1_reg_623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln21_3_fu_2904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                m_to_w_cancel_1_reg_623 <= e_to_m_cancel_1_reg_611;
            elsif (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                m_to_w_cancel_1_reg_623 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    reg_file_10_fu_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_10_fu_450 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred656_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_10_fu_450 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_11_fu_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_11_fu_454 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred665_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_11_fu_454 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_12_fu_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_12_fu_458 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred674_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_12_fu_458 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_13_fu_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_13_fu_462 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred683_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_13_fu_462 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_14_fu_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_14_fu_466 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred692_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_14_fu_466 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_15_fu_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_15_fu_470 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred701_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_15_fu_470 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_16_fu_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_16_fu_474 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred710_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_16_fu_474 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_17_fu_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_17_fu_478 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred719_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_17_fu_478 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_18_fu_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_18_fu_482 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred728_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_18_fu_482 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_19_fu_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_19_fu_486 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred737_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_19_fu_486 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_1_fu_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_1_fu_414 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred575_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_1_fu_414 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_20_fu_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_20_fu_490 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred746_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_20_fu_490 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_21_fu_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_21_fu_494 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred755_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_21_fu_494 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_22_fu_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_22_fu_498 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred764_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_22_fu_498 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_23_fu_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_23_fu_502 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred773_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_23_fu_502 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_24_fu_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_24_fu_506 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred782_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_24_fu_506 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_25_fu_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_25_fu_510 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred791_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_25_fu_510 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_26_fu_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_26_fu_514 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred800_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_26_fu_514 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_27_fu_518_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_27_fu_518 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred809_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_27_fu_518 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_28_fu_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_28_fu_522 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred818_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_28_fu_522 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_29_fu_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_29_fu_526 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred827_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_29_fu_526 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_2_fu_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_2_fu_418 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred584_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_2_fu_418 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_30_fu_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_30_fu_530 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred836_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_30_fu_530 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_31_fu_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_31_fu_538 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred849_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_31_fu_538 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_3_fu_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_3_fu_422 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred593_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_3_fu_422 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_4_fu_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_4_fu_426 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred602_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_4_fu_426 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_5_fu_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_5_fu_430 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred611_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_5_fu_430 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_6_fu_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_6_fu_434 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred620_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_6_fu_434 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_7_fu_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_7_fu_438 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred629_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_7_fu_438 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_8_fu_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_8_fu_442 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred638_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_8_fu_442 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_9_fu_446_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_9_fu_446 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred647_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_9_fu_446 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    reg_file_fu_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_fu_410 <= ap_const_lv32_0;
            elsif (((ap_predicate_pred566_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_fu_410 <= m_to_w_result_2_reg_3448;
            end if; 
        end if;
    end process;

    result_25_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                result_25_reg_646 <= icmp_ln14_fu_1989_p2;
            elsif (((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                result_25_reg_646 <= icmp_ln16_fu_1984_p2;
            elsif (((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                result_25_reg_646 <= grp_fu_815_p2;
            elsif (((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                result_25_reg_646 <= xor_ln23_fu_1977_p2;
            elsif (((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                result_25_reg_646 <= grp_fu_810_p2;
            elsif (((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                result_25_reg_646 <= xor_ln29_fu_1994_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (not((or_ln21_3_fu_2904_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                result_25_reg_646 <= ap_phi_reg_pp0_iter0_result_25_reg_646;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                a01_reg_3554 <= a01_fu_1607_p1;
                a1_reg_3561 <= m_from_e_result_fu_378(1 downto 1);
                data_ram_addr_reg_3566 <= zext_ln18_fu_1629_p1(15 - 1 downto 0);
                e_to_m_d_i_rd_3_reg_3485 <= m_to_w_rd_fu_542;
                e_to_m_result_2_reg_3438 <= m_from_e_result_fu_378;
                e_to_m_rv2_1_load_reg_3571 <= e_to_m_rv2_1_fu_374;
                f_to_e_d_i_func3_reg_3490 <= e_to_m_d_i_func3_fu_546;
                f_to_e_d_i_rs2_reg_3443 <= e_to_m_d_i_rs2_fu_394;
                m_from_e_d_i_is_store_fu_310 <= e_to_m_d_i_is_store_fu_350;
                m_from_e_d_i_is_store_load_reg_3430 <= m_from_e_d_i_is_store_fu_310;
                m_to_w_has_no_dest_fu_302 <= e_to_m_d_i_has_no_dest_fu_322;
                m_to_w_rd_3_reg_3434 <= w_from_m_rd_fu_366;
                m_to_w_result_2_reg_3448 <= m_to_w_result_3_fu_534;
                msize_1_reg_3576 <= msize_1_fu_1637_p1;
                msize_load_reg_3545 <= msize_fu_370;
                pc_reg_3495 <= pc_fu_1142_p3;
                rv1_reg_3511 <= rv1_fu_1576_p3;
                rv2_reg_3535 <= rv2_fu_1596_p3;
                shl_ln76_2_reg_3595 <= shl_ln76_2_fu_1715_p2;
                shl_ln76_reg_3590 <= shl_ln76_fu_1697_p2;
                shl_ln79_2_reg_3585 <= shl_ln79_2_fu_1683_p2;
                shl_ln79_reg_3580 <= shl_ln79_fu_1665_p2;
                trunc_ln59_reg_3530 <= trunc_ln59_fu_1584_p1;
                w_from_m_has_no_dest_fu_294 <= m_to_w_has_no_dest_fu_302;
                w_from_m_has_no_dest_load_reg_3426 <= w_from_m_has_no_dest_fu_294;
                xor_ln32_reg_3506 <= xor_ln32_fu_1478_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    ap_predicate_pred566_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_0) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred575_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_1) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred584_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_2) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred593_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_3) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred602_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_4) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred611_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_5) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred620_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_6) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred629_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_7) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred638_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_8) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred647_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_9) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred656_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_A) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred665_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_B) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred674_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_C) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred683_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_D) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred692_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_E) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred701_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_F) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred710_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_10) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred719_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_11) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred728_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_12) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred737_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_13) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred746_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_14) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred755_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_15) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred764_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_16) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred773_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_17) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred782_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_18) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred791_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_19) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred800_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_1A) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred809_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_1B) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred818_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_1C) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred827_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_1D) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred836_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_1E) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                    ap_predicate_pred849_state3 <= ((m_to_w_rd_3_reg_3434 = ap_const_lv5_1F) and (w_from_m_has_no_dest_load_reg_3426 = ap_const_lv1_0) and (m_to_w_cancel_1_reg_623 = ap_const_lv1_0));
                d_imm_inst_19_12_reg_3683 <= code_ram_q0(19 downto 12);
                e_to_m_d_i_has_no_dest_fu_322 <= f_to_e_d_i_has_no_dest_fu_1888_p2;
                e_to_m_d_i_is_branch_fu_346 <= f_to_e_d_i_is_branch_fu_1840_p2;
                e_to_m_d_i_is_jal_fu_338 <= f_to_e_d_i_is_jal_fu_1852_p2;
                e_to_m_d_i_is_jal_load_reg_3620 <= e_to_m_d_i_is_jal_fu_338;
                e_to_m_d_i_is_jalr_fu_342 <= f_to_e_d_i_is_jalr_fu_1846_p2;
                e_to_m_d_i_is_jalr_load_reg_3625 <= e_to_m_d_i_is_jalr_fu_342;
                e_to_m_d_i_is_load_fu_354 <= f_to_e_d_i_is_load_fu_1828_p2;
                e_to_m_d_i_is_load_load_reg_3631 <= e_to_m_d_i_is_load_fu_354;
                e_to_m_d_i_is_lui_fu_330 <= f_to_e_d_i_is_lui_fu_1864_p2;
                e_to_m_d_i_is_lui_load_reg_3610 <= e_to_m_d_i_is_lui_fu_330;
                e_to_m_d_i_is_op_imm_fu_326 <= f_to_e_d_i_is_op_imm_fu_1870_p2;
                e_to_m_d_i_is_op_imm_load_reg_3605 <= e_to_m_d_i_is_op_imm_fu_326;
                e_to_m_d_i_is_r_type_load_reg_3720 <= e_to_m_d_i_is_r_type_fu_318;
                e_to_m_d_i_is_ret_fu_334 <= f_to_e_d_i_is_ret_fu_1858_p2;
                e_to_m_d_i_is_ret_load_reg_3615 <= e_to_m_d_i_is_ret_fu_334;
                e_to_m_d_i_is_store_fu_350 <= f_to_e_d_i_is_store_fu_1834_p2;
                f_to_e_d_i_func3_1_reg_3688 <= code_ram_q0(14 downto 12);
                f_to_e_d_i_imm_reg_3637 <= e_to_m_d_i_imm_fu_386;
                f_to_e_d_i_is_jal_reg_3707 <= f_to_e_d_i_is_jal_fu_1852_p2;
                f_to_e_d_i_rd_1_reg_3677 <= code_ram_q0(11 downto 7);
                f_to_e_d_i_rd_reg_3651 <= e_to_m_d_i_rd_fu_550;
                f_to_e_d_i_rs1_1_reg_3693 <= code_ram_q0(19 downto 15);
                f_to_e_d_i_rs2_1_reg_3700 <= code_ram_q0(24 downto 20);
                f_to_e_d_i_type_reg_3642 <= e_to_m_d_i_type_fu_390;
                f_to_e_pc_reg_3646 <= pc_1_fu_402;
                f_to_f_reg_3658 <= f_to_f_fu_1763_p2;
                i_target_pc_reg_3789 <= add_ln127_fu_2143_p2(16 downto 2);
                instruction_reg_3663 <= code_ram_q0;
                is_ret_fu_298 <= m_to_w_is_ret_fu_306;
                is_ret_load_reg_3600 <= is_ret_fu_298;
                j_b_target_pc_reg_3783 <= j_b_target_pc_fu_2137_p2;
                m_from_e_d_i_is_load_fu_314 <= e_to_m_d_i_is_load_fu_354;
                m_to_w_is_ret_fu_306 <= e_to_m_d_i_is_ret_fu_334;
                m_to_w_result_reg_3805 <= m_to_w_result_fu_2397_p17;
                npc_reg_3775 <= npc_fu_2121_p2;
                opch_reg_3712 <= code_ram_q0(6 downto 5);
                opcl_reg_3716 <= code_ram_q0(4 downto 2);
                result_11_reg_3740 <= result_11_fu_2052_p3;
                result_5_reg_3760 <= result_5_fu_2087_p2;
                sext_ln82_reg_3730 <= sext_ln82_fu_2007_p1;
                taken_branch_reg_3725 <= taken_branch_fu_2001_p2;
                xor_ln92_1_reg_3794 <= xor_ln92_1_fu_2170_p2;
                xor_ln94_3_reg_3800 <= xor_ln94_3_fu_2194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln21_3_fu_2904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                e_to_m_d_i_func3_fu_546 <= f_to_e_d_i_func3_1_reg_3688;
                e_to_m_d_i_imm_fu_386 <= ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12;
                e_to_m_d_i_rd_fu_550 <= f_to_e_d_i_rd_1_reg_3677;
                e_to_m_d_i_rs1_fu_398 <= f_to_e_d_i_rs1_1_reg_3693;
                e_to_m_d_i_rs2_fu_394 <= f_to_e_d_i_rs2_1_reg_3700;
                e_to_m_d_i_type_fu_390 <= ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26;
                e_to_m_rv2_1_fu_374 <= rv2_reg_3535;
                f_to_f_1_fu_406 <= f_to_f_reg_3658;
                m_from_e_result_fu_378 <= e_to_m_result_fu_2736_p3;
                m_to_w_rd_fu_542 <= f_to_e_d_i_rd_reg_3651;
                msize_fu_370 <= f_to_e_d_i_func3_reg_3490;
                pc_1_fu_402 <= pc_reg_3495;
                w_from_m_rd_fu_366 <= e_to_m_d_i_rd_3_reg_3485;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                e_to_m_d_i_is_r_type_fu_318 <= f_to_e_d_i_is_r_type_fu_2432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((e_to_m_cancel_1_reg_611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                m_to_w_result_3_fu_534 <= m_to_w_result_reg_3805;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_block_state1_pp0_stage0_iter0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    a01_fu_1607_p1 <= m_from_e_result_fu_378(2 - 1 downto 0);
    a1_fu_1611_p3 <= m_from_e_result_fu_378(1 downto 1);
    a2_fu_1619_p4 <= m_from_e_result_fu_378(16 downto 2);
    add_ln127_fu_2143_p2 <= std_logic_vector(unsigned(trunc_ln59_reg_3530) + unsigned(trunc_ln81_fu_2011_p1));
    add_ln53_fu_2920_p2 <= std_logic_vector(unsigned(counter_nbc_fu_358) + unsigned(ap_const_lv32_1));
    and_ln100_1_fu_2695_p2 <= (xor_ln94_3_reg_3800 and xor_ln92_1_reg_3794);
    and_ln100_2_fu_2699_p2 <= (icmp_ln97_fu_2653_p2 and icmp_ln100_fu_2691_p2);
    and_ln100_fu_2705_p2 <= (and_ln100_2_fu_2699_p2 and and_ln100_1_fu_2695_p2);
    and_ln30_fu_1466_p2 <= (xor_ln30_fu_1448_p2 and icmp_ln31_1_fu_1460_p2);
    and_ln32_fu_1502_p2 <= (xor_ln32_1_fu_1490_p2 and icmp_ln33_fu_1496_p2);
    and_ln35_fu_1532_p2 <= (xor_ln30_fu_1448_p2 and icmp_ln36_1_fu_1526_p2);
    and_ln37_fu_1550_p2 <= (xor_ln32_1_fu_1490_p2 and icmp_ln36_fu_1520_p2);
    and_ln44_1_fu_2342_p2 <= (m_from_e_d_i_is_load_fu_314 and icmp_ln44_1_fu_2337_p2);
    and_ln44_2_fu_2353_p2 <= (m_from_e_d_i_is_load_fu_314 and icmp_ln44_2_fu_2348_p2);
    and_ln44_3_fu_2364_p2 <= (m_from_e_d_i_is_load_fu_314 and icmp_ln44_3_fu_2359_p2);
    and_ln44_4_fu_2375_p2 <= (m_from_e_d_i_is_load_fu_314 and icmp_ln44_4_fu_2370_p2);
    and_ln44_fu_2331_p2 <= (m_from_e_d_i_is_load_fu_314 and icmp_ln44_fu_2326_p2);
    and_ln46_fu_2092_p2 <= (e_to_m_d_i_is_r_type_fu_318 and ap_phi_mux_f7_6_phi_fu_639_p4);
    and_ln99_1_fu_2679_p2 <= (icmp_ln99_fu_2675_p2 and icmp_ln93_1_fu_2648_p2);
    and_ln99_fu_2685_p2 <= (xor_ln92_2_fu_2644_p2 and and_ln99_1_fu_2679_p2);
    and_ln_fu_1653_p3 <= (a1_fu_1611_p3 & ap_const_lv1_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_1922_assign_proc : process(e_to_m_cancel_1_reg_611, m_from_e_d_i_is_store_load_reg_3430, ap_CS_fsm_state2)
    begin
                ap_condition_1922 <= ((m_from_e_d_i_is_store_load_reg_3430 = ap_const_lv1_1) and (e_to_m_cancel_1_reg_611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_CS_fsm_state3, or_ln21_3_fu_2904_p2)
    begin
        if (((or_ln21_3_fu_2904_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_state3, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_phi_mux_e_to_e_1_phi_fu_603_p4_assign_proc : process(ap_CS_fsm_state1, e_to_e_1_reg_600, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_phi_mux_e_to_e_1_phi_fu_603_p4 <= ap_const_lv1_1;
        else 
            ap_phi_mux_e_to_e_1_phi_fu_603_p4 <= e_to_e_1_reg_600;
        end if; 
    end process;


    ap_phi_mux_e_to_f_target_pc_3_phi_fu_800_p6_assign_proc : process(npc_reg_3775, ap_phi_mux_next_pc_phi_fu_773_p8, or_ln98_fu_2669_p2, and_ln100_fu_2705_p2, and_ln99_fu_2685_p2, ap_phi_reg_pp0_iter0_e_to_f_target_pc_3_reg_797)
    begin
        if (((or_ln98_fu_2669_p2 = ap_const_lv1_1) or ((or_ln98_fu_2669_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln99_fu_2685_p2) and (ap_const_lv1_0 = and_ln100_fu_2705_p2)))) then 
            ap_phi_mux_e_to_f_target_pc_3_phi_fu_800_p6 <= ap_phi_mux_next_pc_phi_fu_773_p8;
        elsif ((((or_ln98_fu_2669_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_2685_p2)) or ((or_ln98_fu_2669_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln100_fu_2705_p2)))) then 
            ap_phi_mux_e_to_f_target_pc_3_phi_fu_800_p6 <= npc_reg_3775;
        else 
            ap_phi_mux_e_to_f_target_pc_3_phi_fu_800_p6 <= ap_phi_reg_pp0_iter0_e_to_f_target_pc_3_reg_797;
        end if; 
    end process;


    ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4_assign_proc : process(ap_CS_fsm_state1, e_to_m_cancel_1_reg_611, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4 <= ap_const_lv1_1;
        else 
            ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4 <= e_to_m_cancel_1_reg_611;
        end if; 
    end process;


    ap_phi_mux_empty_phi_fu_786_p6_assign_proc : process(ap_phi_reg_pp0_iter0_empty_reg_783, or_ln98_fu_2669_p2, and_ln100_fu_2705_p2, and_ln99_fu_2685_p2)
    begin
        if (((or_ln98_fu_2669_p2 = ap_const_lv1_1) or ((or_ln98_fu_2669_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln99_fu_2685_p2) and (ap_const_lv1_0 = and_ln100_fu_2705_p2)))) then 
            ap_phi_mux_empty_phi_fu_786_p6 <= ap_const_lv1_0;
        elsif ((((or_ln98_fu_2669_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln99_fu_2685_p2)) or ((or_ln98_fu_2669_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln100_fu_2705_p2)))) then 
            ap_phi_mux_empty_phi_fu_786_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_empty_phi_fu_786_p6 <= ap_phi_reg_pp0_iter0_empty_reg_783;
        end if; 
    end process;


    ap_phi_mux_f7_6_phi_fu_639_p4_assign_proc : process(f7_6_reg_635, ap_CS_fsm_state2, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_phi_mux_f7_6_phi_fu_639_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_f7_6_phi_fu_639_p4 <= f7_6_reg_635;
        end if; 
    end process;


    ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12_assign_proc : process(instruction_reg_3663, ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26, f_to_e_d_i_imm_1_fu_2553_p5, ap_phi_reg_pp0_iter0_f_to_e_d_i_imm_6_reg_713, sext_ln41_fu_2487_p1, sext_ln40_fu_2508_p1, sext_ln39_fu_2522_p1)
    begin
        if ((not((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_2)) and not((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_3)) and not((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_4)) and not((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_5)) and not((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_6)))) then 
            ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12 <= ap_const_lv20_0;
        elsif ((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_2)) then 
            ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12 <= sext_ln39_fu_2522_p1;
        elsif ((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_3)) then 
            ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12 <= sext_ln40_fu_2508_p1;
        elsif ((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_4)) then 
            ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12 <= sext_ln41_fu_2487_p1;
        elsif ((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_5)) then 
            ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12 <= instruction_reg_3663(31 downto 12);
        elsif ((ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_6)) then 
            ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12 <= f_to_e_d_i_imm_1_fu_2553_p5;
        else 
            ap_phi_mux_f_to_e_d_i_imm_6_phi_fu_716_p12 <= ap_phi_reg_pp0_iter0_f_to_e_d_i_imm_6_reg_713;
        end if; 
    end process;


    ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26_assign_proc : process(opch_reg_3712, opcl_reg_3716)
    begin
        if (((opcl_reg_3716 = ap_const_lv3_0) and (opch_reg_3712 = ap_const_lv2_1))) then 
            ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 <= ap_const_lv3_3;
        elsif (((opcl_reg_3716 = ap_const_lv3_4) and (opch_reg_3712 = ap_const_lv2_1))) then 
            ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 <= ap_const_lv3_1;
        elsif ((((opcl_reg_3716 = ap_const_lv3_5) and (opch_reg_3712 = ap_const_lv2_0)) or ((opcl_reg_3716 = ap_const_lv3_5) and (opch_reg_3712 = ap_const_lv2_1)))) then 
            ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 <= ap_const_lv3_5;
        elsif (((opcl_reg_3716 = ap_const_lv3_0) and (opch_reg_3712 = ap_const_lv2_3))) then 
            ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 <= ap_const_lv3_4;
        elsif ((((opcl_reg_3716 = ap_const_lv3_4) and (opch_reg_3712 = ap_const_lv2_0)) or ((opcl_reg_3716 = ap_const_lv3_0) and (opch_reg_3712 = ap_const_lv2_0)) or ((opcl_reg_3716 = ap_const_lv3_1) and (opch_reg_3712 = ap_const_lv2_3)))) then 
            ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 <= ap_const_lv3_2;
        elsif (((opcl_reg_3716 = ap_const_lv3_3) and (opch_reg_3712 = ap_const_lv2_3))) then 
            ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 <= ap_const_lv3_6;
        else 
            ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 <= ap_const_lv3_7;
        end if; 
    end process;


    ap_phi_mux_m_to_w_cancel_1_phi_fu_626_p4_assign_proc : process(ap_CS_fsm_state1, m_to_w_cancel_1_reg_623, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_phi_mux_m_to_w_cancel_1_phi_fu_626_p4 <= ap_const_lv1_1;
        else 
            ap_phi_mux_m_to_w_cancel_1_phi_fu_626_p4 <= m_to_w_cancel_1_reg_623;
        end if; 
    end process;


    ap_phi_mux_next_pc_phi_fu_773_p8_assign_proc : process(f_to_e_d_i_type_reg_3642, npc_reg_3775, j_b_target_pc_reg_3783, ap_phi_reg_pp0_iter0_next_pc_reg_770, select_ln139_fu_2631_p3, select_ln133_fu_2638_p3)
    begin
        if ((not((f_to_e_d_i_type_reg_3642 = ap_const_lv3_4)) and not((f_to_e_d_i_type_reg_3642 = ap_const_lv3_2)) and not((f_to_e_d_i_type_reg_3642 = ap_const_lv3_6)))) then 
            ap_phi_mux_next_pc_phi_fu_773_p8 <= npc_reg_3775;
        elsif ((f_to_e_d_i_type_reg_3642 = ap_const_lv3_2)) then 
            ap_phi_mux_next_pc_phi_fu_773_p8 <= select_ln133_fu_2638_p3;
        elsif ((f_to_e_d_i_type_reg_3642 = ap_const_lv3_4)) then 
            ap_phi_mux_next_pc_phi_fu_773_p8 <= select_ln139_fu_2631_p3;
        elsif ((f_to_e_d_i_type_reg_3642 = ap_const_lv3_6)) then 
            ap_phi_mux_next_pc_phi_fu_773_p8 <= j_b_target_pc_reg_3783;
        else 
            ap_phi_mux_next_pc_phi_fu_773_p8 <= ap_phi_reg_pp0_iter0_next_pc_reg_770;
        end if; 
    end process;


    ap_phi_mux_result_25_phi_fu_650_p14_assign_proc : process(f_to_e_d_i_func3_reg_3490, xor_ln29_fu_1994_p2, grp_fu_810_p2, xor_ln23_fu_1977_p2, grp_fu_815_p2, icmp_ln16_fu_1984_p2, icmp_ln14_fu_1989_p2)
    begin
        if ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_0)) then 
            ap_phi_mux_result_25_phi_fu_650_p14 <= icmp_ln14_fu_1989_p2;
        elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_1)) then 
            ap_phi_mux_result_25_phi_fu_650_p14 <= icmp_ln16_fu_1984_p2;
        elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_4)) then 
            ap_phi_mux_result_25_phi_fu_650_p14 <= grp_fu_815_p2;
        elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_5)) then 
            ap_phi_mux_result_25_phi_fu_650_p14 <= xor_ln23_fu_1977_p2;
        elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_6)) then 
            ap_phi_mux_result_25_phi_fu_650_p14 <= grp_fu_810_p2;
        elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_7)) then 
            ap_phi_mux_result_25_phi_fu_650_p14 <= xor_ln29_fu_1994_p2;
        else 
            ap_phi_mux_result_25_phi_fu_650_p14 <= ap_const_lv1_0;
        end if; 
    end process;


    ap_phi_mux_result_26_phi_fu_734_p16_assign_proc : process(f_to_e_d_i_func3_reg_3490, result_11_reg_3740, result_5_reg_3760, ap_phi_reg_pp0_iter0_result_26_reg_731)
    begin
        if ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_1)) then 
            ap_phi_mux_result_26_phi_fu_734_p16 <= result_5_reg_3760;
        elsif ((f_to_e_d_i_func3_reg_3490 = ap_const_lv3_5)) then 
            ap_phi_mux_result_26_phi_fu_734_p16 <= result_11_reg_3740;
        else 
            ap_phi_mux_result_26_phi_fu_734_p16 <= ap_phi_reg_pp0_iter0_result_26_reg_731;
        end if; 
    end process;


    ap_phi_mux_result_27_phi_fu_755_p12_assign_proc : process(e_to_m_d_i_is_jalr_load_reg_3625, f_to_e_d_i_type_reg_3642, zext_ln109_fu_2614_p1, ap_phi_reg_pp0_iter0_result_27_reg_752, result_17_fu_2593_p3, grp_fu_820_p2, zext_ln86_fu_2609_p1, result_19_fu_2601_p3)
    begin
        if ((not((f_to_e_d_i_type_reg_3642 = ap_const_lv3_2)) and not((f_to_e_d_i_type_reg_3642 = ap_const_lv3_3)) and not((f_to_e_d_i_type_reg_3642 = ap_const_lv3_5)) and not((f_to_e_d_i_type_reg_3642 = ap_const_lv3_6)))) then 
            ap_phi_mux_result_27_phi_fu_755_p12 <= ap_const_lv32_0;
        elsif (((f_to_e_d_i_type_reg_3642 = ap_const_lv3_2) and (e_to_m_d_i_is_jalr_load_reg_3625 = ap_const_lv1_0))) then 
            ap_phi_mux_result_27_phi_fu_755_p12 <= result_19_fu_2601_p3;
        elsif (((f_to_e_d_i_type_reg_3642 = ap_const_lv3_2) and (e_to_m_d_i_is_jalr_load_reg_3625 = ap_const_lv1_1))) then 
            ap_phi_mux_result_27_phi_fu_755_p12 <= zext_ln86_fu_2609_p1;
        elsif ((f_to_e_d_i_type_reg_3642 = ap_const_lv3_3)) then 
            ap_phi_mux_result_27_phi_fu_755_p12 <= grp_fu_820_p2;
        elsif ((f_to_e_d_i_type_reg_3642 = ap_const_lv3_5)) then 
            ap_phi_mux_result_27_phi_fu_755_p12 <= result_17_fu_2593_p3;
        elsif ((f_to_e_d_i_type_reg_3642 = ap_const_lv3_6)) then 
            ap_phi_mux_result_27_phi_fu_755_p12 <= zext_ln109_fu_2614_p1;
        else 
            ap_phi_mux_result_27_phi_fu_755_p12 <= ap_phi_reg_pp0_iter0_result_27_reg_752;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_e_to_f_target_pc_3_reg_797 <= "XXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_reg_783 <= "X";
    ap_phi_reg_pp0_iter0_f_to_e_d_i_imm_6_reg_713 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_next_pc_reg_770 <= "XXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_result_25_reg_646 <= ap_const_lv1_0;
    ap_phi_reg_pp0_iter0_result_27_reg_752 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_e_to_f_target_pc_4_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, f_from_e_target_pc_fu_382, e_to_f_target_pc_fu_825_p1)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_e_to_f_target_pc_4 <= e_to_f_target_pc_fu_825_p1;
        else 
            ap_sig_allocacmp_e_to_f_target_pc_4 <= f_from_e_target_pc_fu_382;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_32_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_fu_410)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_32 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_32 <= reg_file_fu_410;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_33_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_1_fu_414)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_33 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_33 <= reg_file_1_fu_414;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_34_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_2_fu_418)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_34 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_34 <= reg_file_2_fu_418;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_35_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_3_fu_422)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_35 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_35 <= reg_file_3_fu_422;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_36_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_4_fu_426)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_36 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_36 <= reg_file_4_fu_426;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_37_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_5_fu_430)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_37 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_37 <= reg_file_5_fu_430;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_38_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_6_fu_434)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_38 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_38 <= reg_file_6_fu_434;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_39_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_7_fu_438)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_39 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_39 <= reg_file_7_fu_438;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_40_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_8_fu_442)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_40 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_40 <= reg_file_8_fu_442;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_41_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_9_fu_446)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_41 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_41 <= reg_file_9_fu_446;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_42_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_10_fu_450)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_42 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_42 <= reg_file_10_fu_450;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_43_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_11_fu_454)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_43 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_43 <= reg_file_11_fu_454;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_44_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_12_fu_458)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_44 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_44 <= reg_file_12_fu_458;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_45_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_13_fu_462)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_45 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_45 <= reg_file_13_fu_462;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_46_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_14_fu_466)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_46 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_46 <= reg_file_14_fu_466;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_47_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_15_fu_470)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_47 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_47 <= reg_file_15_fu_470;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_48_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_16_fu_474)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_48 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_48 <= reg_file_16_fu_474;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_49_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_17_fu_478)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_49 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_49 <= reg_file_17_fu_478;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_50_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_18_fu_482)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_50 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_50 <= reg_file_18_fu_482;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_51_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_19_fu_486)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_51 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_51 <= reg_file_19_fu_486;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_52_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_20_fu_490)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_52 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_52 <= reg_file_20_fu_490;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_53_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_21_fu_494)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_53 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_53 <= reg_file_21_fu_494;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_54_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_22_fu_498)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_54 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_54 <= reg_file_22_fu_498;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_55_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_23_fu_502)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_55 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_55 <= reg_file_23_fu_502;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_56_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_24_fu_506)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_56 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_56 <= reg_file_24_fu_506;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_57_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_25_fu_510)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_57 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_57 <= reg_file_25_fu_510;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_58_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_26_fu_514)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_58 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_58 <= reg_file_26_fu_514;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_59_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_27_fu_518)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_59 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_59 <= reg_file_27_fu_518;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_60_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_28_fu_522)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_60 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_60 <= reg_file_28_fu_522;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_61_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_29_fu_526)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_61 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_61 <= reg_file_29_fu_526;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_62_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_30_fu_530)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_62 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_62 <= reg_file_30_fu_530;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_63_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, reg_file_31_fu_538)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_63 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_reg_file_63 <= reg_file_31_fu_538;
        end if; 
    end process;

    b_fu_2273_p10 <= ((icmp_ln31_2_fu_2248_p2 & icmp_ln31_3_fu_2253_p2) & icmp_ln31_4_fu_2258_p2);
    b_fu_2273_p2 <= data_ram_q0(23 downto 16);
    b_fu_2273_p4 <= data_ram_q0(15 downto 8);
    b_fu_2273_p6 <= data_ram_q0(8 - 1 downto 0);
    b_fu_2273_p8 <= data_ram_q0(31 downto 24);
    b_fu_2273_p9 <= "XXXXXXXX";
    bypass_rs1_fu_1514_p2 <= (w_bp_1_fu_1508_p2 or m_bp_1_fu_1472_p2);
    bypass_rs2_fu_1562_p2 <= (w_bp_2_fu_1556_p2 or m_bp_2_fu_1538_p2);
    c_nbi_fu_2881_p2 <= std_logic_vector(unsigned(zext_ln27_fu_2878_p1) + unsigned(counter_nbi_fu_362));
    code_ram_address0 <= zext_ln8_fu_1150_p1(15 - 1 downto 0);

    code_ram_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            code_ram_ce0_local <= ap_const_logic_1;
        else 
            code_ram_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    d_imm_inst_11_8_fu_2445_p4 <= instruction_reg_3663(11 downto 8);
    d_imm_inst_31_fu_2438_p3 <= instruction_reg_3663(31 downto 31);
    d_imm_inst_7_fu_2454_p3 <= instruction_reg_3663(7 downto 7);

    data_ram_address0_local_assign_proc : process(ap_CS_fsm_state1, e_to_m_cancel_1_reg_611, m_from_e_d_i_is_store_load_reg_3430, data_ram_addr_reg_3566, msize_1_reg_3576, ap_CS_fsm_state2, ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4, zext_ln18_fu_1629_p1)
    begin
        if ((((m_from_e_d_i_is_store_load_reg_3430 = ap_const_lv1_1) and (e_to_m_cancel_1_reg_611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_1_reg_3576 = ap_const_lv2_0)) or ((m_from_e_d_i_is_store_load_reg_3430 = ap_const_lv1_1) and (e_to_m_cancel_1_reg_611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_1_reg_3576 = ap_const_lv2_1)) or ((m_from_e_d_i_is_store_load_reg_3430 = ap_const_lv1_1) and (e_to_m_cancel_1_reg_611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_1_reg_3576 = ap_const_lv2_2)))) then 
            data_ram_address0_local <= data_ram_addr_reg_3566;
        elsif (((ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            data_ram_address0_local <= zext_ln18_fu_1629_p1(15 - 1 downto 0);
        else 
            data_ram_address0_local <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, e_to_m_cancel_1_reg_611, ap_block_state1_pp0_stage0_iter0, m_from_e_d_i_is_store_load_reg_3430, msize_1_reg_3576, ap_CS_fsm_state2, ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((m_from_e_d_i_is_store_load_reg_3430 = ap_const_lv1_1) and (e_to_m_cancel_1_reg_611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_1_reg_3576 = ap_const_lv2_0)) or ((m_from_e_d_i_is_store_load_reg_3430 = ap_const_lv1_1) and (e_to_m_cancel_1_reg_611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_1_reg_3576 = ap_const_lv2_1)) or ((m_from_e_d_i_is_store_load_reg_3430 = ap_const_lv1_1) and (e_to_m_cancel_1_reg_611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_1_reg_3576 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            data_ram_ce0_local <= ap_const_logic_1;
        else 
            data_ram_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    data_ram_d0_local_assign_proc : process(e_to_m_rv2_1_load_reg_3571, msize_1_reg_3576, shl_ln79_2_reg_3585, shl_ln76_2_reg_3595, ap_condition_1922)
    begin
        if ((ap_const_boolean_1 = ap_condition_1922)) then
            if ((msize_1_reg_3576 = ap_const_lv2_0)) then 
                data_ram_d0_local <= shl_ln76_2_reg_3595;
            elsif ((msize_1_reg_3576 = ap_const_lv2_1)) then 
                data_ram_d0_local <= shl_ln79_2_reg_3585;
            elsif ((msize_1_reg_3576 = ap_const_lv2_2)) then 
                data_ram_d0_local <= e_to_m_rv2_1_load_reg_3571;
            else 
                data_ram_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            data_ram_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_we0_local_assign_proc : process(msize_1_reg_3576, shl_ln79_reg_3580, shl_ln76_reg_3590, ap_condition_1922)
    begin
        if ((ap_const_boolean_1 = ap_condition_1922)) then
            if ((msize_1_reg_3576 = ap_const_lv2_0)) then 
                data_ram_we0_local <= shl_ln76_reg_3590;
            elsif ((msize_1_reg_3576 = ap_const_lv2_1)) then 
                data_ram_we0_local <= shl_ln79_reg_3580;
            elsif ((msize_1_reg_3576 = ap_const_lv2_2)) then 
                data_ram_we0_local <= ap_const_lv4_F;
            else 
                data_ram_we0_local <= ap_const_lv4_0;
            end if;
        else 
            data_ram_we0_local <= ap_const_lv4_0;
        end if; 
    end process;

    e_to_f_set_pc_fu_2726_p2 <= (xor_ln98_fu_2658_p2 and or_ln102_2_fu_2720_p2);
    e_to_f_target_pc_fu_825_p1 <= start_pc(15 - 1 downto 0);
    e_to_m_result_fu_2736_p3 <= 
        zext_ln110_fu_2732_p1 when (e_to_m_d_i_is_ret_load_reg_3615(0) = '1') else 
        result_21_fu_2623_p3;
    f_to_e_d_i_func3_load_fu_1139_p1 <= e_to_m_d_i_func3_fu_546;
    f_to_e_d_i_has_no_dest_fu_1888_p2 <= (or_ln21_fu_1882_p2 or f_to_e_d_i_is_store_fu_1834_p2);
    f_to_e_d_i_imm_1_fu_2553_p5 <= (((d_imm_inst_31_fu_2438_p3 & d_imm_inst_19_12_reg_3683) & tmp_fu_2537_p3) & tmp_1_fu_2544_p4);
    f_to_e_d_i_imm_3_fu_2513_p4 <= instruction_reg_3663(31 downto 20);
    f_to_e_d_i_imm_4_fu_2501_p3 <= (tmp_2_fu_2492_p4 & f_to_e_d_i_rd_1_reg_3677);
    f_to_e_d_i_imm_5_fu_2475_p5 <= (((d_imm_inst_31_fu_2438_p3 & d_imm_inst_7_fu_2454_p3) & tmp_4_fu_2466_p4) & d_imm_inst_11_8_fu_2445_p4);
    f_to_e_d_i_is_branch_fu_1840_p2 <= "1" when (f_to_e_d_i_opcode_fu_1768_p4 = ap_const_lv5_18) else "0";
    f_to_e_d_i_is_jal_fu_1852_p2 <= "1" when (f_to_e_d_i_opcode_fu_1768_p4 = ap_const_lv5_1B) else "0";
    f_to_e_d_i_is_jalr_fu_1846_p2 <= "1" when (f_to_e_d_i_opcode_fu_1768_p4 = ap_const_lv5_19) else "0";
    f_to_e_d_i_is_load_fu_1828_p2 <= "1" when (f_to_e_d_i_opcode_fu_1768_p4 = ap_const_lv5_0) else "0";
    f_to_e_d_i_is_lui_fu_1864_p2 <= "1" when (f_to_e_d_i_opcode_fu_1768_p4 = ap_const_lv5_D) else "0";
    f_to_e_d_i_is_op_imm_fu_1870_p2 <= "1" when (f_to_e_d_i_opcode_fu_1768_p4 = ap_const_lv5_4) else "0";
    f_to_e_d_i_is_r_type_fu_2432_p2 <= "1" when (ap_phi_mux_f_to_e_d_i_type_1_phi_fu_672_p26 = ap_const_lv3_1) else "0";
    f_to_e_d_i_is_ret_fu_1858_p2 <= "1" when (code_ram_q0 = ap_const_lv32_8067) else "0";
    f_to_e_d_i_is_store_fu_1834_p2 <= "1" when (f_to_e_d_i_opcode_fu_1768_p4 = ap_const_lv5_8) else "0";
    f_to_e_d_i_opcode_fu_1768_p4 <= code_ram_q0(6 downto 2);
    f_to_e_d_i_rd_1_fu_1778_p4 <= code_ram_q0(11 downto 7);
    f_to_f_fu_1763_p2 <= std_logic_vector(unsigned(pc_reg_3495) + unsigned(ap_const_lv15_1));
    grp_fu_810_p2 <= "1" when (unsigned(rv1_reg_3511) < unsigned(rv2_reg_3535)) else "0";
    grp_fu_815_p2 <= "1" when (signed(rv1_reg_3511) < signed(rv2_reg_3535)) else "0";
    grp_fu_820_p2 <= std_logic_vector(unsigned(rv1_reg_3511) + unsigned(sext_ln82_reg_3730));
    h0_fu_2214_p1 <= data_ram_q0(16 - 1 downto 0);
    h1_fu_2238_p4 <= data_ram_q0(31 downto 16);
    h_fu_2305_p3 <= 
        h1_fu_2238_p4 when (a1_reg_3561(0) = '1') else 
        h0_fu_2214_p1;
    icmp_ln100_fu_2691_p2 <= "1" when (f_to_e_d_i_rd_reg_3651 = f_to_e_d_i_rs2_1_reg_3700) else "0";
    icmp_ln14_fu_1989_p2 <= "1" when (rv1_reg_3511 = rv2_reg_3535) else "0";
    icmp_ln16_fu_1984_p2 <= "0" when (rv1_reg_3511 = rv2_reg_3535) else "1";
    icmp_ln21_2_fu_2893_p2 <= "0" when (m_to_w_result_2_reg_3448 = ap_const_lv32_0) else "1";
    icmp_ln21_fu_1876_p2 <= "1" when (f_to_e_d_i_rd_1_fu_1778_p4 = ap_const_lv5_0) else "0";
    icmp_ln31_1_fu_1460_p2 <= "1" when (e_to_m_d_i_rs1_fu_398 = m_to_w_rd_fu_542) else "0";
    icmp_ln31_2_fu_2248_p2 <= "1" when (a01_reg_3554 = ap_const_lv2_2) else "0";
    icmp_ln31_3_fu_2253_p2 <= "1" when (a01_reg_3554 = ap_const_lv2_1) else "0";
    icmp_ln31_4_fu_2258_p2 <= "1" when (a01_reg_3554 = ap_const_lv2_0) else "0";
    icmp_ln31_fu_1454_p2 <= "0" when (e_to_m_d_i_rs1_fu_398 = ap_const_lv5_0) else "1";
    icmp_ln33_fu_1496_p2 <= "1" when (e_to_m_d_i_rs1_fu_398 = w_from_m_rd_fu_366) else "0";
    icmp_ln36_1_fu_1526_p2 <= "1" when (e_to_m_d_i_rs2_fu_394 = m_to_w_rd_fu_542) else "0";
    icmp_ln36_fu_1520_p2 <= "0" when (e_to_m_d_i_rs2_fu_394 = ap_const_lv5_0) else "1";
    icmp_ln38_fu_1544_p2 <= "1" when (e_to_m_d_i_rs2_fu_394 = w_from_m_rd_fu_366) else "0";
    icmp_ln44_1_fu_2337_p2 <= "1" when (msize_load_reg_3545 = ap_const_lv3_2) else "0";
    icmp_ln44_2_fu_2348_p2 <= "1" when (msize_load_reg_3545 = ap_const_lv3_1) else "0";
    icmp_ln44_3_fu_2359_p2 <= "1" when (msize_load_reg_3545 = ap_const_lv3_0) else "0";
    icmp_ln44_4_fu_2370_p2 <= "1" when (msize_load_reg_3545 = ap_const_lv3_5) else "0";
    icmp_ln44_fu_2326_p2 <= "1" when (msize_load_reg_3545 = ap_const_lv3_4) else "0";
    icmp_ln93_1_fu_2648_p2 <= "0" when (f_to_e_d_i_rs1_1_reg_3693 = ap_const_lv5_0) else "1";
    icmp_ln93_fu_2164_p2 <= "1" when (f_to_e_d_i_opcode_fu_1768_p4 = ap_const_lv5_5) else "0";
    icmp_ln97_fu_2653_p2 <= "0" when (f_to_e_d_i_rs2_1_reg_3700 = ap_const_lv5_0) else "1";
    icmp_ln99_fu_2675_p2 <= "1" when (f_to_e_d_i_rd_reg_3651 = f_to_e_d_i_rs1_1_reg_3693) else "0";
    imm12_fu_2565_p3 <= (f_to_e_d_i_imm_reg_3637 & ap_const_lv12_0);
    j_b_target_pc_fu_2137_p2 <= std_logic_vector(unsigned(trunc_ln2_fu_2127_p4) + unsigned(pc_1_fu_402));
    m_bp_1_fu_1472_p2 <= (icmp_ln31_fu_1454_p2 and and_ln30_fu_1466_p2);
    m_bp_2_fu_1538_p2 <= (icmp_ln36_fu_1520_p2 and and_ln35_fu_1532_p2);
        m_to_w_result_fu_2397_p10 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_fu_2273_p11),32));

    m_to_w_result_fu_2397_p12 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fu_2305_p3),32));
    m_to_w_result_fu_2397_p15 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    m_to_w_result_fu_2397_p16 <= (((((sel_tmp5_fu_2320_p2 & and_ln44_fu_2331_p2) & and_ln44_1_fu_2342_p2) & and_ln44_2_fu_2353_p2) & and_ln44_3_fu_2364_p2) & and_ln44_4_fu_2375_p2);
    m_to_w_result_fu_2397_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_fu_2273_p11),32));
        m_to_w_result_fu_2397_p8 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_fu_2305_p3),32));

    msize_1_fu_1637_p1 <= msize_fu_370(2 - 1 downto 0);

    nb_cycle_ap_vld_assign_proc : process(ap_CS_fsm_state3, or_ln21_3_fu_2904_p2, ap_loop_exit_ready)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (or_ln21_3_fu_2904_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            nb_cycle_ap_vld <= ap_const_logic_1;
        else 
            nb_cycle_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    nb_instruction <= std_logic_vector(unsigned(zext_ln27_fu_2878_p1) + unsigned(counter_nbi_fu_362));

    nb_instruction_ap_vld_assign_proc : process(ap_CS_fsm_state3, or_ln21_3_fu_2904_p2, ap_loop_exit_ready)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (or_ln21_3_fu_2904_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            nb_instruction_ap_vld <= ap_const_logic_1;
        else 
            nb_instruction_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    npc4_fu_2577_p2 <= std_logic_vector(unsigned(pc4_fu_2572_p2) + unsigned(ap_const_lv15_4));
    npc_fu_2121_p2 <= std_logic_vector(unsigned(pc_1_fu_402) + unsigned(ap_const_lv15_1));
    or_ln102_1_fu_2716_p2 <= (taken_branch_reg_3725 or e_to_m_d_i_is_jalr_load_reg_3625);
    or_ln102_2_fu_2720_p2 <= (or_ln102_fu_2711_p2 or or_ln102_1_fu_2716_p2);
    or_ln102_fu_2711_p2 <= (e_to_m_d_i_is_jal_load_reg_3620 or ap_phi_mux_empty_phi_fu_786_p6);
    or_ln21_2_fu_2898_p2 <= (xor_ln21_fu_2888_p2 or icmp_ln21_2_fu_2893_p2);
    or_ln21_3_fu_2904_p2 <= (or_ln21_2_fu_2898_p2 or m_to_w_cancel_1_reg_623);
    or_ln21_fu_1882_p2 <= (icmp_ln21_fu_1876_p2 or f_to_e_d_i_is_branch_fu_1840_p2);
    or_ln30_fu_1442_p2 <= (m_to_w_has_no_dest_fu_302 or ap_phi_mux_e_to_m_cancel_1_phi_fu_614_p4);
    or_ln32_fu_1484_p2 <= (w_from_m_has_no_dest_fu_294 or ap_phi_mux_m_to_w_cancel_1_phi_fu_626_p4);
    or_ln85_fu_2619_p2 <= (e_to_m_d_i_is_r_type_load_reg_3720 or e_to_m_d_i_is_op_imm_load_reg_3605);
    or_ln98_fu_2669_p2 <= (xor_ln98_1_fu_2664_p2 or e_to_e_1_reg_600);
    pc4_fu_2572_p2 <= std_logic_vector(shift_left(unsigned(f_to_e_pc_reg_3646),to_integer(unsigned('0' & ap_const_lv15_2(15-1 downto 0)))));
    pc_fu_1142_p3 <= 
        ap_sig_allocacmp_e_to_f_target_pc_4 when (ap_phi_mux_e_to_e_1_phi_fu_603_p4(0) = '1') else 
        f_to_f_1_fu_406;
    r1_fu_1170_p65 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    r2_fu_1306_p65 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    result_10_fu_2047_p2 <= std_logic_vector(shift_right(unsigned(rv1_reg_3511),to_integer(unsigned('0' & zext_ln60_fu_2038_p1(31-1 downto 0)))));
    result_11_fu_2052_p3 <= 
        result_9_fu_2042_p2 when (ap_phi_mux_f7_6_phi_fu_639_p4(0) = '1') else 
        result_10_fu_2047_p2;
    result_12_fu_2033_p2 <= (rv1_reg_3511 or rs_fu_2015_p3);
    result_16_fu_2587_p2 <= std_logic_vector(unsigned(imm12_fu_2565_p3) + unsigned(zext_ln106_fu_2583_p1));
    result_17_fu_2593_p3 <= 
        imm12_fu_2565_p3 when (e_to_m_d_i_is_lui_load_reg_3610(0) = '1') else 
        result_16_fu_2587_p2;
    result_19_fu_2601_p3 <= 
        grp_fu_820_p2 when (e_to_m_d_i_is_load_load_reg_3631(0) = '1') else 
        ap_const_lv32_0;
    result_21_fu_2623_p3 <= 
        ap_phi_mux_result_26_phi_fu_734_p16 when (or_ln85_fu_2619_p2(0) = '1') else 
        ap_phi_mux_result_27_phi_fu_755_p12;
    result_2_fu_2098_p2 <= std_logic_vector(unsigned(rv1_reg_3511) - unsigned(rs_fu_2015_p3));
    result_3_fu_2103_p2 <= std_logic_vector(unsigned(rs_fu_2015_p3) + unsigned(rv1_reg_3511));
    result_4_fu_2108_p3 <= 
        result_2_fu_2098_p2 when (and_ln46_fu_2092_p2(0) = '1') else 
        result_3_fu_2103_p2;
    result_5_fu_2087_p2 <= std_logic_vector(shift_left(unsigned(rv1_reg_3511),to_integer(unsigned('0' & zext_ln51_fu_2083_p1(31-1 downto 0)))));
    result_6_fu_2074_p2 <= "1" when (signed(rv1_reg_3511) < signed(rs_fu_2015_p3)) else "0";
    result_7_fu_2065_p2 <= "1" when (unsigned(rv1_reg_3511) < unsigned(rs_fu_2015_p3)) else "0";
    result_8_fu_2060_p2 <= (rv1_reg_3511 xor rs_fu_2015_p3);
    result_9_fu_2042_p2 <= std_logic_vector(shift_right(signed(rv1_reg_3511),to_integer(unsigned('0' & zext_ln60_fu_2038_p1(31-1 downto 0)))));
    result_fu_2116_p2 <= (rv1_reg_3511 and rs_fu_2015_p3);
    rs_fu_2015_p3 <= 
        rv2_reg_3535 when (e_to_m_d_i_is_r_type_fu_318(0) = '1') else 
        sext_ln82_fu_2007_p1;
    rv1_fu_1576_p3 <= 
        select_ln8_fu_1568_p3 when (bypass_rs1_fu_1514_p2(0) = '1') else 
        r1_fu_1170_p67;
    rv2_01_fu_1645_p1 <= e_to_m_rv2_1_fu_374(16 - 1 downto 0);
    rv2_0_fu_1641_p1 <= e_to_m_rv2_1_fu_374(8 - 1 downto 0);
    rv2_fu_1596_p3 <= 
        select_ln8_1_fu_1588_p3 when (bypass_rs2_fu_1562_p2(0) = '1') else 
        r2_fu_1306_p67;
    sel_tmp5_fu_2320_p2 <= (m_from_e_d_i_is_load_fu_314 xor ap_const_lv1_1);
    select_ln133_fu_2638_p3 <= 
        i_target_pc_reg_3789 when (e_to_m_d_i_is_jalr_load_reg_3625(0) = '1') else 
        npc_reg_3775;
    select_ln139_fu_2631_p3 <= 
        j_b_target_pc_reg_3783 when (result_25_reg_646(0) = '1') else 
        npc_reg_3775;
    select_ln8_1_fu_1588_p3 <= 
        m_from_e_result_fu_378 when (m_bp_2_fu_1538_p2(0) = '1') else 
        m_to_w_result_3_fu_534;
    select_ln8_fu_1568_p3 <= 
        m_from_e_result_fu_378 when (m_bp_1_fu_1472_p2(0) = '1') else 
        m_to_w_result_3_fu_534;
        sext_ln39_fu_2522_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(f_to_e_d_i_imm_3_fu_2513_p4),20));

        sext_ln40_fu_2508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(f_to_e_d_i_imm_4_fu_2501_p3),20));

        sext_ln41_fu_2487_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(f_to_e_d_i_imm_5_fu_2475_p5),20));

    sext_ln82_fu_2007_p0 <= e_to_m_d_i_imm_fu_386;
        sext_ln82_fu_2007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln82_fu_2007_p0),32));

    shift_1_fu_2026_p3 <= 
        shift_fu_2022_p1 when (e_to_m_d_i_is_r_type_fu_318(0) = '1') else 
        f_to_e_d_i_rs2_reg_3443;
    shift_fu_2022_p1 <= rs_fu_2015_p3(5 - 1 downto 0);
    shl_ln76_1_fu_1703_p3 <= (a01_fu_1607_p1 & ap_const_lv3_0);
    shl_ln76_2_fu_1715_p2 <= std_logic_vector(shift_left(unsigned(zext_ln76_fu_1689_p1),to_integer(unsigned('0' & zext_ln76_2_fu_1711_p1(31-1 downto 0)))));
    shl_ln76_fu_1697_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln76_1_fu_1693_p1(4-1 downto 0)))));
    shl_ln79_1_fu_1671_p3 <= (a1_fu_1611_p3 & ap_const_lv4_0);
    shl_ln79_2_fu_1683_p2 <= std_logic_vector(shift_left(unsigned(zext_ln79_fu_1649_p1),to_integer(unsigned('0' & zext_ln79_2_fu_1679_p1(31-1 downto 0)))));
    shl_ln79_fu_1665_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln79_1_fu_1661_p1(4-1 downto 0)))));
    taken_branch_fu_2001_p2 <= (e_to_m_d_i_is_branch_fu_346 and ap_phi_mux_result_25_phi_fu_650_p14);
    tmp_1_fu_2544_p4 <= instruction_reg_3663(30 downto 21);
    tmp_2_fu_2492_p4 <= instruction_reg_3663(31 downto 25);
    tmp_4_fu_2466_p4 <= instruction_reg_3663(30 downto 25);
    tmp_fu_2537_p3 <= instruction_reg_3663(20 downto 20);
    trunc_ln2_fu_2127_p1 <= e_to_m_d_i_imm_fu_386;
    trunc_ln2_fu_2127_p4 <= trunc_ln2_fu_2127_p1(15 downto 1);
    trunc_ln59_fu_1584_p1 <= rv1_fu_1576_p3(17 - 1 downto 0);
    trunc_ln81_fu_2011_p0 <= e_to_m_d_i_imm_fu_386;
    trunc_ln81_fu_2011_p1 <= trunc_ln81_fu_2011_p0(17 - 1 downto 0);
    w_bp_1_fu_1508_p2 <= (icmp_ln31_fu_1454_p2 and and_ln32_fu_1502_p2);
    w_bp_2_fu_1556_p2 <= (icmp_ln38_fu_1544_p2 and and_ln37_fu_1550_p2);
    xor_ln21_fu_2888_p2 <= (is_ret_load_reg_3600 xor ap_const_lv1_1);
    xor_ln23_fu_1977_p2 <= (grp_fu_815_p2 xor ap_const_lv1_1);
    xor_ln29_fu_1994_p2 <= (grp_fu_810_p2 xor ap_const_lv1_1);
    xor_ln30_fu_1448_p2 <= (or_ln30_fu_1442_p2 xor ap_const_lv1_1);
    xor_ln32_1_fu_1490_p2 <= (or_ln32_fu_1484_p2 xor ap_const_lv1_1);
    xor_ln32_fu_1478_p2 <= (ap_phi_mux_m_to_w_cancel_1_phi_fu_626_p4 xor ap_const_lv1_1);
    xor_ln92_1_fu_2170_p2 <= (xor_ln92_fu_2158_p2 xor icmp_ln93_fu_2164_p2);
    xor_ln92_2_fu_2644_p2 <= (xor_ln92_1_reg_3794 xor f_to_e_d_i_is_jal_reg_3707);
    xor_ln92_fu_2158_p2 <= (f_to_e_d_i_is_lui_fu_1864_p2 xor ap_const_lv1_1);
    xor_ln94_1_fu_2182_p2 <= (f_to_e_d_i_is_jalr_fu_1846_p2 xor f_to_e_d_i_is_jal_fu_1852_p2);
    xor_ln94_2_fu_2188_p2 <= (xor_ln94_1_fu_2182_p2 xor f_to_e_d_i_is_load_fu_1828_p2);
    xor_ln94_3_fu_2194_p2 <= (xor_ln94_fu_2176_p2 xor xor_ln94_2_fu_2188_p2);
    xor_ln94_fu_2176_p2 <= (f_to_e_d_i_is_op_imm_fu_1870_p2 xor ap_const_lv1_1);
    xor_ln98_1_fu_2664_p2 <= (e_to_m_d_i_is_load_load_reg_3631 xor ap_const_lv1_1);
    xor_ln98_fu_2658_p2 <= (e_to_e_1_reg_600 xor ap_const_lv1_1);
    zext_ln106_fu_2583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pc4_fu_2572_p2),32));
    zext_ln109_fu_2614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_2577_p2),32));
    zext_ln110_fu_2732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_e_to_f_target_pc_3_phi_fu_800_p6),32));
    zext_ln18_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a2_fu_1619_p4),64));
    zext_ln27_fu_2878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln32_reg_3506),32));
    zext_ln51_fu_2083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_1_fu_2026_p3),32));
    zext_ln53_fu_2079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_6_fu_2074_p2),32));
    zext_ln55_fu_2070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_7_fu_2065_p2),32));
    zext_ln60_fu_2038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_1_fu_2026_p3),32));
    zext_ln76_1_fu_1693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a01_fu_1607_p1),4));
    zext_ln76_2_fu_1711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln76_1_fu_1703_p3),32));
    zext_ln76_fu_1689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_0_fu_1641_p1),32));
    zext_ln79_1_fu_1661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_1653_p3),4));
    zext_ln79_2_fu_1679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln79_1_fu_1671_p3),32));
    zext_ln79_fu_1649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_01_fu_1645_p1),32));
    zext_ln86_fu_2609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_2577_p2),32));
    zext_ln8_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pc_fu_1142_p3),64));
end behav;
