

================================================================
== Vitis HLS Report for 'rv32i_pp_ip_Pipeline_VITIS_LOOP_58_2'
================================================================
* Date:           Tue May  3 18:52:26 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        rv32i_pp_ip
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.693 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_58_2  |        ?|        ?|         3|          3|          3|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 3, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.69>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%w_from_m_has_no_dest_V = alloca i32 1"   --->   Operation 6 'alloca' 'w_from_m_has_no_dest_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%phi_ln947 = alloca i32 1"   --->   Operation 7 'alloca' 'phi_ln947' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_load_V = alloca i32 1"   --->   Operation 8 'alloca' 'e_to_m_d_i_is_load_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_store_V = alloca i32 1"   --->   Operation 9 'alloca' 'e_to_m_d_i_is_store_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_branch_V = alloca i32 1"   --->   Operation 10 'alloca' 'e_to_m_d_i_is_branch_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_jalr_V = alloca i32 1"   --->   Operation 11 'alloca' 'e_to_m_d_i_is_jalr_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_jal_V = alloca i32 1"   --->   Operation 12 'alloca' 'e_to_m_d_i_is_jal_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_ret_V = alloca i32 1"   --->   Operation 13 'alloca' 'e_to_m_d_i_is_ret_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_lui_V = alloca i32 1"   --->   Operation 14 'alloca' 'e_to_m_d_i_is_lui_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_op_imm_V = alloca i32 1"   --->   Operation 15 'alloca' 'e_to_m_d_i_is_op_imm_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%e_to_m_d_i_has_no_dest_V = alloca i32 1"   --->   Operation 16 'alloca' 'e_to_m_d_i_has_no_dest_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_r_type_V = alloca i32 1"   --->   Operation 17 'alloca' 'e_to_m_d_i_is_r_type_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%m_to_w_has_no_dest_V = alloca i32 1"   --->   Operation 18 'alloca' 'm_to_w_has_no_dest_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%m_to_w_is_ret_V = alloca i32 1"   --->   Operation 19 'alloca' 'm_to_w_is_ret_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%m_from_e_d_i_is_store_V = alloca i32 1"   --->   Operation 20 'alloca' 'm_from_e_d_i_is_store_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%m_from_e_d_i_is_load_V = alloca i32 1"   --->   Operation 21 'alloca' 'm_from_e_d_i_is_load_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%nbc = alloca i32 1"   --->   Operation 22 'alloca' 'nbc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%nbi = alloca i32 1"   --->   Operation 23 'alloca' 'nbi' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%w_from_m_rd_V = alloca i32 1"   --->   Operation 24 'alloca' 'w_from_m_rd_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%pc_V_1 = alloca i32 1"   --->   Operation 25 'alloca' 'pc_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%e_to_m_d_i_rd_V = alloca i32 1"   --->   Operation 26 'alloca' 'e_to_m_d_i_rd_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%e_to_m_d_i_rs1_V = alloca i32 1"   --->   Operation 27 'alloca' 'e_to_m_d_i_rs1_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%e_to_m_d_i_rs2_V = alloca i32 1"   --->   Operation 28 'alloca' 'e_to_m_d_i_rs2_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%msize_V = alloca i32 1"   --->   Operation 29 'alloca' 'msize_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%rv2_1 = alloca i32 1"   --->   Operation 30 'alloca' 'rv2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%m_from_e_result = alloca i32 1"   --->   Operation 31 'alloca' 'm_from_e_result' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%e_to_m_d_i_imm_V = alloca i32 1"   --->   Operation 32 'alloca' 'e_to_m_d_i_imm_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%e_to_m_d_i_type_V = alloca i32 1"   --->   Operation 33 'alloca' 'e_to_m_d_i_type_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%reg_file = alloca i32 1"   --->   Operation 34 'alloca' 'reg_file' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%reg_file_1 = alloca i32 1"   --->   Operation 35 'alloca' 'reg_file_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%reg_file_2 = alloca i32 1"   --->   Operation 36 'alloca' 'reg_file_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%reg_file_3 = alloca i32 1"   --->   Operation 37 'alloca' 'reg_file_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%reg_file_4 = alloca i32 1"   --->   Operation 38 'alloca' 'reg_file_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%reg_file_5 = alloca i32 1"   --->   Operation 39 'alloca' 'reg_file_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%reg_file_6 = alloca i32 1"   --->   Operation 40 'alloca' 'reg_file_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%reg_file_7 = alloca i32 1"   --->   Operation 41 'alloca' 'reg_file_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%reg_file_8 = alloca i32 1"   --->   Operation 42 'alloca' 'reg_file_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%reg_file_9 = alloca i32 1"   --->   Operation 43 'alloca' 'reg_file_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%reg_file_10 = alloca i32 1"   --->   Operation 44 'alloca' 'reg_file_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%reg_file_11 = alloca i32 1"   --->   Operation 45 'alloca' 'reg_file_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%reg_file_12 = alloca i32 1"   --->   Operation 46 'alloca' 'reg_file_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%reg_file_13 = alloca i32 1"   --->   Operation 47 'alloca' 'reg_file_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%reg_file_14 = alloca i32 1"   --->   Operation 48 'alloca' 'reg_file_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%reg_file_15 = alloca i32 1"   --->   Operation 49 'alloca' 'reg_file_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%reg_file_16 = alloca i32 1"   --->   Operation 50 'alloca' 'reg_file_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%reg_file_17 = alloca i32 1"   --->   Operation 51 'alloca' 'reg_file_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%reg_file_18 = alloca i32 1"   --->   Operation 52 'alloca' 'reg_file_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%reg_file_19 = alloca i32 1"   --->   Operation 53 'alloca' 'reg_file_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%reg_file_20 = alloca i32 1"   --->   Operation 54 'alloca' 'reg_file_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%reg_file_21 = alloca i32 1"   --->   Operation 55 'alloca' 'reg_file_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%reg_file_22 = alloca i32 1"   --->   Operation 56 'alloca' 'reg_file_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%reg_file_23 = alloca i32 1"   --->   Operation 57 'alloca' 'reg_file_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%reg_file_24 = alloca i32 1"   --->   Operation 58 'alloca' 'reg_file_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%reg_file_25 = alloca i32 1"   --->   Operation 59 'alloca' 'reg_file_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%reg_file_26 = alloca i32 1"   --->   Operation 60 'alloca' 'reg_file_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%reg_file_27 = alloca i32 1"   --->   Operation 61 'alloca' 'reg_file_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%reg_file_28 = alloca i32 1"   --->   Operation 62 'alloca' 'reg_file_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%reg_file_29 = alloca i32 1"   --->   Operation 63 'alloca' 'reg_file_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%reg_file_30 = alloca i32 1"   --->   Operation 64 'alloca' 'reg_file_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%reg_file_31 = alloca i32 1"   --->   Operation 65 'alloca' 'reg_file_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%reg_file_32 = alloca i32 1"   --->   Operation 66 'alloca' 'reg_file_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%e_to_m_d_i_func3_V = alloca i32 1"   --->   Operation 67 'alloca' 'e_to_m_d_i_func3_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%m_to_w_rd_V = alloca i32 1"   --->   Operation 68 'alloca' 'm_to_w_rd_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%f_to_e_pc_V = alloca i32 1"   --->   Operation 69 'alloca' 'f_to_e_pc_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i32 %data_ram"   --->   Operation 70 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %data_ram, i64 666, i64 207, i64 1"   --->   Operation 71 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %code_ram, i64 666, i64 207, i64 1"   --->   Operation 72 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %data_ram, void @empty_5, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 73 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %code_ram, void @empty_5, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 74 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%e_to_f_target_pc_V_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %e_to_f_target_pc_V"   --->   Operation 75 'read' 'e_to_f_target_pc_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%reg_file_31_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_31_reload"   --->   Operation 76 'read' 'reg_file_31_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%reg_file_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_reload"   --->   Operation 77 'read' 'reg_file_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%reg_file_1_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_1_reload"   --->   Operation 78 'read' 'reg_file_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%reg_file_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_2_reload"   --->   Operation 79 'read' 'reg_file_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%reg_file_3_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_3_reload"   --->   Operation 80 'read' 'reg_file_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%reg_file_4_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_4_reload"   --->   Operation 81 'read' 'reg_file_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%reg_file_5_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_5_reload"   --->   Operation 82 'read' 'reg_file_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%reg_file_6_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_6_reload"   --->   Operation 83 'read' 'reg_file_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%reg_file_7_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_7_reload"   --->   Operation 84 'read' 'reg_file_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%reg_file_8_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_8_reload"   --->   Operation 85 'read' 'reg_file_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%reg_file_9_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_9_reload"   --->   Operation 86 'read' 'reg_file_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%reg_file_10_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_10_reload"   --->   Operation 87 'read' 'reg_file_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%reg_file_11_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_11_reload"   --->   Operation 88 'read' 'reg_file_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%reg_file_12_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_12_reload"   --->   Operation 89 'read' 'reg_file_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%reg_file_13_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_13_reload"   --->   Operation 90 'read' 'reg_file_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%reg_file_14_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_14_reload"   --->   Operation 91 'read' 'reg_file_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%reg_file_15_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_15_reload"   --->   Operation 92 'read' 'reg_file_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%reg_file_30_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_30_reload"   --->   Operation 93 'read' 'reg_file_30_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%reg_file_29_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_29_reload"   --->   Operation 94 'read' 'reg_file_29_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%reg_file_28_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_28_reload"   --->   Operation 95 'read' 'reg_file_28_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%reg_file_27_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_27_reload"   --->   Operation 96 'read' 'reg_file_27_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%reg_file_26_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_26_reload"   --->   Operation 97 'read' 'reg_file_26_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%reg_file_25_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_25_reload"   --->   Operation 98 'read' 'reg_file_25_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%reg_file_24_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_24_reload"   --->   Operation 99 'read' 'reg_file_24_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%reg_file_23_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_23_reload"   --->   Operation 100 'read' 'reg_file_23_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%reg_file_22_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_22_reload"   --->   Operation 101 'read' 'reg_file_22_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%reg_file_21_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_21_reload"   --->   Operation 102 'read' 'reg_file_21_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%reg_file_20_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_20_reload"   --->   Operation 103 'read' 'reg_file_20_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%reg_file_19_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_19_reload"   --->   Operation 104 'read' 'reg_file_19_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%reg_file_18_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_18_reload"   --->   Operation 105 'read' 'reg_file_18_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%reg_file_17_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_17_reload"   --->   Operation 106 'read' 'reg_file_17_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%reg_file_16_reload_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %reg_file_16_reload"   --->   Operation 107 'read' 'reg_file_16_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (1.58ns)   --->   "%store_ln0 = store i16 %e_to_f_target_pc_V_read, i16 %f_to_e_pc_V"   --->   Operation 108 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 109 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_16_reload_read, i32 %reg_file_32"   --->   Operation 109 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 110 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_17_reload_read, i32 %reg_file_30"   --->   Operation 110 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 111 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_18_reload_read, i32 %reg_file_29"   --->   Operation 111 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 112 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_19_reload_read, i32 %reg_file_28"   --->   Operation 112 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 113 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_20_reload_read, i32 %reg_file_27"   --->   Operation 113 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 114 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_21_reload_read, i32 %reg_file_26"   --->   Operation 114 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 115 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_22_reload_read, i32 %reg_file_25"   --->   Operation 115 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 116 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_23_reload_read, i32 %reg_file_24"   --->   Operation 116 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 117 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_24_reload_read, i32 %reg_file_23"   --->   Operation 117 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 118 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_25_reload_read, i32 %reg_file_22"   --->   Operation 118 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 119 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_26_reload_read, i32 %reg_file_21"   --->   Operation 119 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 120 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_27_reload_read, i32 %reg_file_20"   --->   Operation 120 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 121 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_28_reload_read, i32 %reg_file_19"   --->   Operation 121 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 122 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_29_reload_read, i32 %reg_file_18"   --->   Operation 122 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 123 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_30_reload_read, i32 %reg_file_17"   --->   Operation 123 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 124 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_15_reload_read, i32 %reg_file_16"   --->   Operation 124 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 125 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_14_reload_read, i32 %reg_file_15"   --->   Operation 125 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 126 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_13_reload_read, i32 %reg_file_14"   --->   Operation 126 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 127 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_12_reload_read, i32 %reg_file_13"   --->   Operation 127 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 128 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_11_reload_read, i32 %reg_file_12"   --->   Operation 128 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 129 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_10_reload_read, i32 %reg_file_11"   --->   Operation 129 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 130 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_9_reload_read, i32 %reg_file_10"   --->   Operation 130 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 131 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_8_reload_read, i32 %reg_file_9"   --->   Operation 131 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 132 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_7_reload_read, i32 %reg_file_8"   --->   Operation 132 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 133 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_6_reload_read, i32 %reg_file_7"   --->   Operation 133 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 134 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_5_reload_read, i32 %reg_file_6"   --->   Operation 134 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 135 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_4_reload_read, i32 %reg_file_5"   --->   Operation 135 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 136 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_3_reload_read, i32 %reg_file_4"   --->   Operation 136 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 137 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_2_reload_read, i32 %reg_file_3"   --->   Operation 137 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 138 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_1_reload_read, i32 %reg_file_2"   --->   Operation 138 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 139 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_reload_read, i32 %reg_file_1"   --->   Operation 139 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 140 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %reg_file_31_reload_read, i32 %reg_file"   --->   Operation 140 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 141 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %nbi"   --->   Operation 141 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 142 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 1, i32 %nbc"   --->   Operation 142 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 143 [1/1] (1.58ns)   --->   "%br_ln0 = br void %do.cond"   --->   Operation 143 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%m_from_e_cancel_V = phi i1 1, void %newFuncRoot, i1 %e_from_e_cancel_V, void %do.cond.backedge"   --->   Operation 144 'phi' 'm_from_e_cancel_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns)   --->   "%m_to_w_cancel_V_1 = phi i1 1, void %newFuncRoot, i1 %m_from_e_cancel_V, void %do.cond.backedge"   --->   Operation 145 'phi' 'm_to_w_cancel_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 146 [1/1] (0.00ns)   --->   "%w_from_m_has_no_dest_V_load = load i1 %w_from_m_has_no_dest_V" [execute.cpp:32]   --->   Operation 146 'load' 'w_from_m_has_no_dest_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_store_V_load = load i1 %e_to_m_d_i_is_store_V"   --->   Operation 147 'load' 'e_to_m_d_i_is_store_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.00ns)   --->   "%e_to_m_d_i_has_no_dest_V_load = load i1 %e_to_m_d_i_has_no_dest_V"   --->   Operation 148 'load' 'e_to_m_d_i_has_no_dest_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.00ns)   --->   "%m_to_w_has_no_dest_V_load = load i1 %m_to_w_has_no_dest_V" [execute.cpp:30]   --->   Operation 149 'load' 'm_to_w_has_no_dest_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 150 [1/1] (0.00ns)   --->   "%m_from_e_d_i_is_store_V_load = load i1 %m_from_e_d_i_is_store_V" [mem.cpp:100]   --->   Operation 150 'load' 'm_from_e_d_i_is_store_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 151 [1/1] (0.00ns)   --->   "%reg_file_35 = load i32 %reg_file_31" [wb.cpp:19]   --->   Operation 151 'load' 'reg_file_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 152 [1/1] (0.00ns)   --->   "%f_to_e_d_i_func3_V = load i3 %e_to_m_d_i_func3_V" [compute.cpp:45]   --->   Operation 152 'load' 'f_to_e_d_i_func3_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.00ns)   --->   "%m_from_e_d_i_rd_V = load i5 %m_to_w_rd_V"   --->   Operation 153 'load' 'm_from_e_d_i_rd_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%pc_V = load i16 %f_to_e_pc_V"   --->   Operation 154 'load' 'pc_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln587 = zext i16 %pc_V"   --->   Operation 155 'zext' 'zext_ln587' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 156 [1/1] (0.00ns)   --->   "%code_ram_addr = getelementptr i32 %code_ram, i64 0, i64 %zext_ln587" [fetch.cpp:8]   --->   Operation 156 'getelementptr' 'code_ram_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 157 [2/2] (3.25ns)   --->   "%instruction = load i16 %code_ram_addr" [fetch.cpp:8]   --->   Operation 157 'load' 'instruction' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_1 : Operation 158 [1/1] (0.00ns)   --->   "%store_ln0 = store i1 %e_to_m_d_i_is_store_V_load, i1 %m_from_e_d_i_is_store_V"   --->   Operation 158 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%store_ln0 = store i1 %e_to_m_d_i_has_no_dest_V_load, i1 %m_to_w_has_no_dest_V"   --->   Operation 159 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.00ns)   --->   "%store_ln30 = store i1 %m_to_w_has_no_dest_V_load, i1 %w_from_m_has_no_dest_V" [execute.cpp:30]   --->   Operation 160 'store' 'store_ln30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 161 [1/1] (0.00ns)   --->   "%w_from_m_rd_V_load = load i5 %w_from_m_rd_V"   --->   Operation 161 'load' 'w_from_m_rd_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 162 [1/1] (0.00ns)   --->   "%e_to_m_d_i_rs1_V_load = load i5 %e_to_m_d_i_rs1_V"   --->   Operation 162 'load' 'e_to_m_d_i_rs1_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 163 [1/1] (0.00ns)   --->   "%e_to_m_d_i_rs2_V_load = load i5 %e_to_m_d_i_rs2_V"   --->   Operation 163 'load' 'e_to_m_d_i_rs2_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 164 [1/1] (0.00ns)   --->   "%m_from_e_result_load_1 = load i32 %m_from_e_result" [execute.cpp:8]   --->   Operation 164 'load' 'm_from_e_result_load_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%reg_file_load = load i32 %reg_file" [compute.cpp:6]   --->   Operation 165 'load' 'reg_file_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.00ns)   --->   "%reg_file_1_load = load i32 %reg_file_1" [compute.cpp:6]   --->   Operation 166 'load' 'reg_file_1_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 167 [1/1] (0.00ns)   --->   "%reg_file_2_load = load i32 %reg_file_2" [compute.cpp:6]   --->   Operation 167 'load' 'reg_file_2_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%reg_file_3_load = load i32 %reg_file_3" [compute.cpp:6]   --->   Operation 168 'load' 'reg_file_3_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%reg_file_4_load = load i32 %reg_file_4" [compute.cpp:6]   --->   Operation 169 'load' 'reg_file_4_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%reg_file_5_load = load i32 %reg_file_5" [compute.cpp:6]   --->   Operation 170 'load' 'reg_file_5_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%reg_file_6_load = load i32 %reg_file_6" [compute.cpp:6]   --->   Operation 171 'load' 'reg_file_6_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.00ns)   --->   "%reg_file_7_load = load i32 %reg_file_7" [compute.cpp:6]   --->   Operation 172 'load' 'reg_file_7_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 173 [1/1] (0.00ns)   --->   "%reg_file_8_load = load i32 %reg_file_8" [compute.cpp:6]   --->   Operation 173 'load' 'reg_file_8_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 174 [1/1] (0.00ns)   --->   "%reg_file_9_load = load i32 %reg_file_9" [compute.cpp:6]   --->   Operation 174 'load' 'reg_file_9_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 175 [1/1] (0.00ns)   --->   "%reg_file_10_load = load i32 %reg_file_10" [compute.cpp:6]   --->   Operation 175 'load' 'reg_file_10_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 176 [1/1] (0.00ns)   --->   "%reg_file_11_load = load i32 %reg_file_11" [compute.cpp:6]   --->   Operation 176 'load' 'reg_file_11_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 177 [1/1] (0.00ns)   --->   "%reg_file_12_load = load i32 %reg_file_12" [compute.cpp:6]   --->   Operation 177 'load' 'reg_file_12_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%reg_file_13_load = load i32 %reg_file_13" [compute.cpp:6]   --->   Operation 178 'load' 'reg_file_13_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (0.00ns)   --->   "%reg_file_14_load = load i32 %reg_file_14" [compute.cpp:6]   --->   Operation 179 'load' 'reg_file_14_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 180 [1/1] (0.00ns)   --->   "%reg_file_15_load = load i32 %reg_file_15" [compute.cpp:6]   --->   Operation 180 'load' 'reg_file_15_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 181 [1/1] (0.00ns)   --->   "%reg_file_16_load = load i32 %reg_file_16" [compute.cpp:6]   --->   Operation 181 'load' 'reg_file_16_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 182 [1/1] (0.00ns)   --->   "%reg_file_17_load = load i32 %reg_file_17" [compute.cpp:6]   --->   Operation 182 'load' 'reg_file_17_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 183 [1/1] (0.00ns)   --->   "%reg_file_18_load = load i32 %reg_file_18" [compute.cpp:6]   --->   Operation 183 'load' 'reg_file_18_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 184 [1/1] (0.00ns)   --->   "%reg_file_19_load = load i32 %reg_file_19" [compute.cpp:6]   --->   Operation 184 'load' 'reg_file_19_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 185 [1/1] (0.00ns)   --->   "%reg_file_20_load = load i32 %reg_file_20" [compute.cpp:6]   --->   Operation 185 'load' 'reg_file_20_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 186 [1/1] (0.00ns)   --->   "%reg_file_21_load = load i32 %reg_file_21" [compute.cpp:6]   --->   Operation 186 'load' 'reg_file_21_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 187 [1/1] (0.00ns)   --->   "%reg_file_22_load = load i32 %reg_file_22" [compute.cpp:6]   --->   Operation 187 'load' 'reg_file_22_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%reg_file_23_load = load i32 %reg_file_23" [compute.cpp:6]   --->   Operation 188 'load' 'reg_file_23_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.00ns)   --->   "%reg_file_24_load = load i32 %reg_file_24" [compute.cpp:6]   --->   Operation 189 'load' 'reg_file_24_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 190 [1/1] (0.00ns)   --->   "%reg_file_25_load = load i32 %reg_file_25" [compute.cpp:6]   --->   Operation 190 'load' 'reg_file_25_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (0.00ns)   --->   "%reg_file_26_load = load i32 %reg_file_26" [compute.cpp:6]   --->   Operation 191 'load' 'reg_file_26_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 192 [1/1] (0.00ns)   --->   "%reg_file_27_load = load i32 %reg_file_27" [compute.cpp:6]   --->   Operation 192 'load' 'reg_file_27_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 193 [1/1] (0.00ns)   --->   "%reg_file_28_load = load i32 %reg_file_28" [compute.cpp:6]   --->   Operation 193 'load' 'reg_file_28_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 194 [1/1] (0.00ns)   --->   "%reg_file_29_load = load i32 %reg_file_29" [compute.cpp:6]   --->   Operation 194 'load' 'reg_file_29_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 195 [1/1] (0.00ns)   --->   "%reg_file_30_load = load i32 %reg_file_30" [compute.cpp:6]   --->   Operation 195 'load' 'reg_file_30_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 196 [1/1] (0.00ns)   --->   "%reg_file_32_load = load i32 %reg_file_32" [compute.cpp:6]   --->   Operation 196 'load' 'reg_file_32_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 197 [1/1] (3.20ns)   --->   "%r1 = mux i32 @_ssdm_op_Mux.ap_auto.32i32.i5, i32 %reg_file_17_load, i32 %reg_file_18_load, i32 %reg_file_19_load, i32 %reg_file_20_load, i32 %reg_file_21_load, i32 %reg_file_22_load, i32 %reg_file_23_load, i32 %reg_file_24_load, i32 %reg_file_25_load, i32 %reg_file_26_load, i32 %reg_file_27_load, i32 %reg_file_28_load, i32 %reg_file_29_load, i32 %reg_file_30_load, i32 %reg_file_32_load, i32 %reg_file_16_load, i32 %reg_file_15_load, i32 %reg_file_14_load, i32 %reg_file_13_load, i32 %reg_file_12_load, i32 %reg_file_11_load, i32 %reg_file_10_load, i32 %reg_file_9_load, i32 %reg_file_8_load, i32 %reg_file_7_load, i32 %reg_file_6_load, i32 %reg_file_5_load, i32 %reg_file_4_load, i32 %reg_file_3_load, i32 %reg_file_2_load, i32 %reg_file_1_load, i32 %reg_file_load, i5 %e_to_m_d_i_rs1_V_load" [compute.cpp:6]   --->   Operation 197 'mux' 'r1' <Predicate = true> <Delay = 3.20> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 3.20> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 198 [1/1] (3.20ns)   --->   "%r2 = mux i32 @_ssdm_op_Mux.ap_auto.32i32.i5, i32 %reg_file_17_load, i32 %reg_file_18_load, i32 %reg_file_19_load, i32 %reg_file_20_load, i32 %reg_file_21_load, i32 %reg_file_22_load, i32 %reg_file_23_load, i32 %reg_file_24_load, i32 %reg_file_25_load, i32 %reg_file_26_load, i32 %reg_file_27_load, i32 %reg_file_28_load, i32 %reg_file_29_load, i32 %reg_file_30_load, i32 %reg_file_32_load, i32 %reg_file_16_load, i32 %reg_file_15_load, i32 %reg_file_14_load, i32 %reg_file_13_load, i32 %reg_file_12_load, i32 %reg_file_11_load, i32 %reg_file_10_load, i32 %reg_file_9_load, i32 %reg_file_8_load, i32 %reg_file_7_load, i32 %reg_file_6_load, i32 %reg_file_5_load, i32 %reg_file_4_load, i32 %reg_file_3_load, i32 %reg_file_2_load, i32 %reg_file_1_load, i32 %reg_file_load, i5 %e_to_m_d_i_rs2_V_load" [compute.cpp:6]   --->   Operation 198 'mux' 'r2' <Predicate = true> <Delay = 3.20> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 3.20> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 199 [1/1] (0.97ns)   --->   "%or_ln30 = or i1 %m_from_e_cancel_V, i1 %m_to_w_has_no_dest_V_load" [execute.cpp:30]   --->   Operation 199 'or' 'or_ln30' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 200 [1/1] (1.36ns)   --->   "%icmp_ln1069 = icmp_eq  i5 %e_to_m_d_i_rs1_V_load, i5 0"   --->   Operation 200 'icmp' 'icmp_ln1069' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node m_bp_1_V)   --->   "%or_ln31 = or i1 %or_ln30, i1 %icmp_ln1069" [execute.cpp:31]   --->   Operation 201 'or' 'or_ln31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 202 [1/1] (1.36ns)   --->   "%icmp_ln1065_2 = icmp_eq  i5 %e_to_m_d_i_rs1_V_load, i5 %m_from_e_d_i_rd_V"   --->   Operation 202 'icmp' 'icmp_ln1065_2' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node m_bp_1_V)   --->   "%xor_ln30 = xor i1 %or_ln31, i1 1" [execute.cpp:30]   --->   Operation 203 'xor' 'xor_ln30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 204 [1/1] (0.97ns) (out node of the LUT)   --->   "%m_bp_1_V = and i1 %icmp_ln1065_2, i1 %xor_ln30" [execute.cpp:30]   --->   Operation 204 'and' 'm_bp_1_V' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 205 [1/1] (0.97ns)   --->   "%or_ln32 = or i1 %m_to_w_cancel_V_1, i1 %w_from_m_has_no_dest_V_load" [execute.cpp:32]   --->   Operation 205 'or' 'or_ln32' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node bypass_rs1_V)   --->   "%or_ln33 = or i1 %or_ln32, i1 %icmp_ln1069" [execute.cpp:33]   --->   Operation 206 'or' 'or_ln33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 207 [1/1] (1.36ns)   --->   "%icmp_ln1065_3 = icmp_eq  i5 %e_to_m_d_i_rs1_V_load, i5 %w_from_m_rd_V_load"   --->   Operation 207 'icmp' 'icmp_ln1065_3' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node bypass_rs1_V)   --->   "%xor_ln32 = xor i1 %or_ln33, i1 1" [execute.cpp:32]   --->   Operation 208 'xor' 'xor_ln32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node bypass_rs1_V)   --->   "%w_bp_1_V = and i1 %icmp_ln1065_3, i1 %xor_ln32" [execute.cpp:32]   --->   Operation 209 'and' 'w_bp_1_V' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 210 [1/1] (0.97ns) (out node of the LUT)   --->   "%bypass_rs1_V = or i1 %m_bp_1_V, i1 %w_bp_1_V" [execute.cpp:34]   --->   Operation 210 'or' 'bypass_rs1_V' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 211 [1/1] (1.36ns)   --->   "%icmp_ln1069_1 = icmp_eq  i5 %e_to_m_d_i_rs2_V_load, i5 0"   --->   Operation 211 'icmp' 'icmp_ln1069_1' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node m_bp_2_V)   --->   "%or_ln36 = or i1 %or_ln30, i1 %icmp_ln1069_1" [execute.cpp:36]   --->   Operation 212 'or' 'or_ln36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 213 [1/1] (1.36ns)   --->   "%icmp_ln1065_4 = icmp_eq  i5 %e_to_m_d_i_rs2_V_load, i5 %m_from_e_d_i_rd_V"   --->   Operation 213 'icmp' 'icmp_ln1065_4' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node m_bp_2_V)   --->   "%xor_ln35 = xor i1 %or_ln36, i1 1" [execute.cpp:35]   --->   Operation 214 'xor' 'xor_ln35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 215 [1/1] (0.97ns) (out node of the LUT)   --->   "%m_bp_2_V = and i1 %icmp_ln1065_4, i1 %xor_ln35" [execute.cpp:35]   --->   Operation 215 'and' 'm_bp_2_V' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 216 [1/1] (0.00ns) (grouped into LUT with out node bypass_rs2_V)   --->   "%or_ln38 = or i1 %or_ln32, i1 %icmp_ln1069_1" [execute.cpp:38]   --->   Operation 216 'or' 'or_ln38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 217 [1/1] (1.36ns)   --->   "%icmp_ln1065_5 = icmp_eq  i5 %e_to_m_d_i_rs2_V_load, i5 %w_from_m_rd_V_load"   --->   Operation 217 'icmp' 'icmp_ln1065_5' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node bypass_rs2_V)   --->   "%xor_ln37 = xor i1 %or_ln38, i1 1" [execute.cpp:37]   --->   Operation 218 'xor' 'xor_ln37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node bypass_rs2_V)   --->   "%w_bp_2_V = and i1 %icmp_ln1065_5, i1 %xor_ln37" [execute.cpp:37]   --->   Operation 219 'and' 'w_bp_2_V' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 220 [1/1] (0.97ns) (out node of the LUT)   --->   "%bypass_rs2_V = or i1 %m_bp_2_V, i1 %w_bp_2_V" [execute.cpp:39]   --->   Operation 220 'or' 'bypass_rs2_V' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node rv1)   --->   "%select_ln8 = select i1 %m_bp_1_V, i32 %m_from_e_result_load_1, i32 %reg_file_35" [execute.cpp:8]   --->   Operation 221 'select' 'select_ln8' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 222 [1/1] (0.69ns) (out node of the LUT)   --->   "%rv1 = select i1 %bypass_rs1_V, i32 %select_ln8, i32 %r1" [execute.cpp:40]   --->   Operation 222 'select' 'rv1' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 223 [1/1] (0.00ns)   --->   "%trunc_ln59 = trunc i32 %rv1" [execute.cpp:59->rv32i_pp_ip.cpp:63]   --->   Operation 223 'trunc' 'trunc_ln59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node e_to_m_rv2)   --->   "%select_ln8_1 = select i1 %m_bp_2_V, i32 %m_from_e_result_load_1, i32 %reg_file_35" [execute.cpp:8]   --->   Operation 224 'select' 'select_ln8_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 225 [1/1] (0.69ns) (out node of the LUT)   --->   "%e_to_m_rv2 = select i1 %bypass_rs2_V, i32 %select_ln8_1, i32 %r2" [execute.cpp:41]   --->   Operation 225 'select' 'e_to_m_rv2' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 226 [1/1] (2.47ns)   --->   "%icmp_ln23 = icmp_slt  i32 %rv1, i32 %e_to_m_rv2" [compute.cpp:23]   --->   Operation 226 'icmp' 'icmp_ln23' <Predicate = (f_to_e_d_i_func3_V == 5)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 227 [1/1] (2.18ns)   --->   "%br_ln20 = br void %_Z21compute_branch_resultii7ap_uintILi3EE.exit.i" [compute.cpp:20]   --->   Operation 227 'br' 'br_ln20' <Predicate = (f_to_e_d_i_func3_V == 3) | (f_to_e_d_i_func3_V == 2)> <Delay = 2.18>
ST_1 : Operation 228 [1/1] (2.47ns)   --->   "%icmp_ln29 = icmp_ult  i32 %rv1, i32 %e_to_m_rv2" [compute.cpp:29]   --->   Operation 228 'icmp' 'icmp_ln29' <Predicate = (f_to_e_d_i_func3_V == 7)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 229 [1/1] (0.00ns)   --->   "%msize_V_load = load i3 %msize_V" [mem.cpp:44]   --->   Operation 229 'load' 'msize_V_load' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_1 : Operation 230 [1/1] (0.00ns)   --->   "%m_from_e_result_load = load i32 %m_from_e_result"   --->   Operation 230 'load' 'm_from_e_result_load' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_1 : Operation 231 [1/1] (0.00ns)   --->   "%a01 = trunc i32 %m_from_e_result_load"   --->   Operation 231 'trunc' 'a01' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_1 : Operation 232 [1/1] (0.00ns)   --->   "%a1 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %m_from_e_result_load, i32 1"   --->   Operation 232 'bitselect' 'a1' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_1 : Operation 233 [1/1] (0.00ns)   --->   "%r_V_4 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %m_from_e_result_load, i32 2, i32 17"   --->   Operation 233 'partselect' 'r_V_4' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_1 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln587_1 = zext i16 %r_V_4"   --->   Operation 234 'zext' 'zext_ln587_1' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_1 : Operation 235 [1/1] (0.00ns)   --->   "%data_ram_addr = getelementptr i32 %data_ram, i64 0, i64 %zext_ln587_1" [mem.cpp:18]   --->   Operation 235 'getelementptr' 'data_ram_addr' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_1 : Operation 236 [2/2] (3.25ns)   --->   "%w = load i16 %data_ram_addr" [mem.cpp:18]   --->   Operation 236 'load' 'w' <Predicate = (!m_from_e_cancel_V)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_1 : Operation 237 [1/1] (0.00ns)   --->   "%rv2_1_load = load i32 %rv2_1" [mem.cpp:73]   --->   Operation 237 'load' 'rv2_1_load' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load)> <Delay = 0.00>
ST_1 : Operation 238 [1/1] (0.00ns)   --->   "%msize_V_1 = trunc i3 %msize_V_load"   --->   Operation 238 'trunc' 'msize_V_1' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load)> <Delay = 0.00>
ST_1 : Operation 239 [1/1] (0.00ns)   --->   "%rv2_0 = trunc i32 %rv2_1_load" [mem.cpp:72]   --->   Operation 239 'trunc' 'rv2_0' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load)> <Delay = 0.00>
ST_1 : Operation 240 [1/1] (0.00ns)   --->   "%rv2_01 = trunc i32 %rv2_1_load" [mem.cpp:73]   --->   Operation 240 'trunc' 'rv2_01' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load)> <Delay = 0.00>
ST_1 : Operation 241 [1/1] (0.95ns)   --->   "%switch_ln74 = switch i2 %msize_V_1, void %_ZL9mem_storePi7ap_uintILi18EEiS0_ILi2EE.exit.i, i2 0, void %sw.bb.i.i, i2 1, void %sw.bb4.i.i, i2 2, void %sw.bb6.i.i" [mem.cpp:74]   --->   Operation 241 'switch' 'switch_ln74' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load)> <Delay = 0.95>
ST_1 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i16 %rv2_01" [mem.cpp:79]   --->   Operation 242 'zext' 'zext_ln79' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 0.00>
ST_1 : Operation 243 [1/1] (0.00ns)   --->   "%and_ln = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 %a1, i1 0" [mem.cpp:79]   --->   Operation 243 'bitconcatenate' 'and_ln' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 0.00>
ST_1 : Operation 244 [1/1] (0.00ns)   --->   "%zext_ln79_1 = zext i2 %and_ln" [mem.cpp:79]   --->   Operation 244 'zext' 'zext_ln79_1' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 0.00>
ST_1 : Operation 245 [1/1] (2.12ns)   --->   "%shl_ln79 = shl i4 3, i4 %zext_ln79_1" [mem.cpp:79]   --->   Operation 245 'shl' 'shl_ln79' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 2.12> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 246 [1/1] (0.00ns)   --->   "%shl_ln79_1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i1.i4, i1 %a1, i4 0" [mem.cpp:79]   --->   Operation 246 'bitconcatenate' 'shl_ln79_1' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 0.00>
ST_1 : Operation 247 [1/1] (0.00ns)   --->   "%zext_ln79_2 = zext i5 %shl_ln79_1" [mem.cpp:79]   --->   Operation 247 'zext' 'zext_ln79_2' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 0.00>
ST_1 : Operation 248 [1/1] (3.98ns)   --->   "%shl_ln79_2 = shl i32 %zext_ln79, i32 %zext_ln79_2" [mem.cpp:79]   --->   Operation 248 'shl' 'shl_ln79_2' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 3.98> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.98> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 249 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i8 %rv2_0" [mem.cpp:76]   --->   Operation 249 'zext' 'zext_ln76' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 0.00>
ST_1 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln76_1 = zext i2 %a01" [mem.cpp:76]   --->   Operation 250 'zext' 'zext_ln76_1' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 0.00>
ST_1 : Operation 251 [1/1] (1.85ns)   --->   "%shl_ln76 = shl i4 1, i4 %zext_ln76_1" [mem.cpp:76]   --->   Operation 251 'shl' 'shl_ln76' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 1.85> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.85> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 252 [1/1] (0.00ns)   --->   "%shl_ln76_1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %a01, i3 0" [mem.cpp:76]   --->   Operation 252 'bitconcatenate' 'shl_ln76_1' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 0.00>
ST_1 : Operation 253 [1/1] (0.00ns)   --->   "%zext_ln76_2 = zext i5 %shl_ln76_1" [mem.cpp:76]   --->   Operation 253 'zext' 'zext_ln76_2' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 0.00>
ST_1 : Operation 254 [1/1] (3.14ns)   --->   "%shl_ln76_2 = shl i32 %zext_ln76, i32 %zext_ln76_2" [mem.cpp:76]   --->   Operation 254 'shl' 'shl_ln76_2' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 3.14> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 7.18>
ST_2 : Operation 255 [1/1] (0.00ns)   --->   "%e_from_e_cancel_V = phi i1 1, void %newFuncRoot, i1 %e_to_f_set_pc_V, void %do.cond.backedge"   --->   Operation 255 'phi' 'e_from_e_cancel_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 256 [1/1] (0.00ns)   --->   "%f7_6 = phi i1 0, void %newFuncRoot, i1 %tmp_3, void %do.cond.backedge"   --->   Operation 256 'phi' 'f7_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 257 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_load_V_load = load i1 %e_to_m_d_i_is_load_V"   --->   Operation 257 'load' 'e_to_m_d_i_is_load_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 258 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_branch_V_load = load i1 %e_to_m_d_i_is_branch_V" [execute.cpp:80->rv32i_pp_ip.cpp:63]   --->   Operation 258 'load' 'e_to_m_d_i_is_branch_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 259 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_jalr_V_load = load i1 %e_to_m_d_i_is_jalr_V" [execute.cpp:102->rv32i_pp_ip.cpp:63]   --->   Operation 259 'load' 'e_to_m_d_i_is_jalr_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 260 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_jal_V_load = load i1 %e_to_m_d_i_is_jal_V" [execute.cpp:102->rv32i_pp_ip.cpp:63]   --->   Operation 260 'load' 'e_to_m_d_i_is_jal_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 261 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_ret_V_load = load i1 %e_to_m_d_i_is_ret_V"   --->   Operation 261 'load' 'e_to_m_d_i_is_ret_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 262 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_lui_V_load = load i1 %e_to_m_d_i_is_lui_V" [compute.cpp:103]   --->   Operation 262 'load' 'e_to_m_d_i_is_lui_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 263 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_op_imm_V_load = load i1 %e_to_m_d_i_is_op_imm_V" [execute.cpp:85->rv32i_pp_ip.cpp:63]   --->   Operation 263 'load' 'e_to_m_d_i_is_op_imm_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 264 [1/1] (0.00ns)   --->   "%m_to_w_is_ret_V_load = load i1 %m_to_w_is_ret_V" [rv32i_pp_ip.cpp:49]   --->   Operation 264 'load' 'm_to_w_is_ret_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 265 [1/1] (0.00ns)   --->   "%m_from_e_d_i_is_load_V_load = load i1 %m_from_e_d_i_is_load_V" [mem.cpp:44]   --->   Operation 265 'load' 'm_from_e_d_i_is_load_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 266 [1/1] (0.00ns)   --->   "%specpipeline_ln59 = specpipeline void @_ssdm_op_SpecPipeline, i32 3, i32 0, i32 0, i32 0, void @empty_0" [rv32i_pp_ip.cpp:59]   --->   Operation 266 'specpipeline' 'specpipeline_ln59' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 267 [1/1] (0.00ns)   --->   "%specloopname_ln42 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [rv32i_pp_ip.cpp:42]   --->   Operation 267 'specloopname' 'specloopname_ln42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 268 [1/2] (3.25ns)   --->   "%instruction = load i16 %code_ram_addr" [fetch.cpp:8]   --->   Operation 268 'load' 'instruction' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_2 : Operation 269 [1/1] (0.00ns)   --->   "%f_to_e_d_i_opcode_V = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %instruction, i32 2, i32 6"   --->   Operation 269 'partselect' 'f_to_e_d_i_opcode_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 270 [1/1] (0.00ns)   --->   "%f_to_e_d_i_rd_V = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %instruction, i32 7, i32 11"   --->   Operation 270 'partselect' 'f_to_e_d_i_rd_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 271 [1/1] (0.00ns)   --->   "%f_to_e_d_i_func3_V_1 = partselect i3 @_ssdm_op_PartSelect.i3.i32.i32.i32, i32 %instruction, i32 12, i32 14"   --->   Operation 271 'partselect' 'f_to_e_d_i_func3_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 272 [1/1] (0.00ns)   --->   "%f_to_e_d_i_rs1_V = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %instruction, i32 15, i32 19"   --->   Operation 272 'partselect' 'f_to_e_d_i_rs1_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 273 [1/1] (0.00ns)   --->   "%f_to_e_d_i_rs2_V = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %instruction, i32 20, i32 24"   --->   Operation 273 'partselect' 'f_to_e_d_i_rs2_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 274 [1/1] (0.00ns)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %instruction, i32 30" [decode.cpp:12]   --->   Operation 274 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 275 [1/1] (1.36ns)   --->   "%f_to_e_d_i_is_load_V = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 0"   --->   Operation 275 'icmp' 'f_to_e_d_i_is_load_V' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 276 [1/1] (1.36ns)   --->   "%f_to_e_d_i_is_store_V = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 8"   --->   Operation 276 'icmp' 'f_to_e_d_i_is_store_V' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 277 [1/1] (1.36ns)   --->   "%f_to_e_d_i_is_branch_V = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 24"   --->   Operation 277 'icmp' 'f_to_e_d_i_is_branch_V' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 278 [1/1] (1.36ns)   --->   "%f_to_e_d_i_is_jalr_V = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 25"   --->   Operation 278 'icmp' 'f_to_e_d_i_is_jalr_V' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 279 [1/1] (1.36ns)   --->   "%f_to_e_d_i_is_jal_V = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 27"   --->   Operation 279 'icmp' 'f_to_e_d_i_is_jal_V' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 280 [1/1] (2.47ns)   --->   "%f_to_e_d_i_is_ret_V = icmp_eq  i32 %instruction, i32 32871" [decode.cpp:18]   --->   Operation 280 'icmp' 'f_to_e_d_i_is_ret_V' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 281 [1/1] (1.36ns)   --->   "%f_to_e_d_i_is_lui_V = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 13"   --->   Operation 281 'icmp' 'f_to_e_d_i_is_lui_V' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 282 [1/1] (1.36ns)   --->   "%f_to_e_d_i_is_op_imm_V = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 4"   --->   Operation 282 'icmp' 'f_to_e_d_i_is_op_imm_V' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 283 [1/1] (0.00ns)   --->   "%store_ln0 = store i1 %e_to_m_d_i_is_load_V_load, i1 %m_from_e_d_i_is_load_V"   --->   Operation 283 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 284 [1/1] (0.00ns)   --->   "%store_ln0 = store i1 %e_to_m_d_i_is_ret_V_load, i1 %m_to_w_is_ret_V"   --->   Operation 284 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 285 [1/1] (0.00ns)   --->   "%store_ln1065 = store i1 %f_to_e_d_i_is_op_imm_V, i1 %e_to_m_d_i_is_op_imm_V"   --->   Operation 285 'store' 'store_ln1065' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 286 [1/1] (0.00ns)   --->   "%store_ln1065 = store i1 %f_to_e_d_i_is_lui_V, i1 %e_to_m_d_i_is_lui_V"   --->   Operation 286 'store' 'store_ln1065' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 287 [1/1] (0.00ns)   --->   "%store_ln18 = store i1 %f_to_e_d_i_is_ret_V, i1 %e_to_m_d_i_is_ret_V" [decode.cpp:18]   --->   Operation 287 'store' 'store_ln18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 288 [1/1] (0.00ns)   --->   "%store_ln1065 = store i1 %f_to_e_d_i_is_jal_V, i1 %e_to_m_d_i_is_jal_V"   --->   Operation 288 'store' 'store_ln1065' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 289 [1/1] (0.00ns)   --->   "%store_ln1065 = store i1 %f_to_e_d_i_is_jalr_V, i1 %e_to_m_d_i_is_jalr_V"   --->   Operation 289 'store' 'store_ln1065' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 290 [1/1] (0.00ns)   --->   "%store_ln1065 = store i1 %f_to_e_d_i_is_branch_V, i1 %e_to_m_d_i_is_branch_V"   --->   Operation 290 'store' 'store_ln1065' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 291 [1/1] (0.00ns)   --->   "%store_ln1065 = store i1 %f_to_e_d_i_is_store_V, i1 %e_to_m_d_i_is_store_V"   --->   Operation 291 'store' 'store_ln1065' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 292 [1/1] (0.00ns)   --->   "%store_ln1065 = store i1 %f_to_e_d_i_is_load_V, i1 %e_to_m_d_i_is_load_V"   --->   Operation 292 'store' 'store_ln1065' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 293 [1/1] (1.36ns)   --->   "%empty = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 24"   --->   Operation 293 'icmp' 'empty' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 294 [1/1] (1.36ns)   --->   "%empty_24 = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 8"   --->   Operation 294 'icmp' 'empty_24' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 295 [1/1] (0.97ns)   --->   "%empty_25 = or i1 %empty_24, i1 %empty"   --->   Operation 295 'or' 'empty_25' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 296 [1/1] (1.58ns)   --->   "%br_ln261 = br i1 %empty_25, void %lor.rhs.i.i.i, void %_Z12fetch_decode13from_f_to_f_s13from_e_to_f_sPjPS_P13from_f_to_e_s.exit"   --->   Operation 296 'br' 'br_ln261' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 297 [1/1] (1.36ns)   --->   "%icmp_ln1065 = icmp_eq  i5 %f_to_e_d_i_rd_V, i5 0"   --->   Operation 297 'icmp' 'icmp_ln1065' <Predicate = (!empty_25)> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 298 [1/1] (1.58ns)   --->   "%br_ln21 = br void %_Z12fetch_decode13from_f_to_f_s13from_e_to_f_sPjPS_P13from_f_to_e_s.exit" [decode.cpp:21]   --->   Operation 298 'br' 'br_ln21' <Predicate = (!empty_25)> <Delay = 1.58>
ST_2 : Operation 299 [1/1] (0.00ns)   --->   "%f_to_e_d_i_has_no_dest_V = phi i1 %icmp_ln1065, void %lor.rhs.i.i.i, i1 1, void %do.cond"   --->   Operation 299 'phi' 'f_to_e_d_i_has_no_dest_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 300 [1/1] (0.00ns)   --->   "%opch = partselect i2 @_ssdm_op_PartSelect.i2.i32.i32.i32, i32 %instruction, i32 5, i32 6"   --->   Operation 300 'partselect' 'opch' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 301 [1/1] (0.00ns)   --->   "%opcl_V = partselect i3 @_ssdm_op_PartSelect.i3.i32.i32.i32, i32 %instruction, i32 2, i32 4"   --->   Operation 301 'partselect' 'opcl_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 302 [1/1] (0.00ns)   --->   "%store_ln58 = store i1 %f_to_e_d_i_has_no_dest_V, i1 %e_to_m_d_i_has_no_dest_V" [type.cpp:58->decode.cpp:22]   --->   Operation 302 'store' 'store_ln58' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 303 [1/1] (2.18ns)   --->   "%switch_ln58 = switch i2 %opch, void %sw.bb5.i, i2 0, void %sw.bb.i, i2 1, void %sw.bb1.i, i2 2, void %type.exit" [type.cpp:58->decode.cpp:22]   --->   Operation 303 'switch' 'switch_ln58' <Predicate = true> <Delay = 2.18>
ST_2 : Operation 304 [1/1] (2.18ns)   --->   "%switch_ln17 = switch i3 %opcl_V, void %type.exit, i3 0, void %sw.bb1.i.type.exit_crit_edge, i3 5, void %sw.bb5.i11.i, i3 4, void %sw.bb4.i10.i" [type.cpp:17]   --->   Operation 304 'switch' 'switch_ln17' <Predicate = (opch == 1)> <Delay = 2.18>
ST_2 : Operation 305 [1/1] (2.18ns)   --->   "%br_ln22 = br void %type.exit" [type.cpp:22]   --->   Operation 305 'br' 'br_ln22' <Predicate = (opch == 1 & opcl_V == 4)> <Delay = 2.18>
ST_2 : Operation 306 [1/1] (2.18ns)   --->   "%br_ln23 = br void %type.exit" [type.cpp:23]   --->   Operation 306 'br' 'br_ln23' <Predicate = (opch == 1 & opcl_V == 5)> <Delay = 2.18>
ST_2 : Operation 307 [1/1] (2.18ns)   --->   "%br_ln17 = br void %type.exit" [type.cpp:17]   --->   Operation 307 'br' 'br_ln17' <Predicate = (opch == 1 & opcl_V == 0)> <Delay = 2.18>
ST_2 : Operation 308 [1/1] (2.18ns)   --->   "%switch_ln4 = switch i3 %opcl_V, void %type.exit, i3 0, void %sw.bb.i.type.exit_crit_edge, i3 5, void %sw.bb5.i.i, i3 4, void %sw.bb.i.type.exit_crit_edge3" [type.cpp:4]   --->   Operation 308 'switch' 'switch_ln4' <Predicate = (opch == 0)> <Delay = 2.18>
ST_2 : Operation 309 [1/1] (2.18ns)   --->   "%br_ln4 = br void %type.exit" [type.cpp:4]   --->   Operation 309 'br' 'br_ln4' <Predicate = (opch == 0 & opcl_V == 4)> <Delay = 2.18>
ST_2 : Operation 310 [1/1] (2.18ns)   --->   "%br_ln10 = br void %type.exit" [type.cpp:10]   --->   Operation 310 'br' 'br_ln10' <Predicate = (opch == 0 & opcl_V == 5)> <Delay = 2.18>
ST_2 : Operation 311 [1/1] (2.18ns)   --->   "%br_ln4 = br void %type.exit" [type.cpp:4]   --->   Operation 311 'br' 'br_ln4' <Predicate = (opch == 0 & opcl_V == 0)> <Delay = 2.18>
ST_2 : Operation 312 [1/1] (2.18ns)   --->   "%switch_ln43 = switch i3 %opcl_V, void %sw.bb7.i33.i, i3 0, void %sw.bb5.i.type.exit_crit_edge, i3 1, void %type.exit, i3 2, void %sw.bb2.i28.i, i3 3, void %sw.bb3.i29.i, i3 4, void %sw.bb4.i30.i, i3 5, void %sw.bb5.i31.i, i3 6, void %sw.bb6.i32.i" [type.cpp:43]   --->   Operation 312 'switch' 'switch_ln43' <Predicate = (opch == 3)> <Delay = 2.18>
ST_2 : Operation 313 [1/1] (2.18ns)   --->   "%br_ln50 = br void %type.exit" [type.cpp:50]   --->   Operation 313 'br' 'br_ln50' <Predicate = (opch == 3 & opcl_V == 6)> <Delay = 2.18>
ST_2 : Operation 314 [1/1] (2.18ns)   --->   "%br_ln49 = br void %type.exit" [type.cpp:49]   --->   Operation 314 'br' 'br_ln49' <Predicate = (opch == 3 & opcl_V == 5)> <Delay = 2.18>
ST_2 : Operation 315 [1/1] (2.18ns)   --->   "%br_ln48 = br void %type.exit" [type.cpp:48]   --->   Operation 315 'br' 'br_ln48' <Predicate = (opch == 3 & opcl_V == 4)> <Delay = 2.18>
ST_2 : Operation 316 [1/1] (2.18ns)   --->   "%br_ln47 = br void %type.exit" [type.cpp:47]   --->   Operation 316 'br' 'br_ln47' <Predicate = (opch == 3 & opcl_V == 3)> <Delay = 2.18>
ST_2 : Operation 317 [1/1] (2.18ns)   --->   "%br_ln46 = br void %type.exit" [type.cpp:46]   --->   Operation 317 'br' 'br_ln46' <Predicate = (opch == 3 & opcl_V == 2)> <Delay = 2.18>
ST_2 : Operation 318 [1/1] (2.18ns)   --->   "%br_ln43 = br void %type.exit" [type.cpp:43]   --->   Operation 318 'br' 'br_ln43' <Predicate = (opch == 3 & opcl_V == 0)> <Delay = 2.18>
ST_2 : Operation 319 [1/1] (2.18ns)   --->   "%br_ln51 = br void %type.exit" [type.cpp:51]   --->   Operation 319 'br' 'br_ln51' <Predicate = (opch == 3 & opcl_V == 7)> <Delay = 2.18>
ST_2 : Operation 320 [1/1] (0.00ns)   --->   "%e_to_m_d_i_is_r_type_V_load = load i1 %e_to_m_d_i_is_r_type_V" [compute.cpp:46]   --->   Operation 320 'load' 'e_to_m_d_i_is_r_type_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 321 [1/1] (2.47ns)   --->   "%result_V_5 = icmp_ult  i32 %rv1, i32 %e_to_m_rv2" [compute.cpp:26]   --->   Operation 321 'icmp' 'result_V_5' <Predicate = (f_to_e_d_i_func3_V == 6)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 322 [1/1] (2.18ns)   --->   "%br_ln27 = br void %_Z21compute_branch_resultii7ap_uintILi3EE.exit.i" [compute.cpp:27]   --->   Operation 322 'br' 'br_ln27' <Predicate = (f_to_e_d_i_func3_V == 6)> <Delay = 2.18>
ST_2 : Operation 323 [1/1] (0.97ns)   --->   "%result_V_4 = xor i1 %icmp_ln23, i1 1" [compute.cpp:23]   --->   Operation 323 'xor' 'result_V_4' <Predicate = (f_to_e_d_i_func3_V == 5)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 324 [1/1] (2.18ns)   --->   "%br_ln24 = br void %_Z21compute_branch_resultii7ap_uintILi3EE.exit.i" [compute.cpp:24]   --->   Operation 324 'br' 'br_ln24' <Predicate = (f_to_e_d_i_func3_V == 5)> <Delay = 2.18>
ST_2 : Operation 325 [1/1] (2.47ns)   --->   "%result_V_3 = icmp_slt  i32 %rv1, i32 %e_to_m_rv2" [compute.cpp:21]   --->   Operation 325 'icmp' 'result_V_3' <Predicate = (f_to_e_d_i_func3_V == 4)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 326 [1/1] (2.18ns)   --->   "%br_ln22 = br void %_Z21compute_branch_resultii7ap_uintILi3EE.exit.i" [compute.cpp:22]   --->   Operation 326 'br' 'br_ln22' <Predicate = (f_to_e_d_i_func3_V == 4)> <Delay = 2.18>
ST_2 : Operation 327 [1/1] (2.47ns)   --->   "%result_V_2 = icmp_ne  i32 %rv1, i32 %e_to_m_rv2" [compute.cpp:16]   --->   Operation 327 'icmp' 'result_V_2' <Predicate = (f_to_e_d_i_func3_V == 1)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 328 [1/1] (2.18ns)   --->   "%br_ln17 = br void %_Z21compute_branch_resultii7ap_uintILi3EE.exit.i" [compute.cpp:17]   --->   Operation 328 'br' 'br_ln17' <Predicate = (f_to_e_d_i_func3_V == 1)> <Delay = 2.18>
ST_2 : Operation 329 [1/1] (2.47ns)   --->   "%result_V_1 = icmp_eq  i32 %rv1, i32 %e_to_m_rv2" [compute.cpp:14]   --->   Operation 329 'icmp' 'result_V_1' <Predicate = (f_to_e_d_i_func3_V == 0)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 330 [1/1] (2.18ns)   --->   "%br_ln15 = br void %_Z21compute_branch_resultii7ap_uintILi3EE.exit.i" [compute.cpp:15]   --->   Operation 330 'br' 'br_ln15' <Predicate = (f_to_e_d_i_func3_V == 0)> <Delay = 2.18>
ST_2 : Operation 331 [1/1] (0.97ns)   --->   "%result_V = xor i1 %icmp_ln29, i1 1" [compute.cpp:29]   --->   Operation 331 'xor' 'result_V' <Predicate = (f_to_e_d_i_func3_V == 7)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 332 [1/1] (2.18ns)   --->   "%br_ln30 = br void %_Z21compute_branch_resultii7ap_uintILi3EE.exit.i" [compute.cpp:30]   --->   Operation 332 'br' 'br_ln30' <Predicate = (f_to_e_d_i_func3_V == 7)> <Delay = 2.18>
ST_2 : Operation 333 [1/1] (0.00ns)   --->   "%cond_V = phi i1 %result_V, void %sw.bb15.i.i, i1 %result_V_5, void %sw.bb12.i.i, i1 %result_V_4, void %sw.bb9.i.i, i1 %result_V_3, void %sw.bb6.i.i242, i1 0, void %sw.bb4.i.i241, i1 %result_V_2, void %sw.bb1.i.i240, i1 %result_V_1, void %sw.bb.i.i239"   --->   Operation 333 'phi' 'cond_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 334 [1/1] (0.00ns)   --->   "%e_to_m_d_i_rs2_V_load_1 = load i5 %e_to_m_d_i_rs2_V" [compute.cpp:41]   --->   Operation 334 'load' 'e_to_m_d_i_rs2_V_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 335 [1/1] (0.00ns)   --->   "%e_to_m_d_i_imm_V_load = load i20 %e_to_m_d_i_imm_V" [execute.cpp:81->rv32i_pp_ip.cpp:63]   --->   Operation 335 'load' 'e_to_m_d_i_imm_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 336 [1/1] (0.97ns)   --->   "%taken_branch_V = and i1 %e_to_m_d_i_is_branch_V_load, i1 %cond_V" [execute.cpp:80->rv32i_pp_ip.cpp:63]   --->   Operation 336 'and' 'taken_branch_V' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 337 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i20 %e_to_m_d_i_imm_V_load" [execute.cpp:82->rv32i_pp_ip.cpp:63]   --->   Operation 337 'sext' 'sext_ln82' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 338 [1/1] (0.00ns)   --->   "%trunc_ln81 = trunc i20 %e_to_m_d_i_imm_V_load" [execute.cpp:81->rv32i_pp_ip.cpp:63]   --->   Operation 338 'trunc' 'trunc_ln81' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 339 [1/1] (0.69ns)   --->   "%rs = select i1 %e_to_m_d_i_is_r_type_V_load, i32 %e_to_m_rv2, i32 %sext_ln82" [execute.cpp:81->rv32i_pp_ip.cpp:63]   --->   Operation 339 'select' 'rs' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 340 [1/1] (0.00ns)   --->   "%shift_V = trunc i32 %rs"   --->   Operation 340 'trunc' 'shift_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 341 [1/1] (1.21ns)   --->   "%shift_V_1 = select i1 %e_to_m_d_i_is_r_type_V_load, i5 %shift_V, i5 %e_to_m_d_i_rs2_V_load_1" [compute.cpp:41]   --->   Operation 341 'select' 'shift_V_1' <Predicate = true> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 342 [1/1] (0.95ns)   --->   "%switch_ln45 = switch i3 %f_to_e_d_i_func3_V, void %sw.bb30.i.i250, i3 0, void %sw.bb.i152.i, i3 1, void %sw.bb11.i.i, i3 2, void %sw.bb13.i.i, i3 3, void %sw.bb14.i.i, i3 4, void %sw.bb17.i.i, i3 5, void %sw.bb18.i.i, i3 6, void %sw.bb29.i.i249" [compute.cpp:45]   --->   Operation 342 'switch' 'switch_ln45' <Predicate = true> <Delay = 0.95>
ST_2 : Operation 343 [1/1] (0.99ns)   --->   "%result_11 = or i32 %rs, i32 %rv1" [compute.cpp:64]   --->   Operation 343 'or' 'result_11' <Predicate = (f_to_e_d_i_func3_V == 6)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 344 [1/1] (2.30ns)   --->   "%br_ln65 = br void %_Z17compute_op_result21decoded_instruction_sii.exit.i" [compute.cpp:65]   --->   Operation 344 'br' 'br_ln65' <Predicate = (f_to_e_d_i_func3_V == 6)> <Delay = 2.30>
ST_2 : Operation 345 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i5 %shift_V_1" [compute.cpp:60]   --->   Operation 345 'zext' 'zext_ln60' <Predicate = (f_to_e_d_i_func3_V == 5)> <Delay = 0.00>
ST_2 : Operation 346 [1/1] (0.00ns) (grouped into LUT with out node result_10)   --->   "%result_8 = ashr i32 %rv1, i32 %zext_ln60" [compute.cpp:60]   --->   Operation 346 'ashr' 'result_8' <Predicate = (f_to_e_d_i_func3_V == 5)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 347 [1/1] (0.00ns) (grouped into LUT with out node result_10)   --->   "%result_9 = lshr i32 %rv1, i32 %zext_ln60" [compute.cpp:62]   --->   Operation 347 'lshr' 'result_9' <Predicate = (f_to_e_d_i_func3_V == 5)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 348 [1/1] (4.42ns) (out node of the LUT)   --->   "%result_10 = select i1 %f7_6, i32 %result_8, i32 %result_9" [compute.cpp:59]   --->   Operation 348 'select' 'result_10' <Predicate = (f_to_e_d_i_func3_V == 5)> <Delay = 4.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 349 [1/1] (0.99ns)   --->   "%result_7 = xor i32 %rs, i32 %rv1" [compute.cpp:57]   --->   Operation 349 'xor' 'result_7' <Predicate = (f_to_e_d_i_func3_V == 4)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 350 [1/1] (2.30ns)   --->   "%br_ln58 = br void %_Z17compute_op_result21decoded_instruction_sii.exit.i" [compute.cpp:58]   --->   Operation 350 'br' 'br_ln58' <Predicate = (f_to_e_d_i_func3_V == 4)> <Delay = 2.30>
ST_2 : Operation 351 [1/1] (2.47ns)   --->   "%result_6 = icmp_ult  i32 %rv1, i32 %rs" [compute.cpp:55]   --->   Operation 351 'icmp' 'result_6' <Predicate = (f_to_e_d_i_func3_V == 3)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 352 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i1 %result_6" [compute.cpp:55]   --->   Operation 352 'zext' 'zext_ln55' <Predicate = (f_to_e_d_i_func3_V == 3)> <Delay = 0.00>
ST_2 : Operation 353 [1/1] (2.30ns)   --->   "%br_ln56 = br void %_Z17compute_op_result21decoded_instruction_sii.exit.i" [compute.cpp:56]   --->   Operation 353 'br' 'br_ln56' <Predicate = (f_to_e_d_i_func3_V == 3)> <Delay = 2.30>
ST_2 : Operation 354 [1/1] (2.47ns)   --->   "%result_5 = icmp_slt  i32 %rv1, i32 %rs" [compute.cpp:53]   --->   Operation 354 'icmp' 'result_5' <Predicate = (f_to_e_d_i_func3_V == 2)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 355 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i1 %result_5" [compute.cpp:53]   --->   Operation 355 'zext' 'zext_ln53' <Predicate = (f_to_e_d_i_func3_V == 2)> <Delay = 0.00>
ST_2 : Operation 356 [1/1] (2.30ns)   --->   "%br_ln54 = br void %_Z17compute_op_result21decoded_instruction_sii.exit.i" [compute.cpp:54]   --->   Operation 356 'br' 'br_ln54' <Predicate = (f_to_e_d_i_func3_V == 2)> <Delay = 2.30>
ST_2 : Operation 357 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i5 %shift_V_1" [compute.cpp:51]   --->   Operation 357 'zext' 'zext_ln51' <Predicate = (f_to_e_d_i_func3_V == 1)> <Delay = 0.00>
ST_2 : Operation 358 [1/1] (4.42ns)   --->   "%result_4 = shl i32 %rv1, i32 %zext_ln51" [compute.cpp:51]   --->   Operation 358 'shl' 'result_4' <Predicate = (f_to_e_d_i_func3_V == 1)> <Delay = 4.42> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node result_3)   --->   "%and_ln46 = and i1 %e_to_m_d_i_is_r_type_V_load, i1 %f7_6" [compute.cpp:46]   --->   Operation 359 'and' 'and_ln46' <Predicate = (f_to_e_d_i_func3_V == 0)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 360 [1/1] (2.55ns)   --->   "%result_1 = sub i32 %rv1, i32 %rs" [compute.cpp:47]   --->   Operation 360 'sub' 'result_1' <Predicate = (f_to_e_d_i_func3_V == 0)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 361 [1/1] (2.55ns)   --->   "%result_2 = add i32 %rs, i32 %rv1" [compute.cpp:49]   --->   Operation 361 'add' 'result_2' <Predicate = (f_to_e_d_i_func3_V == 0)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 362 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_3 = select i1 %and_ln46, i32 %result_1, i32 %result_2" [compute.cpp:46]   --->   Operation 362 'select' 'result_3' <Predicate = (f_to_e_d_i_func3_V == 0)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 363 [1/1] (2.30ns)   --->   "%br_ln50 = br void %_Z17compute_op_result21decoded_instruction_sii.exit.i" [compute.cpp:50]   --->   Operation 363 'br' 'br_ln50' <Predicate = (f_to_e_d_i_func3_V == 0)> <Delay = 2.30>
ST_2 : Operation 364 [1/1] (0.99ns)   --->   "%result = and i32 %rs, i32 %rv1" [compute.cpp:66]   --->   Operation 364 'and' 'result' <Predicate = (f_to_e_d_i_func3_V == 7)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 365 [1/1] (2.30ns)   --->   "%br_ln67 = br void %_Z17compute_op_result21decoded_instruction_sii.exit.i" [compute.cpp:67]   --->   Operation 365 'br' 'br_ln67' <Predicate = (f_to_e_d_i_func3_V == 7)> <Delay = 2.30>
ST_2 : Operation 366 [1/1] (0.00ns)   --->   "%pc_V_1_load_1 = load i16 %pc_V_1"   --->   Operation 366 'load' 'pc_V_1_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 367 [1/1] (0.00ns)   --->   "%e_to_m_d_i_imm_V_load_2 = load i20 %e_to_m_d_i_imm_V"   --->   Operation 367 'load' 'e_to_m_d_i_imm_V_load_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 368 [1/1] (0.00ns)   --->   "%e_to_m_d_i_type_V_load_1 = load i3 %e_to_m_d_i_type_V" [compute.cpp:128]   --->   Operation 368 'load' 'e_to_m_d_i_type_V_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 369 [1/1] (2.07ns)   --->   "%npc = add i16 %pc_V_1_load_1, i16 1"   --->   Operation 369 'add' 'npc' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 370 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i16 @_ssdm_op_PartSelect.i16.i20.i32.i32, i20 %e_to_m_d_i_imm_V_load_2, i32 1, i32 16"   --->   Operation 370 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 371 [1/1] (2.07ns)   --->   "%next_pc_V_4 = add i16 %pc_V_1_load_1, i16 %trunc_ln3"   --->   Operation 371 'add' 'next_pc_V_4' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 372 [1/1] (2.13ns)   --->   "%add_ln127 = add i18 %trunc_ln59, i18 %trunc_ln81" [compute.cpp:127]   --->   Operation 372 'add' 'add_ln127' <Predicate = true> <Delay = 2.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 373 [1/1] (0.00ns)   --->   "%i_target_pc = partselect i16 @_ssdm_op_PartSelect.i16.i18.i32.i32, i18 %add_ln127, i32 2, i32 17"   --->   Operation 373 'partselect' 'i_target_pc' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 374 [1/1] (0.80ns)   --->   "%next_pc_V_3 = select i1 %cond_V, i16 %next_pc_V_4, i16 %npc" [compute.cpp:139]   --->   Operation 374 'select' 'next_pc_V_3' <Predicate = (e_to_m_d_i_type_V_load_1 == 4)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 375 [1/1] (1.82ns)   --->   "%br_ln140 = br void %_Z15compute_next_pc7ap_uintILi16EE21decoded_instruction_siS_ILi1EE.exit.i" [compute.cpp:140]   --->   Operation 375 'br' 'br_ln140' <Predicate = (e_to_m_d_i_type_V_load_1 == 4)> <Delay = 1.82>
ST_2 : Operation 376 [1/1] (0.80ns)   --->   "%next_pc_V_2 = select i1 %e_to_m_d_i_is_jalr_V_load, i16 %i_target_pc, i16 %npc" [compute.cpp:133]   --->   Operation 376 'select' 'next_pc_V_2' <Predicate = (e_to_m_d_i_type_V_load_1 == 2)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 377 [1/1] (1.82ns)   --->   "%br_ln134 = br void %_Z15compute_next_pc7ap_uintILi16EE21decoded_instruction_siS_ILi1EE.exit.i" [compute.cpp:134]   --->   Operation 377 'br' 'br_ln134' <Predicate = (e_to_m_d_i_type_V_load_1 == 2)> <Delay = 1.82>
ST_2 : Operation 378 [1/1] (1.36ns)   --->   "%icmp_ln1069_2 = icmp_ne  i5 %f_to_e_d_i_opcode_V, i5 13"   --->   Operation 378 'icmp' 'icmp_ln1069_2' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 379 [1/1] (1.36ns)   --->   "%icmp_ln1069_3 = icmp_eq  i5 %f_to_e_d_i_opcode_V, i5 5"   --->   Operation 379 'icmp' 'icmp_ln1069_3' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node and_ln94_1)   --->   "%xor_ln1069 = xor i1 %icmp_ln1069_3, i1 1"   --->   Operation 380 'xor' 'xor_ln1069' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node is_rs1_reg_V)   --->   "%xor_ln92 = xor i1 %icmp_ln1069_2, i1 %icmp_ln1069_3" [execute.cpp:92->rv32i_pp_ip.cpp:63]   --->   Operation 381 'xor' 'xor_ln92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node is_rs1_reg_V)   --->   "%xor_ln92_1 = xor i1 %xor_ln92, i1 %f_to_e_d_i_is_jal_V" [execute.cpp:92->rv32i_pp_ip.cpp:63]   --->   Operation 382 'xor' 'xor_ln92_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 383 [1/1] (1.36ns)   --->   "%icmp_ln1069_4 = icmp_ne  i5 %f_to_e_d_i_rs1_V, i5 0"   --->   Operation 383 'icmp' 'icmp_ln1069_4' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 384 [1/1] (0.97ns) (out node of the LUT)   --->   "%is_rs1_reg_V = and i1 %xor_ln92_1, i1 %icmp_ln1069_4" [execute.cpp:92->rv32i_pp_ip.cpp:63]   --->   Operation 384 'and' 'is_rs1_reg_V' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 385 [1/1] (1.36ns)   --->   "%icmp_ln1069_5 = icmp_ne  i5 %f_to_e_d_i_opcode_V, i5 0"   --->   Operation 385 'icmp' 'icmp_ln1069_5' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 386 [1/1] (0.00ns) (grouped into LUT with out node is_rs2_reg_V)   --->   "%xor_ln94 = xor i1 %f_to_e_d_i_is_op_imm_V, i1 %icmp_ln1069_5" [execute.cpp:94->rv32i_pp_ip.cpp:63]   --->   Operation 386 'xor' 'xor_ln94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node is_rs2_reg_V)   --->   "%xor_ln94_1 = xor i1 %f_to_e_d_i_is_jal_V, i1 1" [execute.cpp:94->rv32i_pp_ip.cpp:63]   --->   Operation 387 'xor' 'xor_ln94_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 388 [1/1] (1.36ns)   --->   "%icmp_ln1069_6 = icmp_ne  i5 %f_to_e_d_i_opcode_V, i5 25"   --->   Operation 388 'icmp' 'icmp_ln1069_6' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 389 [1/1] (1.36ns)   --->   "%icmp_ln1069_7 = icmp_ne  i5 %f_to_e_d_i_rs2_V, i5 0"   --->   Operation 389 'icmp' 'icmp_ln1069_7' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node and_ln94_1)   --->   "%and_ln94 = and i1 %icmp_ln1069_6, i1 %xor_ln1069" [execute.cpp:94->rv32i_pp_ip.cpp:63]   --->   Operation 390 'and' 'and_ln94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 391 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln94_1 = and i1 %and_ln94, i1 %icmp_ln1069_2" [execute.cpp:94->rv32i_pp_ip.cpp:63]   --->   Operation 391 'and' 'and_ln94_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 392 [1/1] (0.00ns) (grouped into LUT with out node is_rs2_reg_V)   --->   "%and_ln94_2 = and i1 %xor_ln94, i1 %icmp_ln1069_7" [execute.cpp:94->rv32i_pp_ip.cpp:63]   --->   Operation 392 'and' 'and_ln94_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 393 [1/1] (0.00ns) (grouped into LUT with out node is_rs2_reg_V)   --->   "%and_ln94_3 = and i1 %and_ln94_2, i1 %xor_ln94_1" [execute.cpp:94->rv32i_pp_ip.cpp:63]   --->   Operation 393 'and' 'and_ln94_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 394 [1/1] (0.97ns) (out node of the LUT)   --->   "%is_rs2_reg_V = and i1 %and_ln94_3, i1 %and_ln94_1" [execute.cpp:94->rv32i_pp_ip.cpp:63]   --->   Operation 394 'and' 'is_rs2_reg_V' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 395 [1/1] (0.97ns)   --->   "%xor_ln947 = xor i1 %e_from_e_cancel_V, i1 1"   --->   Operation 395 'xor' 'xor_ln947' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 396 [1/1] (0.00ns) (grouped into LUT with out node or_ln98)   --->   "%xor_ln98 = xor i1 %e_to_m_d_i_is_load_V_load, i1 1" [execute.cpp:98->rv32i_pp_ip.cpp:63]   --->   Operation 396 'xor' 'xor_ln98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 397 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln98 = or i1 %e_from_e_cancel_V, i1 %xor_ln98" [execute.cpp:98->rv32i_pp_ip.cpp:63]   --->   Operation 397 'or' 'or_ln98' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 398 [1/1] (0.00ns)   --->   "%e_to_m_d_i_rd_V_load = load i5 %e_to_m_d_i_rd_V"   --->   Operation 398 'load' 'e_to_m_d_i_rd_V_load' <Predicate = (!or_ln98)> <Delay = 0.00>
ST_2 : Operation 399 [1/1] (0.00ns)   --->   "%br_ln99 = br i1 %is_rs1_reg_V, void %lor.rhs.i, void %land.lhs.true87.i" [execute.cpp:99->rv32i_pp_ip.cpp:63]   --->   Operation 399 'br' 'br_ln99' <Predicate = (!or_ln98)> <Delay = 0.00>
ST_2 : Operation 400 [1/1] (1.36ns)   --->   "%icmp_ln1065_7 = icmp_eq  i5 %e_to_m_d_i_rd_V_load, i5 %f_to_e_d_i_rs2_V"   --->   Operation 400 'icmp' 'icmp_ln1065_7' <Predicate = (!or_ln98 & !is_rs1_reg_V)> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 401 [1/2] (3.25ns)   --->   "%w = load i16 %data_ram_addr" [mem.cpp:18]   --->   Operation 401 'load' 'w' <Predicate = (!m_from_e_cancel_V)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_2 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node b)   --->   "%b0 = trunc i32 %w" [mem.cpp:19]   --->   Operation 402 'trunc' 'b0' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_2 : Operation 403 [1/1] (0.00ns) (grouped into LUT with out node b_5)   --->   "%b1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %w, i32 8, i32 15" [mem.cpp:21]   --->   Operation 403 'partselect' 'b1' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_2 : Operation 404 [1/1] (0.00ns)   --->   "%ret_V_7 = trunc i32 %w"   --->   Operation 404 'trunc' 'ret_V_7' <Predicate = (!m_from_e_cancel_V & !a1)> <Delay = 0.00>
ST_2 : Operation 405 [1/1] (0.00ns) (grouped into LUT with out node b_5)   --->   "%b2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %w, i32 16, i32 23" [mem.cpp:25]   --->   Operation 405 'partselect' 'b2' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_2 : Operation 406 [1/1] (0.00ns) (grouped into LUT with out node b_5)   --->   "%b3 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %w, i32 24, i32 31" [mem.cpp:27]   --->   Operation 406 'partselect' 'b3' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_2 : Operation 407 [1/1] (0.00ns)   --->   "%ret_V_8 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %w, i32 16, i32 31"   --->   Operation 407 'partselect' 'ret_V_8' <Predicate = (!m_from_e_cancel_V & a1)> <Delay = 0.00>
ST_2 : Operation 408 [1/1] (0.95ns)   --->   "%icmp_ln31 = icmp_eq  i2 %a01, i2 2" [mem.cpp:31]   --->   Operation 408 'icmp' 'icmp_ln31' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 409 [1/1] (0.00ns) (grouped into LUT with out node b_5)   --->   "%b_4 = select i1 %icmp_ln31, i8 %b2, i8 %b3" [mem.cpp:31]   --->   Operation 409 'select' 'b_4' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 410 [1/1] (0.95ns)   --->   "%icmp_ln31_1 = icmp_eq  i2 %a01, i2 1" [mem.cpp:31]   --->   Operation 410 'icmp' 'icmp_ln31_1' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 411 [1/1] (1.24ns) (out node of the LUT)   --->   "%b_5 = select i1 %icmp_ln31_1, i8 %b1, i8 %b_4" [mem.cpp:31]   --->   Operation 411 'select' 'b_5' <Predicate = (!m_from_e_cancel_V)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 412 [1/1] (0.95ns)   --->   "%icmp_ln31_2 = icmp_eq  i2 %a01, i2 0" [mem.cpp:31]   --->   Operation 412 'icmp' 'icmp_ln31_2' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 413 [1/1] (1.24ns) (out node of the LUT)   --->   "%b = select i1 %icmp_ln31_2, i8 %b0, i8 %b_5" [mem.cpp:31]   --->   Operation 413 'select' 'b' <Predicate = (!m_from_e_cancel_V)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 414 [1/1] (0.80ns)   --->   "%h = select i1 %a1, i16 %ret_V_8, i16 %ret_V_7" [mem.cpp:40]   --->   Operation 414 'select' 'h' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 415 [2/2] (3.25ns)   --->   "%store_ln82 = store void @_ssdm_op_Write.bram.i32, i16 %data_ram_addr, i32 %rv2_1_load, i4 15" [mem.cpp:82]   --->   Operation 415 'store' 'store_ln82' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 2)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_2 : Operation 416 [2/2] (3.25ns)   --->   "%store_ln79 = store void @_ssdm_op_Write.bram.p0i32, i16 %data_ram_addr, i32 %shl_ln79_2, i4 %shl_ln79" [mem.cpp:79]   --->   Operation 416 'store' 'store_ln79' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_2 : Operation 417 [2/2] (3.25ns)   --->   "%store_ln76 = store void @_ssdm_op_Write.bram.p0i32, i16 %data_ram_addr, i32 %shl_ln76_2, i4 %shl_ln76" [mem.cpp:76]   --->   Operation 417 'store' 'store_ln76' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>

State 3 <SV = 2> <Delay = 6.99>
ST_3 : Operation 418 [1/1] (0.00ns)   --->   "%f_to_e_d_i_type_V = phi i3 5, void %sw.bb5.i.i, i3 2, void %sw.bb.i.type.exit_crit_edge, i3 2, void %sw.bb.i.type.exit_crit_edge3, i3 5, void %sw.bb5.i11.i, i3 1, void %sw.bb4.i10.i, i3 3, void %sw.bb1.i.type.exit_crit_edge, i3 7, void %sw.bb7.i33.i, i3 7, void %sw.bb6.i32.i, i3 7, void %sw.bb5.i31.i, i3 7, void %sw.bb4.i30.i, i3 6, void %sw.bb3.i29.i, i3 7, void %sw.bb2.i28.i, i3 4, void %sw.bb5.i.type.exit_crit_edge, i3 7, void %sw.bb.i, i3 7, void %sw.bb1.i, i3 2, void %sw.bb5.i, i3 7, void %_Z12fetch_decode13from_f_to_f_s13from_e_to_f_sPjPS_P13from_f_to_e_s.exit"   --->   Operation 418 'phi' 'f_to_e_d_i_type_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 419 [1/1] (1.13ns)   --->   "%f_to_e_d_i_is_r_type_V = icmp_eq  i3 %f_to_e_d_i_type_V, i3 1"   --->   Operation 419 'icmp' 'f_to_e_d_i_is_r_type_V' <Predicate = true> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 420 [1/1] (0.00ns)   --->   "%d_imm_inst_31_V = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %instruction, i32 31"   --->   Operation 420 'bitselect' 'd_imm_inst_31_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 421 [1/1] (0.00ns)   --->   "%d_imm_inst_20_V = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %instruction, i32 20"   --->   Operation 421 'bitselect' 'd_imm_inst_20_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 422 [1/1] (0.00ns)   --->   "%d_imm_inst_11_8_V = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %instruction, i32 8, i32 11"   --->   Operation 422 'partselect' 'd_imm_inst_11_8_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 423 [1/1] (0.00ns)   --->   "%d_imm_inst_7_V = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %instruction, i32 7"   --->   Operation 423 'bitselect' 'd_imm_inst_7_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 424 [1/1] (0.00ns)   --->   "%store_ln36 = store i1 %f_to_e_d_i_is_r_type_V, i1 %e_to_m_d_i_is_r_type_V" [decode.cpp:36->decode.cpp:50]   --->   Operation 424 'store' 'store_ln36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 425 [1/1] (2.06ns)   --->   "%switch_ln36 = switch i3 %f_to_e_d_i_type_V, void %decode_immediate.exit, i3 6, void %sw.bb35.i, i3 5, void %sw.bb31.i, i3 2, void %sw.bb17.i, i3 3, void %sw.bb21.i, i3 4, void %sw.bb26.i" [decode.cpp:36->decode.cpp:50]   --->   Operation 425 'switch' 'switch_ln36' <Predicate = true> <Delay = 2.06>
ST_3 : Operation 426 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %instruction, i32 25, i32 30"   --->   Operation 426 'partselect' 'tmp_4' <Predicate = (f_to_e_d_i_type_V == 4)> <Delay = 0.00>
ST_3 : Operation 427 [1/1] (0.00ns)   --->   "%ret_V_4 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i6.i4, i1 %d_imm_inst_31_V, i1 %d_imm_inst_7_V, i6 %tmp_4, i4 %d_imm_inst_11_8_V"   --->   Operation 427 'bitconcatenate' 'ret_V_4' <Predicate = (f_to_e_d_i_type_V == 4)> <Delay = 0.00>
ST_3 : Operation 428 [1/1] (0.00ns)   --->   "%sext_ln75_2 = sext i12 %ret_V_4"   --->   Operation 428 'sext' 'sext_ln75_2' <Predicate = (f_to_e_d_i_type_V == 4)> <Delay = 0.00>
ST_3 : Operation 429 [1/1] (2.06ns)   --->   "%br_ln41 = br void %decode_immediate.exit" [decode.cpp:41->decode.cpp:50]   --->   Operation 429 'br' 'br_ln41' <Predicate = (f_to_e_d_i_type_V == 4)> <Delay = 2.06>
ST_3 : Operation 430 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %instruction, i32 25, i32 31"   --->   Operation 430 'partselect' 'tmp_2' <Predicate = (f_to_e_d_i_type_V == 3)> <Delay = 0.00>
ST_3 : Operation 431 [1/1] (0.00ns)   --->   "%ret_V_3 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i7.i5, i7 %tmp_2, i5 %f_to_e_d_i_rd_V"   --->   Operation 431 'bitconcatenate' 'ret_V_3' <Predicate = (f_to_e_d_i_type_V == 3)> <Delay = 0.00>
ST_3 : Operation 432 [1/1] (0.00ns)   --->   "%sext_ln75_1 = sext i12 %ret_V_3"   --->   Operation 432 'sext' 'sext_ln75_1' <Predicate = (f_to_e_d_i_type_V == 3)> <Delay = 0.00>
ST_3 : Operation 433 [1/1] (2.06ns)   --->   "%br_ln40 = br void %decode_immediate.exit" [decode.cpp:40->decode.cpp:50]   --->   Operation 433 'br' 'br_ln40' <Predicate = (f_to_e_d_i_type_V == 3)> <Delay = 2.06>
ST_3 : Operation 434 [1/1] (0.00ns)   --->   "%ret_V = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %instruction, i32 20, i32 31"   --->   Operation 434 'partselect' 'ret_V' <Predicate = (f_to_e_d_i_type_V == 2)> <Delay = 0.00>
ST_3 : Operation 435 [1/1] (0.00ns)   --->   "%sext_ln75 = sext i12 %ret_V"   --->   Operation 435 'sext' 'sext_ln75' <Predicate = (f_to_e_d_i_type_V == 2)> <Delay = 0.00>
ST_3 : Operation 436 [1/1] (2.06ns)   --->   "%br_ln39 = br void %decode_immediate.exit" [decode.cpp:39->decode.cpp:50]   --->   Operation 436 'br' 'br_ln39' <Predicate = (f_to_e_d_i_type_V == 2)> <Delay = 2.06>
ST_3 : Operation 437 [1/1] (0.00ns)   --->   "%ret_V_5 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %instruction, i32 12, i32 31"   --->   Operation 437 'partselect' 'ret_V_5' <Predicate = (f_to_e_d_i_type_V == 5)> <Delay = 0.00>
ST_3 : Operation 438 [1/1] (2.06ns)   --->   "%br_ln42 = br void %decode_immediate.exit" [decode.cpp:42->decode.cpp:50]   --->   Operation 438 'br' 'br_ln42' <Predicate = (f_to_e_d_i_type_V == 5)> <Delay = 2.06>
ST_3 : Operation 439 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %instruction, i32 12, i32 19"   --->   Operation 439 'partselect' 'tmp' <Predicate = (f_to_e_d_i_type_V == 6)> <Delay = 0.00>
ST_3 : Operation 440 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %instruction, i32 21, i32 30"   --->   Operation 440 'partselect' 'tmp_1' <Predicate = (f_to_e_d_i_type_V == 6)> <Delay = 0.00>
ST_3 : Operation 441 [1/1] (0.00ns)   --->   "%ret_V_6 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i1.i8.i1.i10, i1 %d_imm_inst_31_V, i8 %tmp, i1 %d_imm_inst_20_V, i10 %tmp_1"   --->   Operation 441 'bitconcatenate' 'ret_V_6' <Predicate = (f_to_e_d_i_type_V == 6)> <Delay = 0.00>
ST_3 : Operation 442 [1/1] (2.06ns)   --->   "%br_ln43 = br void %decode_immediate.exit" [decode.cpp:43->decode.cpp:50]   --->   Operation 442 'br' 'br_ln43' <Predicate = (f_to_e_d_i_type_V == 6)> <Delay = 2.06>
ST_3 : Operation 443 [1/1] (0.00ns)   --->   "%f_to_e_d_i_imm_1 = phi i20 %ret_V_6, void %sw.bb35.i, i20 %ret_V_5, void %sw.bb31.i, i20 %sext_ln75_2, void %sw.bb26.i, i20 %sext_ln75_1, void %sw.bb21.i, i20 %sext_ln75, void %sw.bb17.i, i20 0, void %type.exit"   --->   Operation 443 'phi' 'f_to_e_d_i_imm_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 444 [1/1] (0.95ns)   --->   "%switch_ln13 = switch i3 %f_to_e_d_i_func3_V, void %sw.bb15.i.i, i3 0, void %sw.bb.i.i239, i3 1, void %sw.bb1.i.i240, i3 2, void %sw.bb4.i.i241, i3 3, void %sw.bb4.i.i241, i3 4, void %sw.bb6.i.i242, i3 5, void %sw.bb9.i.i, i3 6, void %sw.bb12.i.i" [compute.cpp:13]   --->   Operation 444 'switch' 'switch_ln13' <Predicate = true> <Delay = 0.95>
ST_3 : Operation 445 [1/1] (2.30ns)   --->   "%br_ln63 = br void %_Z17compute_op_result21decoded_instruction_sii.exit.i" [compute.cpp:63]   --->   Operation 445 'br' 'br_ln63' <Predicate = (f_to_e_d_i_func3_V == 5)> <Delay = 2.30>
ST_3 : Operation 446 [1/1] (2.30ns)   --->   "%br_ln52 = br void %_Z17compute_op_result21decoded_instruction_sii.exit.i" [compute.cpp:52]   --->   Operation 446 'br' 'br_ln52' <Predicate = (f_to_e_d_i_func3_V == 1)> <Delay = 2.30>
ST_3 : Operation 447 [1/1] (0.00ns)   --->   "%result_26 = phi i32 %result, void %sw.bb30.i.i250, i32 %result_11, void %sw.bb29.i.i249, i32 %result_10, void %sw.bb18.i.i, i32 %result_7, void %sw.bb17.i.i, i32 %zext_ln55, void %sw.bb14.i.i, i32 %zext_ln53, void %sw.bb13.i.i, i32 %result_4, void %sw.bb11.i.i, i32 %result_3, void %sw.bb.i152.i"   --->   Operation 447 'phi' 'result_26' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 448 [1/1] (0.00ns)   --->   "%pc_V_1_load = load i16 %pc_V_1"   --->   Operation 448 'load' 'pc_V_1_load' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 449 [1/1] (0.00ns)   --->   "%e_to_m_d_i_imm_V_load_1 = load i20 %e_to_m_d_i_imm_V" [compute.cpp:75]   --->   Operation 449 'load' 'e_to_m_d_i_imm_V_load_1' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 450 [1/1] (0.00ns)   --->   "%e_to_m_d_i_type_V_load = load i3 %e_to_m_d_i_type_V" [compute.cpp:79]   --->   Operation 450 'load' 'e_to_m_d_i_type_V_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 451 [1/1] (0.00ns)   --->   "%imm12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %e_to_m_d_i_imm_V_load_1, i12 0" [compute.cpp:75]   --->   Operation 451 'bitconcatenate' 'imm12' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 452 [1/1] (0.00ns)   --->   "%r_V = shl i16 %pc_V_1_load, i16 2"   --->   Operation 452 'shl' 'r_V' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 453 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i16 %r_V" [compute.cpp:106]   --->   Operation 453 'zext' 'zext_ln106' <Predicate = (!e_to_m_d_i_is_lui_V_load & !e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 454 [1/1] (2.07ns)   --->   "%npc4 = add i16 %r_V, i16 4"   --->   Operation 454 'add' 'npc4' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 455 [1/1] (2.06ns)   --->   "%switch_ln79 = switch i3 %e_to_m_d_i_type_V_load, void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i, i3 6, void %sw.bb33.i.i255, i3 2, void %sw.bb2.i.i252, i3 3, void %sw.bb19.i.i253, i3 5, void %sw.bb25.i.i" [compute.cpp:79]   --->   Operation 455 'switch' 'switch_ln79' <Predicate = true> <Delay = 2.06>
ST_3 : Operation 456 [1/1] (2.55ns)   --->   "%result_15 = add i32 %imm12, i32 %zext_ln106" [compute.cpp:106]   --->   Operation 456 'add' 'result_15' <Predicate = (e_to_m_d_i_type_V_load == 5 & !e_to_m_d_i_is_lui_V_load & !e_to_m_d_i_is_ret_V_load)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 457 [1/1] (0.69ns)   --->   "%select_ln103 = select i1 %e_to_m_d_i_is_lui_V_load, i32 %imm12, i32 %result_15" [compute.cpp:103]   --->   Operation 457 'select' 'select_ln103' <Predicate = (e_to_m_d_i_type_V_load == 5 & !e_to_m_d_i_is_ret_V_load)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 458 [1/1] (2.06ns)   --->   "%br_ln103 = br void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i" [compute.cpp:103]   --->   Operation 458 'br' 'br_ln103' <Predicate = (e_to_m_d_i_type_V_load == 5)> <Delay = 2.06>
ST_3 : Operation 459 [1/1] (2.55ns)   --->   "%result_14 = add i32 %rv1, i32 %sext_ln82" [compute.cpp:96]   --->   Operation 459 'add' 'result_14' <Predicate = (e_to_m_d_i_type_V_load == 3 & !e_to_m_d_i_is_ret_V_load)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 460 [1/1] (2.06ns)   --->   "%br_ln97 = br void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i" [compute.cpp:97]   --->   Operation 460 'br' 'br_ln97' <Predicate = (e_to_m_d_i_type_V_load == 3)> <Delay = 2.06>
ST_3 : Operation 461 [1/1] (0.00ns)   --->   "%br_ln85 = br i1 %e_to_m_d_i_is_jalr_V_load, void %if.else.i.i, void %if.then.i.i" [compute.cpp:85]   --->   Operation 461 'br' 'br_ln85' <Predicate = (e_to_m_d_i_type_V_load == 2)> <Delay = 0.00>
ST_3 : Operation 462 [1/1] (2.55ns)   --->   "%add_ln88 = add i32 %rv1, i32 %sext_ln82" [compute.cpp:88]   --->   Operation 462 'add' 'add_ln88' <Predicate = (e_to_m_d_i_type_V_load == 2 & !e_to_m_d_i_is_jalr_V_load & e_to_m_d_i_is_load_V_load & !e_to_m_d_i_is_ret_V_load)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 463 [1/1] (0.69ns)   --->   "%select_ln87 = select i1 %e_to_m_d_i_is_load_V_load, i32 %add_ln88, i32 0" [compute.cpp:87]   --->   Operation 463 'select' 'select_ln87' <Predicate = (e_to_m_d_i_type_V_load == 2 & !e_to_m_d_i_is_jalr_V_load & !e_to_m_d_i_is_ret_V_load)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 464 [1/1] (2.06ns)   --->   "%br_ln87 = br void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i" [compute.cpp:87]   --->   Operation 464 'br' 'br_ln87' <Predicate = (e_to_m_d_i_type_V_load == 2 & !e_to_m_d_i_is_jalr_V_load)> <Delay = 2.06>
ST_3 : Operation 465 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i16 %npc4" [compute.cpp:86]   --->   Operation 465 'zext' 'zext_ln86' <Predicate = (e_to_m_d_i_type_V_load == 2 & e_to_m_d_i_is_jalr_V_load & !e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 466 [1/1] (2.06ns)   --->   "%br_ln86 = br void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i" [compute.cpp:86]   --->   Operation 466 'br' 'br_ln86' <Predicate = (e_to_m_d_i_type_V_load == 2 & e_to_m_d_i_is_jalr_V_load)> <Delay = 2.06>
ST_3 : Operation 467 [1/1] (0.00ns)   --->   "%zext_ln109 = zext i16 %npc4" [compute.cpp:109]   --->   Operation 467 'zext' 'zext_ln109' <Predicate = (e_to_m_d_i_type_V_load == 6 & !e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 468 [1/1] (2.06ns)   --->   "%br_ln110 = br void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i" [compute.cpp:110]   --->   Operation 468 'br' 'br_ln110' <Predicate = (e_to_m_d_i_type_V_load == 6)> <Delay = 2.06>
ST_3 : Operation 469 [1/1] (0.00ns)   --->   "%c_result = phi i32 %select_ln87, void %if.else.i.i, i32 %zext_ln109, void %sw.bb33.i.i255, i32 %result_14, void %sw.bb19.i.i253, i32 %zext_ln86, void %if.then.i.i, i32 %select_ln103, void %sw.bb25.i.i, i32 0, void %_Z17compute_op_result21decoded_instruction_sii.exit.i"   --->   Operation 469 'phi' 'c_result' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 470 [1/1] (0.00ns) (grouped into LUT with out node result_16)   --->   "%or_ln85 = or i1 %e_to_m_d_i_is_r_type_V_load, i1 %e_to_m_d_i_is_op_imm_V_load" [execute.cpp:85->rv32i_pp_ip.cpp:63]   --->   Operation 470 'or' 'or_ln85' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 471 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_16 = select i1 %or_ln85, i32 %result_26, i32 %c_result" [execute.cpp:85->rv32i_pp_ip.cpp:63]   --->   Operation 471 'select' 'result_16' <Predicate = (!e_to_m_d_i_is_ret_V_load)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 472 [1/1] (1.82ns)   --->   "%switch_ln128 = switch i3 %e_to_m_d_i_type_V_load_1, void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i._Z15compute_next_pc7ap_uintILi16EE21decoded_instruction_siS_ILi1EE.exit.i_crit_edge, i3 6, void %_Z15compute_next_pc7ap_uintILi16EE21decoded_instruction_siS_ILi1EE.exit.i, i3 2, void %sw.bb8.i.i, i3 4, void %sw.bb11.i194.i" [compute.cpp:128]   --->   Operation 472 'switch' 'switch_ln128' <Predicate = true> <Delay = 1.82>
ST_3 : Operation 473 [1/1] (1.82ns)   --->   "%br_ln128 = br void %_Z15compute_next_pc7ap_uintILi16EE21decoded_instruction_siS_ILi1EE.exit.i" [compute.cpp:128]   --->   Operation 473 'br' 'br_ln128' <Predicate = (e_to_m_d_i_type_V_load_1 != 6 & e_to_m_d_i_type_V_load_1 != 2 & e_to_m_d_i_type_V_load_1 != 4)> <Delay = 1.82>
ST_3 : Operation 474 [1/1] (0.00ns)   --->   "%next_pc_V = phi i16 %next_pc_V_3, void %sw.bb11.i194.i, i16 %next_pc_V_2, void %sw.bb8.i.i, i16 %npc, void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i._Z15compute_next_pc7ap_uintILi16EE21decoded_instruction_siS_ILi1EE.exit.i_crit_edge, i16 %next_pc_V_4, void %_Z14compute_result7ap_uintILi16EE21decoded_instruction_si.exit.i"   --->   Operation 474 'phi' 'next_pc_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 475 [1/1] (1.58ns)   --->   "%br_ln98 = br i1 %or_ln98, void %land.rhs84.i, void %execute.exit" [execute.cpp:98->rv32i_pp_ip.cpp:63]   --->   Operation 475 'br' 'br_ln98' <Predicate = true> <Delay = 1.58>
ST_3 : Operation 476 [1/1] (0.97ns)   --->   "%and_ln101 = and i1 %is_rs2_reg_V, i1 %icmp_ln1065_7" [execute.cpp:101->rv32i_pp_ip.cpp:63]   --->   Operation 476 'and' 'and_ln101' <Predicate = (!or_ln98 & !is_rs1_reg_V)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 477 [1/1] (1.58ns)   --->   "%br_ln100 = br i1 %and_ln101, void %execute.exit, void %if.then.i256" [execute.cpp:100->rv32i_pp_ip.cpp:63]   --->   Operation 477 'br' 'br_ln100' <Predicate = (!or_ln98 & !is_rs1_reg_V)> <Delay = 1.58>
ST_3 : Operation 478 [1/1] (1.36ns)   --->   "%icmp_ln1065_6 = icmp_eq  i5 %e_to_m_d_i_rd_V_load, i5 %f_to_e_d_i_rs1_V"   --->   Operation 478 'icmp' 'icmp_ln1065_6' <Predicate = (!or_ln98 & is_rs1_reg_V)> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 479 [1/1] (0.00ns) (grouped into LUT with out node or_ln99)   --->   "%xor_ln99 = xor i1 %is_rs2_reg_V, i1 1" [execute.cpp:99->rv32i_pp_ip.cpp:63]   --->   Operation 479 'xor' 'xor_ln99' <Predicate = (!or_ln98 & is_rs1_reg_V)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 480 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln99 = or i1 %icmp_ln1065_6, i1 %xor_ln99" [execute.cpp:99->rv32i_pp_ip.cpp:63]   --->   Operation 480 'or' 'or_ln99' <Predicate = (!or_ln98 & is_rs1_reg_V)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 481 [1/1] (0.00ns)   --->   "%br_ln99 = br i1 %or_ln99, void %land.rhs94.i, void %land.end101.i" [execute.cpp:99->rv32i_pp_ip.cpp:63]   --->   Operation 481 'br' 'br_ln99' <Predicate = (!or_ln98 & is_rs1_reg_V)> <Delay = 0.00>
ST_3 : Operation 482 [1/1] (1.36ns)   --->   "%icmp_ln1065_8 = icmp_eq  i5 %e_to_m_d_i_rd_V_load, i5 %f_to_e_d_i_rs2_V"   --->   Operation 482 'icmp' 'icmp_ln1065_8' <Predicate = (!or_ln98 & is_rs1_reg_V & !or_ln99)> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 483 [1/1] (1.58ns)   --->   "%br_ln101 = br i1 %icmp_ln1065_8, void %execute.exit, void %if.then.i256" [execute.cpp:101->rv32i_pp_ip.cpp:63]   --->   Operation 483 'br' 'br_ln101' <Predicate = (!or_ln98 & is_rs1_reg_V & !or_ln99)> <Delay = 1.58>
ST_3 : Operation 484 [1/1] (1.58ns)   --->   "%br_ln101 = br i1 %icmp_ln1065_6, void %execute.exit, void %if.then.i256" [execute.cpp:101->rv32i_pp_ip.cpp:63]   --->   Operation 484 'br' 'br_ln101' <Predicate = (!or_ln98 & is_rs1_reg_V & or_ln99)> <Delay = 1.58>
ST_3 : Operation 485 [1/1] (1.58ns)   --->   "%br_ln101 = br void %execute.exit" [execute.cpp:101->rv32i_pp_ip.cpp:63]   --->   Operation 485 'br' 'br_ln101' <Predicate = (!or_ln98 & is_rs1_reg_V & or_ln99 & icmp_ln1065_6) | (!or_ln98 & is_rs1_reg_V & !or_ln99 & icmp_ln1065_8) | (!or_ln98 & !is_rs1_reg_V & and_ln101)> <Delay = 1.58>
ST_3 : Operation 486 [1/1] (0.00ns)   --->   "%e_to_f_target_pc_1 = phi i16 %npc, void %if.then.i256, i16 %next_pc_V, void %_Z15compute_next_pc7ap_uintILi16EE21decoded_instruction_siS_ILi1EE.exit.i, i16 %next_pc_V, void %lor.rhs.i, i16 %next_pc_V, void %land.rhs94.i, i16 %next_pc_V, void %land.end101.i"   --->   Operation 486 'phi' 'e_to_f_target_pc_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 487 [1/1] (0.00ns) (grouped into LUT with out node e_to_f_set_pc_V)   --->   "%empty_26 = phi i1 1, void %if.then.i256, i1 0, void %_Z15compute_next_pc7ap_uintILi16EE21decoded_instruction_siS_ILi1EE.exit.i, i1 0, void %lor.rhs.i, i1 0, void %land.rhs94.i, i1 0, void %land.end101.i"   --->   Operation 487 'phi' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 488 [1/1] (0.00ns) (grouped into LUT with out node e_to_f_set_pc_V)   --->   "%or_ln102_1 = or i1 %e_to_m_d_i_is_jal_V_load, i1 %taken_branch_V" [execute.cpp:102->rv32i_pp_ip.cpp:63]   --->   Operation 488 'or' 'or_ln102_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 489 [1/1] (0.00ns) (grouped into LUT with out node e_to_f_set_pc_V)   --->   "%or_ln102_2 = or i1 %empty_26, i1 %e_to_m_d_i_is_jalr_V_load" [execute.cpp:102->rv32i_pp_ip.cpp:63]   --->   Operation 489 'or' 'or_ln102_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 490 [1/1] (0.00ns) (grouped into LUT with out node e_to_f_set_pc_V)   --->   "%or_ln102 = or i1 %or_ln102_2, i1 %or_ln102_1" [execute.cpp:102->rv32i_pp_ip.cpp:63]   --->   Operation 490 'or' 'or_ln102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 491 [1/1] (0.97ns) (out node of the LUT)   --->   "%e_to_f_set_pc_V = and i1 %or_ln102, i1 %xor_ln947" [execute.cpp:102->rv32i_pp_ip.cpp:63]   --->   Operation 491 'and' 'e_to_f_set_pc_V' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 492 [1/1] (0.00ns)   --->   "%zext_ln110 = zext i16 %e_to_f_target_pc_1" [execute.cpp:110->rv32i_pp_ip.cpp:63]   --->   Operation 492 'zext' 'zext_ln110' <Predicate = (e_to_m_d_i_is_ret_V_load)> <Delay = 0.00>
ST_3 : Operation 493 [1/1] (0.69ns)   --->   "%e_to_m_result = select i1 %e_to_m_d_i_is_ret_V_load, i32 %zext_ln110, i32 %result_16" [execute.cpp:109->rv32i_pp_ip.cpp:63]   --->   Operation 493 'select' 'e_to_m_result' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 494 [1/1] (0.00ns)   --->   "%br_ln95 = br i1 %m_from_e_cancel_V, void %if.then.i_ifconv, void %_Z10mem_access13from_e_to_m_sPiP13from_m_to_w_s.exit" [mem.cpp:95]   --->   Operation 494 'br' 'br_ln95' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 495 [1/1] (0.00ns) (grouped into LUT with out node result_27)   --->   "%sext_ln38 = sext i8 %b" [mem.cpp:38]   --->   Operation 495 'sext' 'sext_ln38' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_3 : Operation 496 [1/1] (0.00ns) (grouped into LUT with out node result_21)   --->   "%zext_ln17 = zext i8 %b" [mem.cpp:17]   --->   Operation 496 'zext' 'zext_ln17' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00>
ST_3 : Operation 497 [1/1] (0.00ns) (grouped into LUT with out node result_24)   --->   "%sext_ln42 = sext i16 %h" [mem.cpp:42]   --->   Operation 497 'sext' 'sext_ln42' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00>
ST_3 : Operation 498 [1/1] (1.13ns)   --->   "%icmp_ln44 = icmp_eq  i3 %msize_V_load, i3 5" [mem.cpp:44]   --->   Operation 498 'icmp' 'icmp_ln44' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 499 [1/1] (0.00ns) (grouped into LUT with out node result_21)   --->   "%and_ln44 = and i1 %m_from_e_d_i_is_load_V_load, i1 %icmp_ln44" [mem.cpp:44]   --->   Operation 499 'and' 'and_ln44' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 500 [1/1] (0.00ns) (grouped into LUT with out node result_21)   --->   "%result_20 = select i1 %and_ln44, i16 %h, i16 0" [mem.cpp:44]   --->   Operation 500 'select' 'result_20' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 501 [1/1] (1.13ns)   --->   "%icmp_ln44_1 = icmp_eq  i3 %msize_V_load, i3 4" [mem.cpp:44]   --->   Operation 501 'icmp' 'icmp_ln44_1' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 502 [1/1] (0.00ns) (grouped into LUT with out node result_21)   --->   "%and_ln44_1 = and i1 %m_from_e_d_i_is_load_V_load, i1 %icmp_ln44_1" [mem.cpp:44]   --->   Operation 502 'and' 'and_ln44_1' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 503 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_21 = select i1 %and_ln44_1, i16 %zext_ln17, i16 %result_20" [mem.cpp:44]   --->   Operation 503 'select' 'result_21' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node result_22)   --->   "%zext_ln11 = zext i16 %result_21" [mem.cpp:11]   --->   Operation 504 'zext' 'zext_ln11' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00>
ST_3 : Operation 505 [1/1] (1.13ns)   --->   "%icmp_ln44_2 = icmp_eq  i3 %msize_V_load, i3 2" [mem.cpp:44]   --->   Operation 505 'icmp' 'icmp_ln44_2' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 506 [1/1] (0.00ns) (grouped into LUT with out node result_22)   --->   "%and_ln44_2 = and i1 %m_from_e_d_i_is_load_V_load, i1 %icmp_ln44_2" [mem.cpp:44]   --->   Operation 506 'and' 'and_ln44_2' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 507 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_22 = select i1 %and_ln44_2, i32 %w, i32 %zext_ln11" [mem.cpp:44]   --->   Operation 507 'select' 'result_22' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 508 [1/1] (1.13ns)   --->   "%icmp_ln44_3 = icmp_eq  i3 %msize_V_load, i3 1" [mem.cpp:44]   --->   Operation 508 'icmp' 'icmp_ln44_3' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 509 [1/1] (0.00ns) (grouped into LUT with out node result_24)   --->   "%and_ln44_3 = and i1 %m_from_e_d_i_is_load_V_load, i1 %icmp_ln44_3" [mem.cpp:44]   --->   Operation 509 'and' 'and_ln44_3' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 510 [1/1] (0.00ns) (grouped into LUT with out node result_24)   --->   "%result_23 = select i1 %and_ln44_3, i32 %sext_ln42, i32 %result_22" [mem.cpp:44]   --->   Operation 510 'select' 'result_23' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_load_V_load)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 511 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_24 = select i1 %m_from_e_d_i_is_load_V_load, i32 %result_23, i32 %m_from_e_result_load" [mem.cpp:44]   --->   Operation 511 'select' 'result_24' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 512 [1/1] (1.13ns)   --->   "%icmp_ln44_4 = icmp_eq  i3 %msize_V_load, i3 0" [mem.cpp:44]   --->   Operation 512 'icmp' 'icmp_ln44_4' <Predicate = (!m_from_e_cancel_V)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 513 [1/1] (0.00ns) (grouped into LUT with out node result_27)   --->   "%and_ln44_4 = and i1 %m_from_e_d_i_is_load_V_load, i1 %icmp_ln44_4" [mem.cpp:44]   --->   Operation 513 'and' 'and_ln44_4' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 514 [1/1] (0.97ns) (out node of the LUT)   --->   "%result_27 = select i1 %and_ln44_4, i32 %sext_ln38, i32 %result_24" [mem.cpp:44]   --->   Operation 514 'select' 'result_27' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 515 [1/1] (0.00ns)   --->   "%br_ln100 = br i1 %m_from_e_d_i_is_store_V_load, void %if.end.i, void %if.then12.i" [mem.cpp:100]   --->   Operation 515 'br' 'br_ln100' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_3 : Operation 516 [1/2] (3.25ns)   --->   "%store_ln82 = store void @_ssdm_op_Write.bram.i32, i16 %data_ram_addr, i32 %rv2_1_load, i4 15" [mem.cpp:82]   --->   Operation 516 'store' 'store_ln82' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 2)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_3 : Operation 517 [1/1] (0.00ns)   --->   "%br_ln83 = br void %_ZL9mem_storePi7ap_uintILi18EEiS0_ILi2EE.exit.i" [mem.cpp:83]   --->   Operation 517 'br' 'br_ln83' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 2)> <Delay = 0.00>
ST_3 : Operation 518 [1/2] (3.25ns)   --->   "%store_ln79 = store void @_ssdm_op_Write.bram.p0i32, i16 %data_ram_addr, i32 %shl_ln79_2, i4 %shl_ln79" [mem.cpp:79]   --->   Operation 518 'store' 'store_ln79' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_3 : Operation 519 [1/1] (0.00ns)   --->   "%br_ln80 = br void %_ZL9mem_storePi7ap_uintILi18EEiS0_ILi2EE.exit.i" [mem.cpp:80]   --->   Operation 519 'br' 'br_ln80' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 1)> <Delay = 0.00>
ST_3 : Operation 520 [1/2] (3.25ns)   --->   "%store_ln76 = store void @_ssdm_op_Write.bram.p0i32, i16 %data_ram_addr, i32 %shl_ln76_2, i4 %shl_ln76" [mem.cpp:76]   --->   Operation 520 'store' 'store_ln76' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 3.25> <CoreInst = "RAM_1P">   --->   Core 86 'RAM_1P' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 65536> <RAM>
ST_3 : Operation 521 [1/1] (0.00ns)   --->   "%br_ln77 = br void %_ZL9mem_storePi7ap_uintILi18EEiS0_ILi2EE.exit.i" [mem.cpp:77]   --->   Operation 521 'br' 'br_ln77' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load & msize_V_1 == 0)> <Delay = 0.00>
ST_3 : Operation 522 [1/1] (0.00ns)   --->   "%br_ln101 = br void %if.end.i" [mem.cpp:101]   --->   Operation 522 'br' 'br_ln101' <Predicate = (!m_from_e_cancel_V & m_from_e_d_i_is_store_V_load)> <Delay = 0.00>
ST_3 : Operation 523 [1/1] (0.00ns)   --->   "%store_ln103 = store i32 %result_27, i32 %reg_file_31" [mem.cpp:103]   --->   Operation 523 'store' 'store_ln103' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_3 : Operation 524 [1/1] (0.00ns)   --->   "%br_ln103 = br void %_Z10mem_access13from_e_to_m_sPiP13from_m_to_w_s.exit" [mem.cpp:103]   --->   Operation 524 'br' 'br_ln103' <Predicate = (!m_from_e_cancel_V)> <Delay = 0.00>
ST_3 : Operation 525 [1/1] (0.97ns)   --->   "%xor_ln947_1 = xor i1 %m_to_w_cancel_V_1, i1 1"   --->   Operation 525 'xor' 'xor_ln947_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 526 [1/1] (0.97ns)   --->   "%or_ln17 = or i1 %m_to_w_cancel_V_1, i1 %w_from_m_has_no_dest_V_load" [wb.cpp:17]   --->   Operation 526 'or' 'or_ln17' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 527 [1/1] (0.00ns)   --->   "%br_ln17 = br i1 %or_ln17, void %if.then2.i, void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:17]   --->   Operation 527 'br' 'br_ln17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 528 [1/1] (0.00ns)   --->   "%w_from_m_rd_V_load_1 = load i5 %w_from_m_rd_V" [wb.cpp:19]   --->   Operation 528 'load' 'w_from_m_rd_V_load_1' <Predicate = (!or_ln17)> <Delay = 0.00>
ST_3 : Operation 529 [1/1] (0.95ns)   --->   "%switch_ln19 = switch i5 %w_from_m_rd_V_load_1, void %arrayidx.i724.case.31, i5 0, void %if.then2.i._Z2wb13from_m_to_w_sPi.exit_crit_edge, i5 1, void %if.then2.i._Z2wb13from_m_to_w_sPi.exit_crit_edge35, i5 2, void %arrayidx.i724.case.2, i5 3, void %arrayidx.i724.case.3, i5 4, void %arrayidx.i724.case.4, i5 5, void %arrayidx.i724.case.5, i5 6, void %arrayidx.i724.case.6, i5 7, void %arrayidx.i724.case.7, i5 8, void %arrayidx.i724.case.8, i5 9, void %arrayidx.i724.case.9, i5 10, void %arrayidx.i724.case.10, i5 11, void %arrayidx.i724.case.11, i5 12, void %arrayidx.i724.case.12, i5 13, void %arrayidx.i724.case.13, i5 14, void %arrayidx.i724.case.14, i5 15, void %arrayidx.i724.case.15, i5 16, void %arrayidx.i724.case.16, i5 17, void %arrayidx.i724.case.17, i5 18, void %arrayidx.i724.case.18, i5 19, void %arrayidx.i724.case.19, i5 20, void %arrayidx.i724.case.20, i5 21, void %arrayidx.i724.case.21, i5 22, void %arrayidx.i724.case.22, i5 23, void %arrayidx.i724.case.23, i5 24, void %arrayidx.i724.case.24, i5 25, void %arrayidx.i724.case.25, i5 26, void %arrayidx.i724.case.26, i5 27, void %arrayidx.i724.case.27, i5 28, void %arrayidx.i724.case.28, i5 29, void %arrayidx.i724.case.29, i5 30, void %arrayidx.i724.case.30" [wb.cpp:19]   --->   Operation 529 'switch' 'switch_ln19' <Predicate = (!or_ln17)> <Delay = 0.95>
ST_3 : Operation 530 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_1" [wb.cpp:19]   --->   Operation 530 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 30)> <Delay = 1.58>
ST_3 : Operation 531 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 531 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 30)> <Delay = 0.00>
ST_3 : Operation 532 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_2" [wb.cpp:19]   --->   Operation 532 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 29)> <Delay = 1.58>
ST_3 : Operation 533 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 533 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 29)> <Delay = 0.00>
ST_3 : Operation 534 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_3" [wb.cpp:19]   --->   Operation 534 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 28)> <Delay = 1.58>
ST_3 : Operation 535 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 535 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 28)> <Delay = 0.00>
ST_3 : Operation 536 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_4" [wb.cpp:19]   --->   Operation 536 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 27)> <Delay = 1.58>
ST_3 : Operation 537 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 537 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 27)> <Delay = 0.00>
ST_3 : Operation 538 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_5" [wb.cpp:19]   --->   Operation 538 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 26)> <Delay = 1.58>
ST_3 : Operation 539 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 539 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 26)> <Delay = 0.00>
ST_3 : Operation 540 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_6" [wb.cpp:19]   --->   Operation 540 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 25)> <Delay = 1.58>
ST_3 : Operation 541 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 541 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 25)> <Delay = 0.00>
ST_3 : Operation 542 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_7" [wb.cpp:19]   --->   Operation 542 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 24)> <Delay = 1.58>
ST_3 : Operation 543 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 543 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 24)> <Delay = 0.00>
ST_3 : Operation 544 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_8" [wb.cpp:19]   --->   Operation 544 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 23)> <Delay = 1.58>
ST_3 : Operation 545 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 545 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 23)> <Delay = 0.00>
ST_3 : Operation 546 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_9" [wb.cpp:19]   --->   Operation 546 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 22)> <Delay = 1.58>
ST_3 : Operation 547 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 547 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 22)> <Delay = 0.00>
ST_3 : Operation 548 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_10" [wb.cpp:19]   --->   Operation 548 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 21)> <Delay = 1.58>
ST_3 : Operation 549 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 549 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 21)> <Delay = 0.00>
ST_3 : Operation 550 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_11" [wb.cpp:19]   --->   Operation 550 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 20)> <Delay = 1.58>
ST_3 : Operation 551 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 551 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 20)> <Delay = 0.00>
ST_3 : Operation 552 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_12" [wb.cpp:19]   --->   Operation 552 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 19)> <Delay = 1.58>
ST_3 : Operation 553 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 553 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 19)> <Delay = 0.00>
ST_3 : Operation 554 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_13" [wb.cpp:19]   --->   Operation 554 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 18)> <Delay = 1.58>
ST_3 : Operation 555 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 555 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 18)> <Delay = 0.00>
ST_3 : Operation 556 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_14" [wb.cpp:19]   --->   Operation 556 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 17)> <Delay = 1.58>
ST_3 : Operation 557 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 557 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 17)> <Delay = 0.00>
ST_3 : Operation 558 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_15" [wb.cpp:19]   --->   Operation 558 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 16)> <Delay = 1.58>
ST_3 : Operation 559 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 559 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 16)> <Delay = 0.00>
ST_3 : Operation 560 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_16" [wb.cpp:19]   --->   Operation 560 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 15)> <Delay = 1.58>
ST_3 : Operation 561 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 561 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 15)> <Delay = 0.00>
ST_3 : Operation 562 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_32" [wb.cpp:19]   --->   Operation 562 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 14)> <Delay = 1.58>
ST_3 : Operation 563 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 563 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 14)> <Delay = 0.00>
ST_3 : Operation 564 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_30" [wb.cpp:19]   --->   Operation 564 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 13)> <Delay = 1.58>
ST_3 : Operation 565 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 565 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 13)> <Delay = 0.00>
ST_3 : Operation 566 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_29" [wb.cpp:19]   --->   Operation 566 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 12)> <Delay = 1.58>
ST_3 : Operation 567 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 567 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 12)> <Delay = 0.00>
ST_3 : Operation 568 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_28" [wb.cpp:19]   --->   Operation 568 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 11)> <Delay = 1.58>
ST_3 : Operation 569 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 569 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 11)> <Delay = 0.00>
ST_3 : Operation 570 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_27" [wb.cpp:19]   --->   Operation 570 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 10)> <Delay = 1.58>
ST_3 : Operation 571 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 571 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 10)> <Delay = 0.00>
ST_3 : Operation 572 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_26" [wb.cpp:19]   --->   Operation 572 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 9)> <Delay = 1.58>
ST_3 : Operation 573 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 573 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 9)> <Delay = 0.00>
ST_3 : Operation 574 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_25" [wb.cpp:19]   --->   Operation 574 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 8)> <Delay = 1.58>
ST_3 : Operation 575 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 575 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 8)> <Delay = 0.00>
ST_3 : Operation 576 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_24" [wb.cpp:19]   --->   Operation 576 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 7)> <Delay = 1.58>
ST_3 : Operation 577 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 577 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 7)> <Delay = 0.00>
ST_3 : Operation 578 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_23" [wb.cpp:19]   --->   Operation 578 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 6)> <Delay = 1.58>
ST_3 : Operation 579 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 579 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 6)> <Delay = 0.00>
ST_3 : Operation 580 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_22" [wb.cpp:19]   --->   Operation 580 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 5)> <Delay = 1.58>
ST_3 : Operation 581 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 581 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 5)> <Delay = 0.00>
ST_3 : Operation 582 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_21" [wb.cpp:19]   --->   Operation 582 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 4)> <Delay = 1.58>
ST_3 : Operation 583 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 583 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 4)> <Delay = 0.00>
ST_3 : Operation 584 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_20" [wb.cpp:19]   --->   Operation 584 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 3)> <Delay = 1.58>
ST_3 : Operation 585 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 585 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 3)> <Delay = 0.00>
ST_3 : Operation 586 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_19" [wb.cpp:19]   --->   Operation 586 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 2)> <Delay = 1.58>
ST_3 : Operation 587 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 587 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 2)> <Delay = 0.00>
ST_3 : Operation 588 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_18" [wb.cpp:19]   --->   Operation 588 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 1)> <Delay = 1.58>
ST_3 : Operation 589 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 589 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 1)> <Delay = 0.00>
ST_3 : Operation 590 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file_17" [wb.cpp:19]   --->   Operation 590 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 0)> <Delay = 1.58>
ST_3 : Operation 591 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 591 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 0)> <Delay = 0.00>
ST_3 : Operation 592 [1/1] (1.58ns)   --->   "%store_ln19 = store i32 %reg_file_35, i32 %reg_file" [wb.cpp:19]   --->   Operation 592 'store' 'store_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 31)> <Delay = 1.58>
ST_3 : Operation 593 [1/1] (0.00ns)   --->   "%br_ln19 = br void %_Z2wb13from_m_to_w_sPi.exit" [wb.cpp:19]   --->   Operation 593 'br' 'br_ln19' <Predicate = (!or_ln17 & w_from_m_rd_V_load_1 == 31)> <Delay = 0.00>
ST_3 : Operation 594 [1/1] (0.00ns)   --->   "%nbi_load = load i32 %nbi" [rv32i_pp_ip.cpp:23]   --->   Operation 594 'load' 'nbi_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 595 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i1 %xor_ln947_1" [rv32i_pp_ip.cpp:23]   --->   Operation 595 'zext' 'zext_ln23' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 596 [1/1] (2.55ns)   --->   "%nbi_1 = add i32 %zext_ln23, i32 %nbi_load" [rv32i_pp_ip.cpp:23]   --->   Operation 596 'add' 'nbi_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 597 [1/1] (0.00ns)   --->   "%br_ln17 = br i1 %m_to_w_cancel_V_1, void %lor.lhs.false.i, void %do.cond.backedge" [rv32i_pp_ip.cpp:17]   --->   Operation 597 'br' 'br_ln17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 598 [1/1] (0.00ns)   --->   "%phi_ln947_load = load i1 %phi_ln947" [rv32i_pp_ip.cpp:17]   --->   Operation 598 'load' 'phi_ln947_load' <Predicate = (!m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 599 [1/1] (2.47ns)   --->   "%icmp_ln17 = icmp_ne  i32 %reg_file_35, i32 0" [rv32i_pp_ip.cpp:17]   --->   Operation 599 'icmp' 'icmp_ln17' <Predicate = (!m_to_w_cancel_V_1)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 600 [1/1] (0.97ns)   --->   "%is_running_V = or i1 %phi_ln947_load, i1 %icmp_ln17" [rv32i_pp_ip.cpp:17]   --->   Operation 600 'or' 'is_running_V' <Predicate = (!m_to_w_cancel_V_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 601 [1/1] (0.00ns)   --->   "%br_ln73 = br i1 %is_running_V, void %do.end.exitStub, void %do.cond.backedge" [rv32i_pp_ip.cpp:73]   --->   Operation 601 'br' 'br_ln73' <Predicate = (!m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 602 [1/1] (0.00ns)   --->   "%nbc_load = load i32 %nbc" [rv32i_pp_ip.cpp:49]   --->   Operation 602 'load' 'nbc_load' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 603 [1/1] (0.00ns)   --->   "%e_to_m_d_i_rd_V_load_1 = load i5 %e_to_m_d_i_rd_V" [rv32i_pp_ip.cpp:49]   --->   Operation 603 'load' 'e_to_m_d_i_rd_V_load_1' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 604 [1/1] (2.55ns)   --->   "%add_ln49 = add i32 %nbc_load, i32 1" [rv32i_pp_ip.cpp:49]   --->   Operation 604 'add' 'add_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 605 [1/1] (0.97ns)   --->   "%xor_ln49 = xor i1 %m_to_w_is_ret_V_load, i1 1" [rv32i_pp_ip.cpp:49]   --->   Operation 605 'xor' 'xor_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 606 [1/1] (2.07ns)   --->   "%add_ln232 = add i16 %pc_V, i16 1"   --->   Operation 606 'add' 'add_ln232' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 607 [1/1] (0.80ns)   --->   "%select_ln49 = select i1 %e_to_f_set_pc_V, i16 %e_to_f_target_pc_1, i16 %add_ln232" [rv32i_pp_ip.cpp:49]   --->   Operation 607 'select' 'select_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 608 [1/1] (1.58ns)   --->   "%store_ln49 = store i16 %select_ln49, i16 %f_to_e_pc_V" [rv32i_pp_ip.cpp:49]   --->   Operation 608 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 1.58>
ST_3 : Operation 609 [1/1] (0.00ns)   --->   "%store_ln49 = store i5 %e_to_m_d_i_rd_V_load_1, i5 %m_to_w_rd_V" [rv32i_pp_ip.cpp:49]   --->   Operation 609 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 610 [1/1] (0.00ns)   --->   "%store_ln49 = store i3 %f_to_e_d_i_func3_V_1, i3 %e_to_m_d_i_func3_V" [rv32i_pp_ip.cpp:49]   --->   Operation 610 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 611 [1/1] (0.00ns)   --->   "%store_ln49 = store i3 %f_to_e_d_i_type_V, i3 %e_to_m_d_i_type_V" [rv32i_pp_ip.cpp:49]   --->   Operation 611 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 612 [1/1] (0.00ns)   --->   "%store_ln49 = store i20 %f_to_e_d_i_imm_1, i20 %e_to_m_d_i_imm_V" [rv32i_pp_ip.cpp:49]   --->   Operation 612 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 613 [1/1] (0.00ns)   --->   "%store_ln49 = store i32 %e_to_m_result, i32 %m_from_e_result" [rv32i_pp_ip.cpp:49]   --->   Operation 613 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 614 [1/1] (0.00ns)   --->   "%store_ln49 = store i32 %e_to_m_rv2, i32 %rv2_1" [rv32i_pp_ip.cpp:49]   --->   Operation 614 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 615 [1/1] (0.00ns)   --->   "%store_ln49 = store i3 %f_to_e_d_i_func3_V, i3 %msize_V" [rv32i_pp_ip.cpp:49]   --->   Operation 615 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 616 [1/1] (0.00ns)   --->   "%store_ln49 = store i5 %f_to_e_d_i_rs2_V, i5 %e_to_m_d_i_rs2_V" [rv32i_pp_ip.cpp:49]   --->   Operation 616 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 617 [1/1] (0.00ns)   --->   "%store_ln49 = store i5 %f_to_e_d_i_rs1_V, i5 %e_to_m_d_i_rs1_V" [rv32i_pp_ip.cpp:49]   --->   Operation 617 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 618 [1/1] (0.00ns)   --->   "%store_ln49 = store i5 %f_to_e_d_i_rd_V, i5 %e_to_m_d_i_rd_V" [rv32i_pp_ip.cpp:49]   --->   Operation 618 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 619 [1/1] (0.00ns)   --->   "%store_ln49 = store i16 %pc_V, i16 %pc_V_1" [rv32i_pp_ip.cpp:49]   --->   Operation 619 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 620 [1/1] (0.00ns)   --->   "%store_ln49 = store i5 %m_from_e_d_i_rd_V, i5 %w_from_m_rd_V" [rv32i_pp_ip.cpp:49]   --->   Operation 620 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 621 [1/1] (1.58ns)   --->   "%store_ln49 = store i32 %nbi_1, i32 %nbi" [rv32i_pp_ip.cpp:49]   --->   Operation 621 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 1.58>
ST_3 : Operation 622 [1/1] (1.58ns)   --->   "%store_ln49 = store i32 %add_ln49, i32 %nbc" [rv32i_pp_ip.cpp:49]   --->   Operation 622 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 1.58>
ST_3 : Operation 623 [1/1] (0.00ns)   --->   "%store_ln49 = store i1 %xor_ln49, i1 %phi_ln947" [rv32i_pp_ip.cpp:49]   --->   Operation 623 'store' 'store_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 624 [1/1] (0.00ns)   --->   "%br_ln49 = br void %do.cond" [rv32i_pp_ip.cpp:49]   --->   Operation 624 'br' 'br_ln49' <Predicate = (is_running_V) | (m_to_w_cancel_V_1)> <Delay = 0.00>
ST_3 : Operation 625 [1/1] (0.00ns)   --->   "%nbc_load_1 = load i32 %nbc"   --->   Operation 625 'load' 'nbc_load_1' <Predicate = (!m_to_w_cancel_V_1 & !is_running_V)> <Delay = 0.00>
ST_3 : Operation 626 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %nbc_out, i32 %nbc_load_1"   --->   Operation 626 'write' 'write_ln0' <Predicate = (!m_to_w_cancel_V_1 & !is_running_V)> <Delay = 0.00>
ST_3 : Operation 627 [1/1] (0.00ns)   --->   "%write_ln23 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %nbi_1_out, i32 %nbi_1" [rv32i_pp_ip.cpp:23]   --->   Operation 627 'write' 'write_ln23' <Predicate = (!m_to_w_cancel_V_1 & !is_running_V)> <Delay = 0.00>
ST_3 : Operation 628 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 628 'ret' 'ret_ln0' <Predicate = (!m_to_w_cancel_V_1 & !is_running_V)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 7.69ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('e_to_m.cancel.V') with incoming values : ('e_to_f.set_pc.V', execute.cpp:102->rv32i_pp_ip.cpp:63) [178]  (1.59 ns)
	'phi' operation ('e_to_m.cancel.V') with incoming values : ('e_to_f.set_pc.V', execute.cpp:102->rv32i_pp_ip.cpp:63) [178]  (0 ns)
	'or' operation ('or_ln30', execute.cpp:30) [348]  (0.978 ns)
	'or' operation ('or_ln36', execute.cpp:36) [361]  (0 ns)
	'xor' operation ('xor_ln35', execute.cpp:35) [363]  (0 ns)
	'and' operation ('m_bp_2.V', execute.cpp:35) [364]  (0.978 ns)
	'or' operation ('bypass_rs2.V', execute.cpp:39) [369]  (0.978 ns)
	'select' operation ('rv2', execute.cpp:41) [374]  (0.698 ns)
	'icmp' operation ('icmp_ln23', compute.cpp:23) [380]  (2.47 ns)

 <State 2>: 7.18ns
The critical path consists of the following:
	'load' operation ('instruction', fetch.cpp:8) on array 'code_ram' [203]  (3.25 ns)
	'icmp' operation ('empty') [231]  (1.36 ns)
	'or' operation ('empty_25') [233]  (0.978 ns)
	multiplexor before 'phi' operation ('f_to_e.d_i.has_no_dest.V') with incoming values : ('icmp_ln1065') [239]  (1.59 ns)
	'phi' operation ('f_to_e.d_i.has_no_dest.V') with incoming values : ('icmp_ln1065') [239]  (0 ns)

 <State 3>: 6.99ns
The critical path consists of the following:
	'load' operation ('pc_V_1_load') on local variable 'pc.V' [444]  (0 ns)
	'shl' operation ('r.V') [448]  (0 ns)
	'add' operation ('result', compute.cpp:106) [453]  (2.55 ns)
	'select' operation ('select_ln103', compute.cpp:103) [454]  (0.698 ns)
	multiplexor before 'phi' operation ('result') with incoming values : ('select_ln103', compute.cpp:103) ('result', compute.cpp:96) ('select_ln87', compute.cpp:87) ('zext_ln86', compute.cpp:86) ('zext_ln109', compute.cpp:109) [472]  (2.07 ns)
	'phi' operation ('result') with incoming values : ('select_ln103', compute.cpp:103) ('result', compute.cpp:96) ('select_ln87', compute.cpp:87) ('zext_ln86', compute.cpp:86) ('zext_ln109', compute.cpp:109) [472]  (0 ns)
	'select' operation ('result', execute.cpp:85->rv32i_pp_ip.cpp:63) [477]  (0.978 ns)
	'select' operation ('e_to_m.result', execute.cpp:109->rv32i_pp_ip.cpp:63) [542]  (0.698 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
