-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rv32i_pp_ip_rv32i_pp_ip_Pipeline_VITIS_LOOP_58_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    reg_file_16_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_17_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_18_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_19_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_20_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_21_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_22_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_23_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_24_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_25_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_26_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_27_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_28_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_29_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_30_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_15_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_14_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_13_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_12_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_11_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_10_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_31_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    e_to_f_target_pc_V : IN STD_LOGIC_VECTOR (15 downto 0);
    code_ram_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    code_ram_ce0 : OUT STD_LOGIC;
    code_ram_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    data_ram_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_ram_ce0 : OUT STD_LOGIC;
    data_ram_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    data_ram_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_ram_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    nbc_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    nbc_out_ap_vld : OUT STD_LOGIC;
    nbi_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    nbi_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of rv32i_pp_ip_rv32i_pp_ip_Pipeline_VITIS_LOOP_58_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_8067 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000001100111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal m_to_w_cancel_V_1_reg_815 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_running_V_fu_3028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal m_from_e_cancel_V_reg_804 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_from_e_cancel_V_reg_827 : STD_LOGIC_VECTOR (0 downto 0);
    signal f7_6_reg_840 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_from_m_has_no_dest_V_load_reg_3559 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal m_from_e_d_i_is_store_V_load_load_fu_1286_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_from_e_d_i_is_store_V_load_reg_3564 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_file_35_reg_3568 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_to_e_d_i_func3_V_load_fu_1292_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_to_e_d_i_func3_V_reg_3605 : STD_LOGIC_VECTOR (2 downto 0);
    signal m_from_e_d_i_rd_V_reg_3610 : STD_LOGIC_VECTOR (4 downto 0);
    signal pc_V_reg_3615 : STD_LOGIC_VECTOR (15 downto 0);
    signal rv1_fu_1697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv1_reg_3626 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln59_fu_1707_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln59_reg_3645 : STD_LOGIC_VECTOR (17 downto 0);
    signal e_to_m_rv2_fu_1719_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_to_m_rv2_reg_3650 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_3660 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_reg_3665 : STD_LOGIC_VECTOR (0 downto 0);
    signal msize_V_load_reg_3670 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_from_e_result_load_reg_3679 : STD_LOGIC_VECTOR (31 downto 0);
    signal a01_fu_1735_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal a01_reg_3684 : STD_LOGIC_VECTOR (1 downto 0);
    signal a1_fu_1739_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal a1_reg_3691 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_ram_addr_reg_3696 : STD_LOGIC_VECTOR (15 downto 0);
    signal rv2_1_load_reg_3701 : STD_LOGIC_VECTOR (31 downto 0);
    signal msize_V_1_fu_1765_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal msize_V_1_reg_3706 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln79_fu_1793_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln79_reg_3710 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln79_2_fu_1811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln79_2_reg_3715 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln76_fu_1825_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln76_reg_3720 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln76_2_fu_1843_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln76_2_reg_3725 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_to_m_d_i_is_load_V_load_reg_3730 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal e_to_m_d_i_is_jalr_V_load_reg_3735 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_jal_V_load_reg_3740 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_ret_V_load_reg_3745 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_lui_V_load_reg_3750 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_op_imm_V_load_reg_3755 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_to_w_is_ret_V_load_reg_3760 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_from_e_d_i_is_load_V_load_reg_3765 : STD_LOGIC_VECTOR (0 downto 0);
    signal instruction_reg_3775 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_to_e_d_i_rd_V_fu_1886_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_rd_V_reg_3789 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_func3_V_1_reg_3795 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_to_e_d_i_rs1_V_fu_1906_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_rs1_V_reg_3800 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_rs2_V_fu_1916_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_d_i_rs2_V_reg_3806 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_reg_3812 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_25_fu_2045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal opch_fu_2058_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal opcl_V_fu_2068_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal e_to_m_d_i_is_r_type_V_load_reg_3829 : STD_LOGIC_VECTOR (0 downto 0);
    signal taken_branch_V_fu_2108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal taken_branch_V_reg_3834 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln82_fu_2114_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln82_reg_3839 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_11_fu_2141_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_10_fu_2160_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_10_reg_3849 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_7_fu_2168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln55_fu_2178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln53_fu_2187_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_4_fu_2195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_4_reg_3869 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_fu_2216_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_2224_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_1082_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal e_to_m_d_i_type_V_load_1_reg_3884 : STD_LOGIC_VECTOR (2 downto 0);
    signal npc_fu_2232_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal npc_reg_3888 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_pc_V_4_fu_2248_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_pc_V_4_reg_3894 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_pc_V_3_fu_2269_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_pc_V_2_fu_2277_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal is_rs1_reg_V_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_rs1_reg_V_reg_3909 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_rs2_reg_V_fu_2381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_rs2_reg_V_reg_3913 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln947_fu_2387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln947_reg_3919 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln98_fu_2399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln98_reg_3924 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_rd_V_load_reg_3928 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_7_reg_3934 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_reg_3939 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_fu_2484_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_reg_3944 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fu_2492_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal h_reg_3950 : STD_LOGIC_VECTOR (15 downto 0);
    signal e_to_f_set_pc_V_fu_2744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_phi_mux_m_to_w_cancel_V_1_phi_fu_818_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_f_to_e_d_i_has_no_dest_V_phi_fu_854_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_fu_2051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_f_to_e_d_i_has_no_dest_V_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_cond_V_phi_fu_865_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_fu_2102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_4_fu_2086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_2_fu_2092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_1_fu_2097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_6_fu_2629_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_f_to_e_d_i_imm_1_reg_945 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln75_2_fu_2561_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln75_1_fu_2582_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln75_fu_2596_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_result_26_phi_fu_966_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_result_26_reg_963 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_c_result_phi_fu_987_p12 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln87_fu_2680_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_c_result_reg_984 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln109_fu_2693_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1093_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln86_fu_2688_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln103_fu_2672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_next_pc_V_phi_fu_1005_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_next_pc_V_reg_1002 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_e_to_f_target_pc_1_phi_fu_1018_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_e_to_f_target_pc_1_reg_1015 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln99_fu_2723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_6_fu_2714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln101_fu_2710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_empty_26_phi_fu_1037_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_26_reg_1034 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln587_fu_1301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_1_fu_1757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_from_m_has_no_dest_V_fu_310 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln947_fu_314 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln49_fu_3043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_load_V_fu_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_load_V_fu_1935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_store_V_fu_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_store_V_fu_1941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_branch_V_fu_326 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_branch_V_fu_1947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_jalr_V_fu_330 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_jalr_V_fu_1953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_jal_V_fu_334 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_jal_V_fu_1959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_ret_V_fu_338 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_ret_V_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_lui_V_fu_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_lui_V_fu_1971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_op_imm_V_fu_346 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_op_imm_V_fu_1977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_has_no_dest_V_fu_350 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_to_m_d_i_is_r_type_V_fu_354 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_to_e_d_i_is_r_type_V_fu_2499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_to_w_has_no_dest_V_fu_358 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_to_w_is_ret_V_fu_362 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_from_e_d_i_is_store_V_fu_366 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_from_e_d_i_is_load_V_fu_370 : STD_LOGIC_VECTOR (0 downto 0);
    signal nbc_fu_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln49_fu_3037_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal nbi_fu_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal nbi_1_fu_3013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_from_m_rd_V_fu_382 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_fu_1054_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pc_V_1_fu_386 : STD_LOGIC_VECTOR (15 downto 0);
    signal e_to_m_d_i_rd_V_fu_390 : STD_LOGIC_VECTOR (4 downto 0);
    signal e_to_m_d_i_rs1_V_fu_394 : STD_LOGIC_VECTOR (4 downto 0);
    signal e_to_m_d_i_rs2_V_fu_398 : STD_LOGIC_VECTOR (4 downto 0);
    signal msize_V_fu_402 : STD_LOGIC_VECTOR (2 downto 0);
    signal rv2_1_fu_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_from_e_result_fu_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_to_m_result_fu_2753_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_to_m_d_i_imm_V_fu_414 : STD_LOGIC_VECTOR (19 downto 0);
    signal e_to_m_d_i_type_V_fu_418 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_file_fu_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_1_fu_426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_1_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_2_fu_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_3_fu_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_3_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_4_fu_438 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_4_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_5_fu_442 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_5_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_6_fu_446 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_6_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_7_fu_450 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_7_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_8_fu_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_8_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_9_fu_458 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_9_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_10_fu_462 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_10_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_11_fu_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_11_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_12_fu_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_12_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_13_fu_474 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_13_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_14_fu_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_14_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_15_fu_482 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_15_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_16_fu_486 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_16_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_17_fu_490 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_17_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_18_fu_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_18_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_19_fu_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_19_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_20_fu_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_20_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_21_fu_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_21_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_22_fu_510 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_22_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_23_fu_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_23_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_24_fu_518 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_24_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_25_fu_522 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_25_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_26_fu_526 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_26_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_27_fu_530 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_27_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_28_fu_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_28_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_29_fu_538 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_29_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_30_fu_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_30_load : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_31_fu_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_27_fu_2859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_32_fu_550 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_reg_file_32_load : STD_LOGIC_VECTOR (31 downto 0);
    signal e_to_m_d_i_func3_V_fu_554 : STD_LOGIC_VECTOR (2 downto 0);
    signal m_to_w_rd_V_fu_558 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_to_e_pc_V_fu_562 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln49_fu_3053_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_pc_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1060_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1060_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1066_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1066_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1071_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1071_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1088_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1088_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln30_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_fu_1569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln31_fu_1575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_2_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln30_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln33_fu_1599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_fu_1605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln32_fu_1611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_bp_1_V_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_bp_1_V_fu_1617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_1_fu_1629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln36_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_4_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln35_fu_1647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln38_fu_1659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_5_fu_1665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_fu_1671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_bp_2_V_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_bp_2_V_fu_1677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bypass_rs1_V_fu_1623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln8_fu_1689_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r1_fu_1423_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal bypass_rs2_V_fu_1683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln8_1_fu_1711_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r2_fu_1493_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_4_fu_1747_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rv2_01_fu_1773_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln_fu_1781_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln79_1_fu_1789_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln79_1_fu_1799_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln79_fu_1777_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln79_2_fu_1807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_0_fu_1769_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln76_1_fu_1821_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln76_1_fu_1831_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln76_fu_1817_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln76_2_fu_1839_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_to_e_d_i_opcode_V_fu_1876_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_24_fu_2039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_2033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln82_fu_2114_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln81_fu_2118_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal rs_fu_2122_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_V_fu_2129_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shift_V_1_fu_2133_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln60_fu_2146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_8_fu_2150_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_9_fu_2155_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_6_fu_2173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_5_fu_2182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln51_fu_2191_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln46_fu_2200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_2206_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_fu_2211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln3_fu_2238_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln81_fu_2118_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln127_fu_2254_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal i_target_pc_fu_2259_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1069_3_fu_2291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_2_fu_2285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln92_fu_2303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln92_1_fu_2309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_4_fu_2315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_5_fu_2327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_6_fu_2345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1069_fu_2297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_fu_2357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_fu_2333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_7_fu_2351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_2_fu_2369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_1_fu_2339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_3_fu_2375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_1_fu_2363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln98_fu_2393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_fu_2453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b2_fu_2423_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b3_fu_2433_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln31_1_fu_2466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b1_fu_2409_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_4_fu_2458_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln31_2_fu_2479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b0_fu_2405_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_5_fu_2471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_8_fu_2443_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_fu_2419_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_imm_inst_31_V_fu_2505_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_imm_inst_7_V_fu_2528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_2540_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal d_imm_inst_11_8_V_fu_2519_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_4_fu_2549_p5 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_2566_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_3_fu_2575_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_fu_2587_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_2611_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_imm_inst_20_V_fu_2512_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_2620_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_fu_2650_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal imm12_fu_2642_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln106_fu_2656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_15_fu_2666_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal npc4_fu_2660_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln85_fu_2698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln99_fu_2718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln102_2_fu_2733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln102_1_fu_2729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln102_fu_2738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln110_fu_2749_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_16_fu_2702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln44_fu_2769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_fu_2774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_1_fu_2786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_1_fu_2791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln17_fu_2763_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_20_fu_2779_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_21_fu_2796_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln44_2_fu_2808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_2_fu_2813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln11_fu_2804_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln44_3_fu_2825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_3_fu_2830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln42_fu_2766_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_22_fu_2818_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_23_fu_2835_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln44_4_fu_2849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln44_4_fu_2854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln38_fu_2760_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_24_fu_2843_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln947_1_fu_2872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln23_fu_3009_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln17_fu_3023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln232_fu_3048_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1894 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component rv32i_pp_ip_mux_325_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rv32i_pp_ip_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_325_32_1_1_U33 : component rv32i_pp_ip_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => ap_sig_allocacmp_reg_file_17_load,
        din1 => ap_sig_allocacmp_reg_file_18_load,
        din2 => ap_sig_allocacmp_reg_file_19_load,
        din3 => ap_sig_allocacmp_reg_file_20_load,
        din4 => ap_sig_allocacmp_reg_file_21_load,
        din5 => ap_sig_allocacmp_reg_file_22_load,
        din6 => ap_sig_allocacmp_reg_file_23_load,
        din7 => ap_sig_allocacmp_reg_file_24_load,
        din8 => ap_sig_allocacmp_reg_file_25_load,
        din9 => ap_sig_allocacmp_reg_file_26_load,
        din10 => ap_sig_allocacmp_reg_file_27_load,
        din11 => ap_sig_allocacmp_reg_file_28_load,
        din12 => ap_sig_allocacmp_reg_file_29_load,
        din13 => ap_sig_allocacmp_reg_file_30_load,
        din14 => ap_sig_allocacmp_reg_file_32_load,
        din15 => ap_sig_allocacmp_reg_file_16_load,
        din16 => ap_sig_allocacmp_reg_file_15_load,
        din17 => ap_sig_allocacmp_reg_file_14_load,
        din18 => ap_sig_allocacmp_reg_file_13_load,
        din19 => ap_sig_allocacmp_reg_file_12_load,
        din20 => ap_sig_allocacmp_reg_file_11_load,
        din21 => ap_sig_allocacmp_reg_file_10_load,
        din22 => ap_sig_allocacmp_reg_file_9_load,
        din23 => ap_sig_allocacmp_reg_file_8_load,
        din24 => ap_sig_allocacmp_reg_file_7_load,
        din25 => ap_sig_allocacmp_reg_file_6_load,
        din26 => ap_sig_allocacmp_reg_file_5_load,
        din27 => ap_sig_allocacmp_reg_file_4_load,
        din28 => ap_sig_allocacmp_reg_file_3_load,
        din29 => ap_sig_allocacmp_reg_file_2_load,
        din30 => ap_sig_allocacmp_reg_file_1_load,
        din31 => ap_sig_allocacmp_reg_file_load,
        din32 => e_to_m_d_i_rs1_V_fu_394,
        dout => r1_fu_1423_p34);

    mux_325_32_1_1_U34 : component rv32i_pp_ip_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => ap_sig_allocacmp_reg_file_17_load,
        din1 => ap_sig_allocacmp_reg_file_18_load,
        din2 => ap_sig_allocacmp_reg_file_19_load,
        din3 => ap_sig_allocacmp_reg_file_20_load,
        din4 => ap_sig_allocacmp_reg_file_21_load,
        din5 => ap_sig_allocacmp_reg_file_22_load,
        din6 => ap_sig_allocacmp_reg_file_23_load,
        din7 => ap_sig_allocacmp_reg_file_24_load,
        din8 => ap_sig_allocacmp_reg_file_25_load,
        din9 => ap_sig_allocacmp_reg_file_26_load,
        din10 => ap_sig_allocacmp_reg_file_27_load,
        din11 => ap_sig_allocacmp_reg_file_28_load,
        din12 => ap_sig_allocacmp_reg_file_29_load,
        din13 => ap_sig_allocacmp_reg_file_30_load,
        din14 => ap_sig_allocacmp_reg_file_32_load,
        din15 => ap_sig_allocacmp_reg_file_16_load,
        din16 => ap_sig_allocacmp_reg_file_15_load,
        din17 => ap_sig_allocacmp_reg_file_14_load,
        din18 => ap_sig_allocacmp_reg_file_13_load,
        din19 => ap_sig_allocacmp_reg_file_12_load,
        din20 => ap_sig_allocacmp_reg_file_11_load,
        din21 => ap_sig_allocacmp_reg_file_10_load,
        din22 => ap_sig_allocacmp_reg_file_9_load,
        din23 => ap_sig_allocacmp_reg_file_8_load,
        din24 => ap_sig_allocacmp_reg_file_7_load,
        din25 => ap_sig_allocacmp_reg_file_6_load,
        din26 => ap_sig_allocacmp_reg_file_5_load,
        din27 => ap_sig_allocacmp_reg_file_4_load,
        din28 => ap_sig_allocacmp_reg_file_3_load,
        din29 => ap_sig_allocacmp_reg_file_2_load,
        din30 => ap_sig_allocacmp_reg_file_1_load,
        din31 => ap_sig_allocacmp_reg_file_load,
        din32 => e_to_m_d_i_rs2_V_fu_398,
        dout => r2_fu_1493_p34);

    flow_control_loop_pipe_sequential_init_U : component rv32i_pp_ip_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((opcl_V_fu_2068_p4 = ap_const_lv3_0) and (opch_fu_2058_p4 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 <= ap_const_lv3_4;
            elsif (((opcl_V_fu_2068_p4 = ap_const_lv3_3) and (opch_fu_2058_p4 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 <= ap_const_lv3_6;
            elsif (((opcl_V_fu_2068_p4 = ap_const_lv3_0) and (opch_fu_2058_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 <= ap_const_lv3_3;
            elsif (((opcl_V_fu_2068_p4 = ap_const_lv3_4) and (opch_fu_2058_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 <= ap_const_lv3_1;
            elsif ((((opcl_V_fu_2068_p4 = ap_const_lv3_1) and (opch_fu_2058_p4 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcl_V_fu_2068_p4 = ap_const_lv3_4) and (opch_fu_2058_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcl_V_fu_2068_p4 = ap_const_lv3_0) and (opch_fu_2058_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 <= ap_const_lv3_2;
            elsif ((((opcl_V_fu_2068_p4 = ap_const_lv3_5) and (opch_fu_2058_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcl_V_fu_2068_p4 = ap_const_lv3_5) and (opch_fu_2058_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 <= ap_const_lv3_5;
            elsif ((((opcl_V_fu_2068_p4 = ap_const_lv3_2) and (opch_fu_2058_p4 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcl_V_fu_2068_p4 = ap_const_lv3_6) and (opch_fu_2058_p4 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opch_fu_2058_p4 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not((opcl_V_fu_2068_p4 = ap_const_lv3_4)) and not((opcl_V_fu_2068_p4 = ap_const_lv3_5)) and not((opcl_V_fu_2068_p4 = ap_const_lv3_0)) and (opch_fu_2058_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not((opcl_V_fu_2068_p4 = ap_const_lv3_4)) and not((opcl_V_fu_2068_p4 = ap_const_lv3_5)) and not((opcl_V_fu_2068_p4 = ap_const_lv3_0)) and (opch_fu_2058_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcl_V_fu_2068_p4 = ap_const_lv3_4) and (opch_fu_2058_p4 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcl_V_fu_2068_p4 = ap_const_lv3_5) and (opch_fu_2058_p4 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcl_V_fu_2068_p4 = ap_const_lv3_7) and (opch_fu_2058_p4 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 <= ap_const_lv3_7;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_next_pc_V_reg_1002_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((grp_load_fu_1082_p1 = ap_const_lv3_2)) then 
                    ap_phi_reg_pp0_iter0_next_pc_V_reg_1002 <= next_pc_V_2_fu_2277_p3;
                elsif ((grp_load_fu_1082_p1 = ap_const_lv3_4)) then 
                    ap_phi_reg_pp0_iter0_next_pc_V_reg_1002 <= next_pc_V_3_fu_2269_p3;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_result_26_reg_963_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_0)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_963 <= result_3_fu_2216_p3;
                elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_2)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_963 <= zext_ln53_fu_2187_p1;
                elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_3)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_963 <= zext_ln55_fu_2178_p1;
                elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_4)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_963 <= result_7_fu_2168_p2;
                elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_6)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_963 <= result_11_fu_2141_p2;
                elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_7)) then 
                    ap_phi_reg_pp0_iter0_result_26_reg_963 <= result_fu_2224_p2;
                end if;
            end if; 
        end if;
    end process;

    e_from_e_cancel_V_reg_827_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((is_running_V_fu_3028_p2 = ap_const_lv1_1) or (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_1)))) then 
                e_from_e_cancel_V_reg_827 <= e_to_f_set_pc_V_fu_2744_p2;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                e_from_e_cancel_V_reg_827 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    f7_6_reg_840_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((is_running_V_fu_3028_p2 = ap_const_lv1_1) or (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_1)))) then 
                f7_6_reg_840 <= tmp_3_reg_3812;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                f7_6_reg_840 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    f_to_e_pc_V_fu_562_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                f_to_e_pc_V_fu_562 <= e_to_f_target_pc_V;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((is_running_V_fu_3028_p2 = ap_const_lv1_1) or (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_1)))) then 
                f_to_e_pc_V_fu_562 <= select_ln49_fu_3053_p3;
            end if; 
        end if;
    end process;

    m_from_e_cancel_V_reg_804_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((is_running_V_fu_3028_p2 = ap_const_lv1_1) or (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_1)))) then 
                m_from_e_cancel_V_reg_804 <= e_from_e_cancel_V_reg_827;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                m_from_e_cancel_V_reg_804 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    m_to_w_cancel_V_1_reg_815_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((is_running_V_fu_3028_p2 = ap_const_lv1_1) or (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_1)))) then 
                m_to_w_cancel_V_1_reg_815 <= m_from_e_cancel_V_reg_804;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                m_to_w_cancel_V_1_reg_815 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    nbc_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                nbc_fu_374 <= ap_const_lv32_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((is_running_V_fu_3028_p2 = ap_const_lv1_1) or (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_1)))) then 
                nbc_fu_374 <= add_ln49_fu_3037_p2;
            end if; 
        end if;
    end process;

    nbi_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                nbi_fu_378 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((is_running_V_fu_3028_p2 = ap_const_lv1_1) or (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_1)))) then 
                nbi_fu_378 <= nbi_1_fu_3013_p2;
            end if; 
        end if;
    end process;

    reg_file_10_fu_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_10_fu_462 <= reg_file_9_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_15) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_10_fu_462 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_11_fu_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_11_fu_466 <= reg_file_10_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_14) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_11_fu_466 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_12_fu_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_12_fu_470 <= reg_file_11_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_13) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_12_fu_470 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_13_fu_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_13_fu_474 <= reg_file_12_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_12) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_13_fu_474 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_14_fu_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_14_fu_478 <= reg_file_13_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_11) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_14_fu_478 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_15_fu_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_15_fu_482 <= reg_file_14_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_10) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_15_fu_482 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_16_fu_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_16_fu_486 <= reg_file_15_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_F) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_16_fu_486 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_17_fu_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_17_fu_490 <= reg_file_30_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_17_fu_490 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_18_fu_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_18_fu_494 <= reg_file_29_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_18_fu_494 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_19_fu_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_19_fu_498 <= reg_file_28_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_19_fu_498 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_1_fu_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_1_fu_426 <= reg_file_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_1E) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_1_fu_426 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_20_fu_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_20_fu_502 <= reg_file_27_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_20_fu_502 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_21_fu_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_21_fu_506 <= reg_file_26_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_4) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_21_fu_506 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_22_fu_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_22_fu_510 <= reg_file_25_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_5) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_22_fu_510 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_23_fu_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_23_fu_514 <= reg_file_24_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_6) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_23_fu_514 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_24_fu_518_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_24_fu_518 <= reg_file_23_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_7) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_24_fu_518 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_25_fu_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_25_fu_522 <= reg_file_22_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_8) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_25_fu_522 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_26_fu_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_26_fu_526 <= reg_file_21_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_9) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_26_fu_526 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_27_fu_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_27_fu_530 <= reg_file_20_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_A) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_27_fu_530 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_28_fu_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_28_fu_534 <= reg_file_19_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_B) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_28_fu_534 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_29_fu_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_29_fu_538 <= reg_file_18_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_C) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_29_fu_538 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_2_fu_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_2_fu_430 <= reg_file_1_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_1D) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_2_fu_430 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_30_fu_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_30_fu_542 <= reg_file_17_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_D) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_30_fu_542 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_32_fu_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_32_fu_550 <= reg_file_16_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_E) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_32_fu_550 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_3_fu_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_3_fu_434 <= reg_file_2_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_1C) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_3_fu_434 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_4_fu_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_4_fu_438 <= reg_file_3_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_1B) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_4_fu_438 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_5_fu_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_5_fu_442 <= reg_file_4_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_1A) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_5_fu_442 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_6_fu_446_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_6_fu_446 <= reg_file_5_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_19) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_6_fu_446 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_7_fu_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_7_fu_450 <= reg_file_6_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_18) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_7_fu_450 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_8_fu_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_8_fu_454 <= reg_file_7_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_17) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_8_fu_454 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_9_fu_458_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_9_fu_458 <= reg_file_8_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_16) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_9_fu_458 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;

    reg_file_fu_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_fu_422 <= reg_file_31_reload;
            elsif (((grp_fu_1060_p2 = ap_const_lv1_0) and (grp_load_fu_1054_p1 = ap_const_lv5_1F) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                reg_file_fu_422 <= reg_file_35_reg_3568;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 = ap_const_lv1_0))) then
                a01_reg_3684 <= a01_fu_1735_p1;
                a1_reg_3691 <= m_from_e_result_fu_410(1 downto 1);
                data_ram_addr_reg_3696 <= zext_ln587_1_fu_1757_p1(16 - 1 downto 0);
                m_from_e_result_load_reg_3679 <= m_from_e_result_fu_410;
                msize_V_load_reg_3670 <= msize_V_fu_402;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                b_reg_3944 <= b_fu_2484_p3;
                h_reg_3950 <= h_fu_2492_p3;
                w_reg_3939 <= data_ram_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((is_running_V_fu_3028_p2 = ap_const_lv1_1) or (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_1)))) then
                e_to_m_d_i_func3_V_fu_554 <= f_to_e_d_i_func3_V_1_reg_3795;
                e_to_m_d_i_imm_V_fu_414 <= ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12;
                e_to_m_d_i_rd_V_fu_390 <= f_to_e_d_i_rd_V_reg_3789;
                e_to_m_d_i_rs1_V_fu_394 <= f_to_e_d_i_rs1_V_reg_3800;
                e_to_m_d_i_rs2_V_fu_398 <= f_to_e_d_i_rs2_V_reg_3806;
                e_to_m_d_i_type_V_fu_418 <= ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882;
                m_from_e_result_fu_410 <= e_to_m_result_fu_2753_p3;
                m_to_w_rd_V_fu_558 <= e_to_m_d_i_rd_V_fu_390;
                msize_V_fu_402 <= f_to_e_d_i_func3_V_reg_3605;
                pc_V_1_fu_386 <= pc_V_reg_3615;
                phi_ln947_fu_314 <= xor_ln49_fu_3043_p2;
                rv2_1_fu_406 <= e_to_m_rv2_reg_3650;
                w_from_m_rd_V_fu_382 <= m_from_e_d_i_rd_V_reg_3610;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                e_to_m_d_i_has_no_dest_V_fu_350 <= ap_phi_mux_f_to_e_d_i_has_no_dest_V_phi_fu_854_p4;
                e_to_m_d_i_is_branch_V_fu_326 <= f_to_e_d_i_is_branch_V_fu_1947_p2;
                e_to_m_d_i_is_jal_V_fu_334 <= f_to_e_d_i_is_jal_V_fu_1959_p2;
                e_to_m_d_i_is_jal_V_load_reg_3740 <= e_to_m_d_i_is_jal_V_fu_334;
                e_to_m_d_i_is_jalr_V_fu_330 <= f_to_e_d_i_is_jalr_V_fu_1953_p2;
                e_to_m_d_i_is_jalr_V_load_reg_3735 <= e_to_m_d_i_is_jalr_V_fu_330;
                e_to_m_d_i_is_load_V_fu_318 <= f_to_e_d_i_is_load_V_fu_1935_p2;
                e_to_m_d_i_is_load_V_load_reg_3730 <= e_to_m_d_i_is_load_V_fu_318;
                e_to_m_d_i_is_lui_V_fu_342 <= f_to_e_d_i_is_lui_V_fu_1971_p2;
                e_to_m_d_i_is_lui_V_load_reg_3750 <= e_to_m_d_i_is_lui_V_fu_342;
                e_to_m_d_i_is_op_imm_V_fu_346 <= f_to_e_d_i_is_op_imm_V_fu_1977_p2;
                e_to_m_d_i_is_op_imm_V_load_reg_3755 <= e_to_m_d_i_is_op_imm_V_fu_346;
                e_to_m_d_i_is_r_type_V_load_reg_3829 <= e_to_m_d_i_is_r_type_V_fu_354;
                e_to_m_d_i_is_ret_V_fu_338 <= f_to_e_d_i_is_ret_V_fu_1965_p2;
                e_to_m_d_i_is_ret_V_load_reg_3745 <= e_to_m_d_i_is_ret_V_fu_338;
                e_to_m_d_i_is_store_V_fu_322 <= f_to_e_d_i_is_store_V_fu_1941_p2;
                e_to_m_d_i_type_V_load_1_reg_3884 <= e_to_m_d_i_type_V_fu_418;
                f_to_e_d_i_func3_V_1_reg_3795 <= code_ram_q0(14 downto 12);
                f_to_e_d_i_rd_V_reg_3789 <= code_ram_q0(11 downto 7);
                f_to_e_d_i_rs1_V_reg_3800 <= code_ram_q0(19 downto 15);
                f_to_e_d_i_rs2_V_reg_3806 <= code_ram_q0(24 downto 20);
                instruction_reg_3775 <= code_ram_q0;
                is_rs1_reg_V_reg_3909 <= is_rs1_reg_V_fu_2321_p2;
                is_rs2_reg_V_reg_3913 <= is_rs2_reg_V_fu_2381_p2;
                m_from_e_d_i_is_load_V_fu_370 <= e_to_m_d_i_is_load_V_fu_318;
                m_from_e_d_i_is_load_V_load_reg_3765 <= m_from_e_d_i_is_load_V_fu_370;
                m_to_w_is_ret_V_fu_362 <= e_to_m_d_i_is_ret_V_fu_338;
                m_to_w_is_ret_V_load_reg_3760 <= m_to_w_is_ret_V_fu_362;
                next_pc_V_4_reg_3894 <= next_pc_V_4_fu_2248_p2;
                npc_reg_3888 <= npc_fu_2232_p2;
                or_ln98_reg_3924 <= or_ln98_fu_2399_p2;
                sext_ln82_reg_3839 <= sext_ln82_fu_2114_p1;
                taken_branch_V_reg_3834 <= taken_branch_V_fu_2108_p2;
                tmp_3_reg_3812 <= code_ram_q0(30 downto 30);
                xor_ln947_reg_3919 <= xor_ln947_fu_2387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                e_to_m_d_i_is_r_type_V_fu_354 <= f_to_e_d_i_is_r_type_V_fu_2499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln98_fu_2399_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                e_to_m_d_i_rd_V_load_reg_3928 <= e_to_m_d_i_rd_V_fu_390;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                e_to_m_rv2_reg_3650 <= e_to_m_rv2_fu_1719_p3;
                f_to_e_d_i_func3_V_reg_3605 <= e_to_m_d_i_func3_V_fu_554;
                m_from_e_d_i_is_store_V_fu_366 <= e_to_m_d_i_is_store_V_fu_322;
                m_from_e_d_i_is_store_V_load_reg_3564 <= m_from_e_d_i_is_store_V_fu_366;
                m_from_e_d_i_rd_V_reg_3610 <= m_to_w_rd_V_fu_558;
                m_to_w_has_no_dest_V_fu_358 <= e_to_m_d_i_has_no_dest_V_fu_350;
                pc_V_reg_3615 <= ap_sig_allocacmp_pc_V;
                reg_file_35_reg_3568 <= reg_file_31_fu_546;
                rv1_reg_3626 <= rv1_fu_1697_p3;
                trunc_ln59_reg_3645 <= trunc_ln59_fu_1707_p1;
                w_from_m_has_no_dest_V_fu_310 <= m_to_w_has_no_dest_V_fu_358;
                w_from_m_has_no_dest_V_load_reg_3559 <= w_from_m_has_no_dest_V_fu_310;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln98_fu_2399_p2 = ap_const_lv1_0) and (is_rs1_reg_V_fu_2321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln1065_7_reg_3934 <= grp_fu_1088_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (f_to_e_d_i_func3_V_load_fu_1292_p1 = ap_const_lv3_5))) then
                icmp_ln23_reg_3660 <= grp_fu_1066_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (f_to_e_d_i_func3_V_load_fu_1292_p1 = ap_const_lv3_7))) then
                icmp_ln29_reg_3665 <= grp_fu_1071_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 = ap_const_lv1_0) and (m_from_e_d_i_is_store_V_load_load_fu_1286_p1 = ap_const_lv1_1))) then
                msize_V_1_reg_3706 <= msize_V_1_fu_1765_p1;
                rv2_1_load_reg_3701 <= rv2_1_fu_406;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                reg_file_31_fu_546 <= result_27_fu_2859_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_5))) then
                result_10_reg_3849 <= result_10_fu_2160_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_1))) then
                result_4_reg_3869 <= result_4_fu_2195_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (msize_V_1_fu_1765_p1 = ap_const_lv2_0) and (ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 = ap_const_lv1_0) and (m_from_e_d_i_is_store_V_load_load_fu_1286_p1 = ap_const_lv1_1))) then
                shl_ln76_2_reg_3725 <= shl_ln76_2_fu_1843_p2;
                shl_ln76_reg_3720 <= shl_ln76_fu_1825_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (msize_V_1_fu_1765_p1 = ap_const_lv2_1) and (ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 = ap_const_lv1_0) and (m_from_e_d_i_is_store_V_load_load_fu_1286_p1 = ap_const_lv1_1))) then
                shl_ln79_2_reg_3715 <= shl_ln79_2_fu_1811_p2;
                shl_ln79_reg_3710 <= shl_ln79_fu_1793_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    a01_fu_1735_p1 <= m_from_e_result_fu_410(2 - 1 downto 0);
    a1_fu_1739_p3 <= m_from_e_result_fu_410(1 downto 1);
    add_ln127_fu_2254_p2 <= std_logic_vector(unsigned(trunc_ln59_reg_3645) + unsigned(trunc_ln81_fu_2118_p1));
    add_ln232_fu_3048_p2 <= std_logic_vector(unsigned(pc_V_reg_3615) + unsigned(ap_const_lv16_1));
    add_ln49_fu_3037_p2 <= std_logic_vector(unsigned(nbc_fu_374) + unsigned(ap_const_lv32_1));
    and_ln101_fu_2710_p2 <= (is_rs2_reg_V_reg_3913 and icmp_ln1065_7_reg_3934);
    and_ln44_1_fu_2791_p2 <= (m_from_e_d_i_is_load_V_load_reg_3765 and icmp_ln44_1_fu_2786_p2);
    and_ln44_2_fu_2813_p2 <= (m_from_e_d_i_is_load_V_load_reg_3765 and icmp_ln44_2_fu_2808_p2);
    and_ln44_3_fu_2830_p2 <= (m_from_e_d_i_is_load_V_load_reg_3765 and icmp_ln44_3_fu_2825_p2);
    and_ln44_4_fu_2854_p2 <= (m_from_e_d_i_is_load_V_load_reg_3765 and icmp_ln44_4_fu_2849_p2);
    and_ln44_fu_2774_p2 <= (m_from_e_d_i_is_load_V_load_reg_3765 and icmp_ln44_fu_2769_p2);
    and_ln46_fu_2200_p2 <= (f7_6_reg_840 and e_to_m_d_i_is_r_type_V_fu_354);
    and_ln94_1_fu_2363_p2 <= (icmp_ln1069_2_fu_2285_p2 and and_ln94_fu_2357_p2);
    and_ln94_2_fu_2369_p2 <= (xor_ln94_fu_2333_p2 and icmp_ln1069_7_fu_2351_p2);
    and_ln94_3_fu_2375_p2 <= (xor_ln94_1_fu_2339_p2 and and_ln94_2_fu_2369_p2);
    and_ln94_fu_2357_p2 <= (xor_ln1069_fu_2297_p2 and icmp_ln1069_6_fu_2345_p2);
    and_ln_fu_1781_p3 <= (a1_fu_1739_p3 & ap_const_lv1_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1894_assign_proc : process(m_from_e_cancel_V_reg_804, m_from_e_d_i_is_store_V_load_reg_3564, ap_CS_fsm_state2)
    begin
                ap_condition_1894 <= ((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (m_from_e_d_i_is_store_V_load_reg_3564 = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_CS_fsm_state3, m_to_w_cancel_V_1_reg_815, is_running_V_fu_3028_p2)
    begin
        if (((is_running_V_fu_3028_p2 = ap_const_lv1_0) and (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state3, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_phi_mux_c_result_phi_fu_987_p12_assign_proc : process(e_to_m_d_i_is_jalr_V_load_reg_3735, grp_load_fu_1082_p1, select_ln87_fu_2680_p3, ap_phi_reg_pp0_iter0_c_result_reg_984, zext_ln109_fu_2693_p1, grp_fu_1093_p2, zext_ln86_fu_2688_p1, select_ln103_fu_2672_p3)
    begin
        if ((not((grp_load_fu_1082_p1 = ap_const_lv3_5)) and not((grp_load_fu_1082_p1 = ap_const_lv3_3)) and not((grp_load_fu_1082_p1 = ap_const_lv3_6)) and not((grp_load_fu_1082_p1 = ap_const_lv3_2)))) then 
            ap_phi_mux_c_result_phi_fu_987_p12 <= ap_const_lv32_0;
        elsif ((grp_load_fu_1082_p1 = ap_const_lv3_5)) then 
            ap_phi_mux_c_result_phi_fu_987_p12 <= select_ln103_fu_2672_p3;
        elsif (((grp_load_fu_1082_p1 = ap_const_lv3_2) and (e_to_m_d_i_is_jalr_V_load_reg_3735 = ap_const_lv1_1))) then 
            ap_phi_mux_c_result_phi_fu_987_p12 <= zext_ln86_fu_2688_p1;
        elsif ((grp_load_fu_1082_p1 = ap_const_lv3_3)) then 
            ap_phi_mux_c_result_phi_fu_987_p12 <= grp_fu_1093_p2;
        elsif ((grp_load_fu_1082_p1 = ap_const_lv3_6)) then 
            ap_phi_mux_c_result_phi_fu_987_p12 <= zext_ln109_fu_2693_p1;
        elsif (((grp_load_fu_1082_p1 = ap_const_lv3_2) and (e_to_m_d_i_is_jalr_V_load_reg_3735 = ap_const_lv1_0))) then 
            ap_phi_mux_c_result_phi_fu_987_p12 <= select_ln87_fu_2680_p3;
        else 
            ap_phi_mux_c_result_phi_fu_987_p12 <= ap_phi_reg_pp0_iter0_c_result_reg_984;
        end if; 
    end process;


    ap_phi_mux_cond_V_phi_fu_865_p14_assign_proc : process(f_to_e_d_i_func3_V_reg_3605, grp_fu_1066_p2, grp_fu_1071_p2, result_V_fu_2102_p2, result_V_4_fu_2086_p2, result_V_2_fu_2092_p2, result_V_1_fu_2097_p2)
    begin
        if ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_0)) then 
            ap_phi_mux_cond_V_phi_fu_865_p14 <= result_V_1_fu_2097_p2;
        elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_1)) then 
            ap_phi_mux_cond_V_phi_fu_865_p14 <= result_V_2_fu_2092_p2;
        elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_4)) then 
            ap_phi_mux_cond_V_phi_fu_865_p14 <= grp_fu_1066_p2;
        elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_5)) then 
            ap_phi_mux_cond_V_phi_fu_865_p14 <= result_V_4_fu_2086_p2;
        elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_6)) then 
            ap_phi_mux_cond_V_phi_fu_865_p14 <= grp_fu_1071_p2;
        elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_7)) then 
            ap_phi_mux_cond_V_phi_fu_865_p14 <= result_V_fu_2102_p2;
        else 
            ap_phi_mux_cond_V_phi_fu_865_p14 <= ap_const_lv1_0;
        end if; 
    end process;


    ap_phi_mux_e_to_f_target_pc_1_phi_fu_1018_p10_assign_proc : process(npc_reg_3888, is_rs1_reg_V_reg_3909, or_ln98_reg_3924, grp_fu_1088_p2, ap_phi_mux_next_pc_V_phi_fu_1005_p8, ap_phi_reg_pp0_iter0_e_to_f_target_pc_1_reg_1015, or_ln99_fu_2723_p2, icmp_ln1065_6_fu_2714_p2, and_ln101_fu_2710_p2)
    begin
        if (((or_ln98_reg_3924 = ap_const_lv1_1) or ((icmp_ln1065_6_fu_2714_p2 = ap_const_lv1_0) and (or_ln99_fu_2723_p2 = ap_const_lv1_1) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln101_fu_2710_p2) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_0)) or ((or_ln99_fu_2723_p2 = ap_const_lv1_0) and (grp_fu_1088_p2 = ap_const_lv1_0) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_1)))) then 
            ap_phi_mux_e_to_f_target_pc_1_phi_fu_1018_p10 <= ap_phi_mux_next_pc_V_phi_fu_1005_p8;
        elsif (((((or_ln99_fu_2723_p2 = ap_const_lv1_0) and (grp_fu_1088_p2 = ap_const_lv1_1) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_1)) or ((icmp_ln1065_6_fu_2714_p2 = ap_const_lv1_1) and (or_ln99_fu_2723_p2 = ap_const_lv1_1) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_1))) or ((or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln101_fu_2710_p2)))) then 
            ap_phi_mux_e_to_f_target_pc_1_phi_fu_1018_p10 <= npc_reg_3888;
        else 
            ap_phi_mux_e_to_f_target_pc_1_phi_fu_1018_p10 <= ap_phi_reg_pp0_iter0_e_to_f_target_pc_1_reg_1015;
        end if; 
    end process;


    ap_phi_mux_empty_26_phi_fu_1037_p10_assign_proc : process(is_rs1_reg_V_reg_3909, or_ln98_reg_3924, grp_fu_1088_p2, or_ln99_fu_2723_p2, icmp_ln1065_6_fu_2714_p2, and_ln101_fu_2710_p2, ap_phi_reg_pp0_iter0_empty_26_reg_1034)
    begin
        if (((or_ln98_reg_3924 = ap_const_lv1_1) or ((icmp_ln1065_6_fu_2714_p2 = ap_const_lv1_0) and (or_ln99_fu_2723_p2 = ap_const_lv1_1) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln101_fu_2710_p2) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_0)) or ((or_ln99_fu_2723_p2 = ap_const_lv1_0) and (grp_fu_1088_p2 = ap_const_lv1_0) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_1)))) then 
            ap_phi_mux_empty_26_phi_fu_1037_p10 <= ap_const_lv1_0;
        elsif (((((or_ln99_fu_2723_p2 = ap_const_lv1_0) and (grp_fu_1088_p2 = ap_const_lv1_1) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_1)) or ((icmp_ln1065_6_fu_2714_p2 = ap_const_lv1_1) and (or_ln99_fu_2723_p2 = ap_const_lv1_1) and (or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_1))) or ((or_ln98_reg_3924 = ap_const_lv1_0) and (is_rs1_reg_V_reg_3909 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln101_fu_2710_p2)))) then 
            ap_phi_mux_empty_26_phi_fu_1037_p10 <= ap_const_lv1_1;
        else 
            ap_phi_mux_empty_26_phi_fu_1037_p10 <= ap_phi_reg_pp0_iter0_empty_26_reg_1034;
        end if; 
    end process;


    ap_phi_mux_f_to_e_d_i_has_no_dest_V_phi_fu_854_p4_assign_proc : process(empty_25_fu_2045_p2, icmp_ln1065_fu_2051_p2, ap_phi_reg_pp0_iter0_f_to_e_d_i_has_no_dest_V_reg_851)
    begin
        if ((empty_25_fu_2045_p2 = ap_const_lv1_1)) then 
            ap_phi_mux_f_to_e_d_i_has_no_dest_V_phi_fu_854_p4 <= ap_const_lv1_1;
        elsif ((empty_25_fu_2045_p2 = ap_const_lv1_0)) then 
            ap_phi_mux_f_to_e_d_i_has_no_dest_V_phi_fu_854_p4 <= icmp_ln1065_fu_2051_p2;
        else 
            ap_phi_mux_f_to_e_d_i_has_no_dest_V_phi_fu_854_p4 <= ap_phi_reg_pp0_iter0_f_to_e_d_i_has_no_dest_V_reg_851;
        end if; 
    end process;


    ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12_assign_proc : process(instruction_reg_3775, ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34, ret_V_6_fu_2629_p5, ap_phi_reg_pp0_iter0_f_to_e_d_i_imm_1_reg_945, sext_ln75_2_fu_2561_p1, sext_ln75_1_fu_2582_p1, sext_ln75_fu_2596_p1)
    begin
        if (((ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 = ap_const_lv3_0) or ((ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 = ap_const_lv3_1) or (ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 = ap_const_lv3_7)))) then 
            ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12 <= ap_const_lv20_0;
        elsif ((ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 = ap_const_lv3_2)) then 
            ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12 <= sext_ln75_fu_2596_p1;
        elsif ((ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 = ap_const_lv3_3)) then 
            ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12 <= sext_ln75_1_fu_2582_p1;
        elsif ((ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 = ap_const_lv3_4)) then 
            ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12 <= sext_ln75_2_fu_2561_p1;
        elsif ((ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 = ap_const_lv3_5)) then 
            ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12 <= instruction_reg_3775(31 downto 12);
        elsif ((ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 = ap_const_lv3_6)) then 
            ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12 <= ret_V_6_fu_2629_p5;
        else 
            ap_phi_mux_f_to_e_d_i_imm_1_phi_fu_948_p12 <= ap_phi_reg_pp0_iter0_f_to_e_d_i_imm_1_reg_945;
        end if; 
    end process;

    ap_phi_mux_f_to_e_d_i_type_V_phi_fu_892_p34 <= ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882;

    ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4_assign_proc : process(ap_CS_fsm_state1, m_from_e_cancel_V_reg_804, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 <= ap_const_lv1_1;
        else 
            ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 <= m_from_e_cancel_V_reg_804;
        end if; 
    end process;


    ap_phi_mux_m_to_w_cancel_V_1_phi_fu_818_p4_assign_proc : process(ap_CS_fsm_state1, m_to_w_cancel_V_1_reg_815, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_phi_mux_m_to_w_cancel_V_1_phi_fu_818_p4 <= ap_const_lv1_1;
        else 
            ap_phi_mux_m_to_w_cancel_V_1_phi_fu_818_p4 <= m_to_w_cancel_V_1_reg_815;
        end if; 
    end process;


    ap_phi_mux_next_pc_V_phi_fu_1005_p8_assign_proc : process(e_to_m_d_i_type_V_load_1_reg_3884, npc_reg_3888, next_pc_V_4_reg_3894, ap_phi_reg_pp0_iter0_next_pc_V_reg_1002)
    begin
        if ((e_to_m_d_i_type_V_load_1_reg_3884 = ap_const_lv3_6)) then 
            ap_phi_mux_next_pc_V_phi_fu_1005_p8 <= next_pc_V_4_reg_3894;
        elsif ((not((e_to_m_d_i_type_V_load_1_reg_3884 = ap_const_lv3_4)) and not((e_to_m_d_i_type_V_load_1_reg_3884 = ap_const_lv3_2)) and not((e_to_m_d_i_type_V_load_1_reg_3884 = ap_const_lv3_6)))) then 
            ap_phi_mux_next_pc_V_phi_fu_1005_p8 <= npc_reg_3888;
        else 
            ap_phi_mux_next_pc_V_phi_fu_1005_p8 <= ap_phi_reg_pp0_iter0_next_pc_V_reg_1002;
        end if; 
    end process;


    ap_phi_mux_result_26_phi_fu_966_p16_assign_proc : process(f_to_e_d_i_func3_V_reg_3605, result_10_reg_3849, result_4_reg_3869, ap_phi_reg_pp0_iter0_result_26_reg_963)
    begin
        if ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_1)) then 
            ap_phi_mux_result_26_phi_fu_966_p16 <= result_4_reg_3869;
        elsif ((f_to_e_d_i_func3_V_reg_3605 = ap_const_lv3_5)) then 
            ap_phi_mux_result_26_phi_fu_966_p16 <= result_10_reg_3849;
        else 
            ap_phi_mux_result_26_phi_fu_966_p16 <= ap_phi_reg_pp0_iter0_result_26_reg_963;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_c_result_reg_984 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_e_to_f_target_pc_1_reg_1015 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_26_reg_1034 <= "X";
    ap_phi_reg_pp0_iter0_f_to_e_d_i_has_no_dest_V_reg_851 <= "X";
    ap_phi_reg_pp0_iter0_f_to_e_d_i_imm_1_reg_945 <= "XXXXXXXXXXXXXXXXXXXX";

    ap_ready_int_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_pc_V_assign_proc : process(ap_CS_fsm_state1, e_to_f_target_pc_V, ap_loop_init, f_to_e_pc_V_fu_562)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_pc_V <= e_to_f_target_pc_V;
        else 
            ap_sig_allocacmp_pc_V <= f_to_e_pc_V_fu_562;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_10_load_assign_proc : process(ap_CS_fsm_state1, reg_file_9_reload, ap_loop_init, reg_file_10_fu_462)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_10_load <= reg_file_9_reload;
        else 
            ap_sig_allocacmp_reg_file_10_load <= reg_file_10_fu_462;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_11_load_assign_proc : process(ap_CS_fsm_state1, reg_file_10_reload, ap_loop_init, reg_file_11_fu_466)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_11_load <= reg_file_10_reload;
        else 
            ap_sig_allocacmp_reg_file_11_load <= reg_file_11_fu_466;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_12_load_assign_proc : process(ap_CS_fsm_state1, reg_file_11_reload, ap_loop_init, reg_file_12_fu_470)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_12_load <= reg_file_11_reload;
        else 
            ap_sig_allocacmp_reg_file_12_load <= reg_file_12_fu_470;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_13_load_assign_proc : process(ap_CS_fsm_state1, reg_file_12_reload, ap_loop_init, reg_file_13_fu_474)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_13_load <= reg_file_12_reload;
        else 
            ap_sig_allocacmp_reg_file_13_load <= reg_file_13_fu_474;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_14_load_assign_proc : process(ap_CS_fsm_state1, reg_file_13_reload, ap_loop_init, reg_file_14_fu_478)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_14_load <= reg_file_13_reload;
        else 
            ap_sig_allocacmp_reg_file_14_load <= reg_file_14_fu_478;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_15_load_assign_proc : process(ap_CS_fsm_state1, reg_file_14_reload, ap_loop_init, reg_file_15_fu_482)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_15_load <= reg_file_14_reload;
        else 
            ap_sig_allocacmp_reg_file_15_load <= reg_file_15_fu_482;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_16_load_assign_proc : process(ap_CS_fsm_state1, reg_file_15_reload, ap_loop_init, reg_file_16_fu_486)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_16_load <= reg_file_15_reload;
        else 
            ap_sig_allocacmp_reg_file_16_load <= reg_file_16_fu_486;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_17_load_assign_proc : process(ap_CS_fsm_state1, reg_file_30_reload, ap_loop_init, reg_file_17_fu_490)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_17_load <= reg_file_30_reload;
        else 
            ap_sig_allocacmp_reg_file_17_load <= reg_file_17_fu_490;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_18_load_assign_proc : process(ap_CS_fsm_state1, reg_file_29_reload, ap_loop_init, reg_file_18_fu_494)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_18_load <= reg_file_29_reload;
        else 
            ap_sig_allocacmp_reg_file_18_load <= reg_file_18_fu_494;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_19_load_assign_proc : process(ap_CS_fsm_state1, reg_file_28_reload, ap_loop_init, reg_file_19_fu_498)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_19_load <= reg_file_28_reload;
        else 
            ap_sig_allocacmp_reg_file_19_load <= reg_file_19_fu_498;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_1_load_assign_proc : process(ap_CS_fsm_state1, reg_file_reload, ap_loop_init, reg_file_1_fu_426)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_1_load <= reg_file_reload;
        else 
            ap_sig_allocacmp_reg_file_1_load <= reg_file_1_fu_426;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_20_load_assign_proc : process(ap_CS_fsm_state1, reg_file_27_reload, ap_loop_init, reg_file_20_fu_502)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_20_load <= reg_file_27_reload;
        else 
            ap_sig_allocacmp_reg_file_20_load <= reg_file_20_fu_502;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_21_load_assign_proc : process(ap_CS_fsm_state1, reg_file_26_reload, ap_loop_init, reg_file_21_fu_506)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_21_load <= reg_file_26_reload;
        else 
            ap_sig_allocacmp_reg_file_21_load <= reg_file_21_fu_506;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_22_load_assign_proc : process(ap_CS_fsm_state1, reg_file_25_reload, ap_loop_init, reg_file_22_fu_510)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_22_load <= reg_file_25_reload;
        else 
            ap_sig_allocacmp_reg_file_22_load <= reg_file_22_fu_510;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_23_load_assign_proc : process(ap_CS_fsm_state1, reg_file_24_reload, ap_loop_init, reg_file_23_fu_514)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_23_load <= reg_file_24_reload;
        else 
            ap_sig_allocacmp_reg_file_23_load <= reg_file_23_fu_514;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_24_load_assign_proc : process(ap_CS_fsm_state1, reg_file_23_reload, ap_loop_init, reg_file_24_fu_518)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_24_load <= reg_file_23_reload;
        else 
            ap_sig_allocacmp_reg_file_24_load <= reg_file_24_fu_518;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_25_load_assign_proc : process(ap_CS_fsm_state1, reg_file_22_reload, ap_loop_init, reg_file_25_fu_522)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_25_load <= reg_file_22_reload;
        else 
            ap_sig_allocacmp_reg_file_25_load <= reg_file_25_fu_522;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_26_load_assign_proc : process(ap_CS_fsm_state1, reg_file_21_reload, ap_loop_init, reg_file_26_fu_526)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_26_load <= reg_file_21_reload;
        else 
            ap_sig_allocacmp_reg_file_26_load <= reg_file_26_fu_526;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_27_load_assign_proc : process(ap_CS_fsm_state1, reg_file_20_reload, ap_loop_init, reg_file_27_fu_530)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_27_load <= reg_file_20_reload;
        else 
            ap_sig_allocacmp_reg_file_27_load <= reg_file_27_fu_530;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_28_load_assign_proc : process(ap_CS_fsm_state1, reg_file_19_reload, ap_loop_init, reg_file_28_fu_534)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_28_load <= reg_file_19_reload;
        else 
            ap_sig_allocacmp_reg_file_28_load <= reg_file_28_fu_534;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_29_load_assign_proc : process(ap_CS_fsm_state1, reg_file_18_reload, ap_loop_init, reg_file_29_fu_538)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_29_load <= reg_file_18_reload;
        else 
            ap_sig_allocacmp_reg_file_29_load <= reg_file_29_fu_538;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_2_load_assign_proc : process(ap_CS_fsm_state1, reg_file_1_reload, ap_loop_init, reg_file_2_fu_430)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_2_load <= reg_file_1_reload;
        else 
            ap_sig_allocacmp_reg_file_2_load <= reg_file_2_fu_430;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_30_load_assign_proc : process(ap_CS_fsm_state1, reg_file_17_reload, ap_loop_init, reg_file_30_fu_542)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_30_load <= reg_file_17_reload;
        else 
            ap_sig_allocacmp_reg_file_30_load <= reg_file_30_fu_542;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_32_load_assign_proc : process(ap_CS_fsm_state1, reg_file_16_reload, ap_loop_init, reg_file_32_fu_550)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_32_load <= reg_file_16_reload;
        else 
            ap_sig_allocacmp_reg_file_32_load <= reg_file_32_fu_550;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_3_load_assign_proc : process(ap_CS_fsm_state1, reg_file_2_reload, ap_loop_init, reg_file_3_fu_434)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_3_load <= reg_file_2_reload;
        else 
            ap_sig_allocacmp_reg_file_3_load <= reg_file_3_fu_434;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_4_load_assign_proc : process(ap_CS_fsm_state1, reg_file_3_reload, ap_loop_init, reg_file_4_fu_438)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_4_load <= reg_file_3_reload;
        else 
            ap_sig_allocacmp_reg_file_4_load <= reg_file_4_fu_438;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_5_load_assign_proc : process(ap_CS_fsm_state1, reg_file_4_reload, ap_loop_init, reg_file_5_fu_442)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_5_load <= reg_file_4_reload;
        else 
            ap_sig_allocacmp_reg_file_5_load <= reg_file_5_fu_442;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_6_load_assign_proc : process(ap_CS_fsm_state1, reg_file_5_reload, ap_loop_init, reg_file_6_fu_446)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_6_load <= reg_file_5_reload;
        else 
            ap_sig_allocacmp_reg_file_6_load <= reg_file_6_fu_446;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_7_load_assign_proc : process(ap_CS_fsm_state1, reg_file_6_reload, ap_loop_init, reg_file_7_fu_450)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_7_load <= reg_file_6_reload;
        else 
            ap_sig_allocacmp_reg_file_7_load <= reg_file_7_fu_450;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_8_load_assign_proc : process(ap_CS_fsm_state1, reg_file_7_reload, ap_loop_init, reg_file_8_fu_454)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_8_load <= reg_file_7_reload;
        else 
            ap_sig_allocacmp_reg_file_8_load <= reg_file_8_fu_454;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_9_load_assign_proc : process(ap_CS_fsm_state1, reg_file_8_reload, ap_loop_init, reg_file_9_fu_458)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_9_load <= reg_file_8_reload;
        else 
            ap_sig_allocacmp_reg_file_9_load <= reg_file_9_fu_458;
        end if; 
    end process;


    ap_sig_allocacmp_reg_file_load_assign_proc : process(ap_CS_fsm_state1, reg_file_31_reload, ap_loop_init, reg_file_fu_422)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_reg_file_load <= reg_file_31_reload;
        else 
            ap_sig_allocacmp_reg_file_load <= reg_file_fu_422;
        end if; 
    end process;

    b0_fu_2405_p1 <= data_ram_q0(8 - 1 downto 0);
    b1_fu_2409_p4 <= data_ram_q0(15 downto 8);
    b2_fu_2423_p4 <= data_ram_q0(23 downto 16);
    b3_fu_2433_p4 <= data_ram_q0(31 downto 24);
    b_4_fu_2458_p3 <= 
        b2_fu_2423_p4 when (icmp_ln31_fu_2453_p2(0) = '1') else 
        b3_fu_2433_p4;
    b_5_fu_2471_p3 <= 
        b1_fu_2409_p4 when (icmp_ln31_1_fu_2466_p2(0) = '1') else 
        b_4_fu_2458_p3;
    b_fu_2484_p3 <= 
        b0_fu_2405_p1 when (icmp_ln31_2_fu_2479_p2(0) = '1') else 
        b_5_fu_2471_p3;
    bypass_rs1_V_fu_1623_p2 <= (w_bp_1_V_fu_1617_p2 or m_bp_1_V_fu_1593_p2);
    bypass_rs2_V_fu_1683_p2 <= (w_bp_2_V_fu_1677_p2 or m_bp_2_V_fu_1653_p2);
    code_ram_address0 <= zext_ln587_fu_1301_p1(16 - 1 downto 0);

    code_ram_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            code_ram_ce0 <= ap_const_logic_1;
        else 
            code_ram_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_imm_inst_11_8_V_fu_2519_p4 <= instruction_reg_3775(11 downto 8);
    d_imm_inst_20_V_fu_2512_p3 <= instruction_reg_3775(20 downto 20);
    d_imm_inst_31_V_fu_2505_p3 <= instruction_reg_3775(31 downto 31);
    d_imm_inst_7_V_fu_2528_p3 <= instruction_reg_3775(7 downto 7);

    data_ram_address0_assign_proc : process(ap_CS_fsm_state1, m_from_e_cancel_V_reg_804, m_from_e_d_i_is_store_V_load_reg_3564, ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4, data_ram_addr_reg_3696, msize_V_1_reg_3706, ap_CS_fsm_state2, zext_ln587_1_fu_1757_p1)
    begin
        if ((((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_V_1_reg_3706 = ap_const_lv2_0) and (m_from_e_d_i_is_store_V_load_reg_3564 = ap_const_lv1_1)) or ((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_V_1_reg_3706 = ap_const_lv2_1) and (m_from_e_d_i_is_store_V_load_reg_3564 = ap_const_lv1_1)) or ((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_V_1_reg_3706 = ap_const_lv2_2) and (m_from_e_d_i_is_store_V_load_reg_3564 = ap_const_lv1_1)))) then 
            data_ram_address0 <= data_ram_addr_reg_3696;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 = ap_const_lv1_0))) then 
            data_ram_address0 <= zext_ln587_1_fu_1757_p1(16 - 1 downto 0);
        else 
            data_ram_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, m_from_e_cancel_V_reg_804, m_from_e_d_i_is_store_V_load_reg_3564, ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4, msize_V_1_reg_3706, ap_CS_fsm_state2, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_V_1_reg_3706 = ap_const_lv2_0) and (m_from_e_d_i_is_store_V_load_reg_3564 = ap_const_lv1_1)) or ((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_V_1_reg_3706 = ap_const_lv2_1) and (m_from_e_d_i_is_store_V_load_reg_3564 = ap_const_lv1_1)) or ((m_from_e_cancel_V_reg_804 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (msize_V_1_reg_3706 = ap_const_lv2_2) and (m_from_e_d_i_is_store_V_load_reg_3564 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1) and (ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4 = ap_const_lv1_0)))) then 
            data_ram_ce0 <= ap_const_logic_1;
        else 
            data_ram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_ram_d0_assign_proc : process(rv2_1_load_reg_3701, msize_V_1_reg_3706, shl_ln79_2_reg_3715, shl_ln76_2_reg_3725, ap_condition_1894)
    begin
        if ((ap_const_boolean_1 = ap_condition_1894)) then
            if ((msize_V_1_reg_3706 = ap_const_lv2_0)) then 
                data_ram_d0 <= shl_ln76_2_reg_3725;
            elsif ((msize_V_1_reg_3706 = ap_const_lv2_1)) then 
                data_ram_d0 <= shl_ln79_2_reg_3715;
            elsif ((msize_V_1_reg_3706 = ap_const_lv2_2)) then 
                data_ram_d0 <= rv2_1_load_reg_3701;
            else 
                data_ram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            data_ram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_we0_assign_proc : process(msize_V_1_reg_3706, shl_ln79_reg_3710, shl_ln76_reg_3720, ap_condition_1894)
    begin
        if ((ap_const_boolean_1 = ap_condition_1894)) then
            if ((msize_V_1_reg_3706 = ap_const_lv2_0)) then 
                data_ram_we0 <= shl_ln76_reg_3720;
            elsif ((msize_V_1_reg_3706 = ap_const_lv2_1)) then 
                data_ram_we0 <= shl_ln79_reg_3710;
            elsif ((msize_V_1_reg_3706 = ap_const_lv2_2)) then 
                data_ram_we0 <= ap_const_lv4_F;
            else 
                data_ram_we0 <= ap_const_lv4_0;
            end if;
        else 
            data_ram_we0 <= ap_const_lv4_0;
        end if; 
    end process;

    e_to_f_set_pc_V_fu_2744_p2 <= (xor_ln947_reg_3919 and or_ln102_fu_2738_p2);
    e_to_m_result_fu_2753_p3 <= 
        zext_ln110_fu_2749_p1 when (e_to_m_d_i_is_ret_V_load_reg_3745(0) = '1') else 
        result_16_fu_2702_p3;
    e_to_m_rv2_fu_1719_p3 <= 
        select_ln8_1_fu_1711_p3 when (bypass_rs2_V_fu_1683_p2(0) = '1') else 
        r2_fu_1493_p34;
    empty_24_fu_2039_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_8) else "0";
    empty_25_fu_2045_p2 <= (empty_fu_2033_p2 or empty_24_fu_2039_p2);
    empty_fu_2033_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_18) else "0";
    f_to_e_d_i_func3_V_load_fu_1292_p1 <= e_to_m_d_i_func3_V_fu_554;
    f_to_e_d_i_is_branch_V_fu_1947_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_18) else "0";
    f_to_e_d_i_is_jal_V_fu_1959_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_1B) else "0";
    f_to_e_d_i_is_jalr_V_fu_1953_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_19) else "0";
    f_to_e_d_i_is_load_V_fu_1935_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_0) else "0";
    f_to_e_d_i_is_lui_V_fu_1971_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_D) else "0";
    f_to_e_d_i_is_op_imm_V_fu_1977_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_4) else "0";
    f_to_e_d_i_is_r_type_V_fu_2499_p2 <= "1" when (ap_phi_reg_pp0_iter0_f_to_e_d_i_type_V_reg_882 = ap_const_lv3_1) else "0";
    f_to_e_d_i_is_ret_V_fu_1965_p2 <= "1" when (code_ram_q0 = ap_const_lv32_8067) else "0";
    f_to_e_d_i_is_store_V_fu_1941_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_8) else "0";
    f_to_e_d_i_opcode_V_fu_1876_p4 <= code_ram_q0(6 downto 2);
    f_to_e_d_i_rd_V_fu_1886_p4 <= code_ram_q0(11 downto 7);
    f_to_e_d_i_rs1_V_fu_1906_p4 <= code_ram_q0(19 downto 15);
    f_to_e_d_i_rs2_V_fu_1916_p4 <= code_ram_q0(24 downto 20);

    grp_fu_1060_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, m_to_w_cancel_V_1_reg_815, ap_phi_mux_m_to_w_cancel_V_1_phi_fu_818_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1060_p0 <= m_to_w_cancel_V_1_reg_815;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1060_p0 <= ap_phi_mux_m_to_w_cancel_V_1_phi_fu_818_p4;
        else 
            grp_fu_1060_p0 <= "X";
        end if; 
    end process;


    grp_fu_1060_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, w_from_m_has_no_dest_V_load_reg_3559, w_from_m_has_no_dest_V_fu_310)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1060_p1 <= w_from_m_has_no_dest_V_load_reg_3559;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1060_p1 <= w_from_m_has_no_dest_V_fu_310;
        else 
            grp_fu_1060_p1 <= "X";
        end if; 
    end process;

    grp_fu_1060_p2 <= (grp_fu_1060_p1 or grp_fu_1060_p0);

    grp_fu_1066_p0_assign_proc : process(ap_CS_fsm_state1, rv1_fu_1697_p3, rv1_reg_3626, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1066_p0 <= rv1_reg_3626;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1066_p0 <= rv1_fu_1697_p3;
        else 
            grp_fu_1066_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1066_p1_assign_proc : process(ap_CS_fsm_state1, e_to_m_rv2_fu_1719_p3, e_to_m_rv2_reg_3650, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1066_p1 <= e_to_m_rv2_reg_3650;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1066_p1 <= e_to_m_rv2_fu_1719_p3;
        else 
            grp_fu_1066_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1066_p2 <= "1" when (signed(grp_fu_1066_p0) < signed(grp_fu_1066_p1)) else "0";

    grp_fu_1071_p0_assign_proc : process(ap_CS_fsm_state1, rv1_fu_1697_p3, rv1_reg_3626, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1071_p0 <= rv1_reg_3626;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1071_p0 <= rv1_fu_1697_p3;
        else 
            grp_fu_1071_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1071_p1_assign_proc : process(ap_CS_fsm_state1, e_to_m_rv2_fu_1719_p3, e_to_m_rv2_reg_3650, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1071_p1 <= e_to_m_rv2_reg_3650;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_1071_p1 <= e_to_m_rv2_fu_1719_p3;
        else 
            grp_fu_1071_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1071_p2 <= "1" when (unsigned(grp_fu_1071_p0) < unsigned(grp_fu_1071_p1)) else "0";

    grp_fu_1088_p0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2, e_to_m_d_i_rd_V_load_reg_3928, e_to_m_d_i_rd_V_fu_390)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1088_p0 <= e_to_m_d_i_rd_V_load_reg_3928;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1088_p0 <= e_to_m_d_i_rd_V_fu_390;
        else 
            grp_fu_1088_p0 <= "XXXXX";
        end if; 
    end process;


    grp_fu_1088_p1_assign_proc : process(ap_CS_fsm_state3, code_ram_q0, ap_CS_fsm_state2, f_to_e_d_i_rs2_V_reg_3806)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1088_p1 <= f_to_e_d_i_rs2_V_reg_3806;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1088_p1 <= code_ram_q0(24 downto 20);
        else 
            grp_fu_1088_p1 <= "XXXXX";
        end if; 
    end process;

    grp_fu_1088_p2 <= "1" when (grp_fu_1088_p0 = grp_fu_1088_p1) else "0";
    grp_fu_1093_p2 <= std_logic_vector(unsigned(rv1_reg_3626) + unsigned(sext_ln82_reg_3839));
    grp_load_fu_1054_p1 <= w_from_m_rd_V_fu_382;
    grp_load_fu_1082_p1 <= e_to_m_d_i_type_V_fu_418;
    h_fu_2492_p3 <= 
        ret_V_8_fu_2443_p4 when (a1_reg_3691(0) = '1') else 
        ret_V_7_fu_2419_p1;
    i_target_pc_fu_2259_p4 <= add_ln127_fu_2254_p2(17 downto 2);
    icmp_ln1065_2_fu_1581_p2 <= "1" when (e_to_m_d_i_rs1_V_fu_394 = m_to_w_rd_V_fu_558) else "0";
    icmp_ln1065_3_fu_1605_p2 <= "1" when (e_to_m_d_i_rs1_V_fu_394 = w_from_m_rd_V_fu_382) else "0";
    icmp_ln1065_4_fu_1641_p2 <= "1" when (e_to_m_d_i_rs2_V_fu_398 = m_to_w_rd_V_fu_558) else "0";
    icmp_ln1065_5_fu_1665_p2 <= "1" when (e_to_m_d_i_rs2_V_fu_398 = w_from_m_rd_V_fu_382) else "0";
    icmp_ln1065_6_fu_2714_p2 <= "1" when (e_to_m_d_i_rd_V_load_reg_3928 = f_to_e_d_i_rs1_V_reg_3800) else "0";
    icmp_ln1065_fu_2051_p2 <= "1" when (f_to_e_d_i_rd_V_fu_1886_p4 = ap_const_lv5_0) else "0";
    icmp_ln1069_1_fu_1629_p2 <= "1" when (e_to_m_d_i_rs2_V_fu_398 = ap_const_lv5_0) else "0";
    icmp_ln1069_2_fu_2285_p2 <= "0" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_D) else "1";
    icmp_ln1069_3_fu_2291_p2 <= "1" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_5) else "0";
    icmp_ln1069_4_fu_2315_p2 <= "0" when (f_to_e_d_i_rs1_V_fu_1906_p4 = ap_const_lv5_0) else "1";
    icmp_ln1069_5_fu_2327_p2 <= "0" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_0) else "1";
    icmp_ln1069_6_fu_2345_p2 <= "0" when (f_to_e_d_i_opcode_V_fu_1876_p4 = ap_const_lv5_19) else "1";
    icmp_ln1069_7_fu_2351_p2 <= "0" when (f_to_e_d_i_rs2_V_fu_1916_p4 = ap_const_lv5_0) else "1";
    icmp_ln1069_fu_1569_p2 <= "1" when (e_to_m_d_i_rs1_V_fu_394 = ap_const_lv5_0) else "0";
    icmp_ln17_fu_3023_p2 <= "0" when (reg_file_35_reg_3568 = ap_const_lv32_0) else "1";
    icmp_ln31_1_fu_2466_p2 <= "1" when (a01_reg_3684 = ap_const_lv2_1) else "0";
    icmp_ln31_2_fu_2479_p2 <= "1" when (a01_reg_3684 = ap_const_lv2_0) else "0";
    icmp_ln31_fu_2453_p2 <= "1" when (a01_reg_3684 = ap_const_lv2_2) else "0";
    icmp_ln44_1_fu_2786_p2 <= "1" when (msize_V_load_reg_3670 = ap_const_lv3_4) else "0";
    icmp_ln44_2_fu_2808_p2 <= "1" when (msize_V_load_reg_3670 = ap_const_lv3_2) else "0";
    icmp_ln44_3_fu_2825_p2 <= "1" when (msize_V_load_reg_3670 = ap_const_lv3_1) else "0";
    icmp_ln44_4_fu_2849_p2 <= "1" when (msize_V_load_reg_3670 = ap_const_lv3_0) else "0";
    icmp_ln44_fu_2769_p2 <= "1" when (msize_V_load_reg_3670 = ap_const_lv3_5) else "0";
    imm12_fu_2642_p3 <= (e_to_m_d_i_imm_V_fu_414 & ap_const_lv12_0);
    is_rs1_reg_V_fu_2321_p2 <= (xor_ln92_1_fu_2309_p2 and icmp_ln1069_4_fu_2315_p2);
    is_rs2_reg_V_fu_2381_p2 <= (and_ln94_3_fu_2375_p2 and and_ln94_1_fu_2363_p2);
    is_running_V_fu_3028_p2 <= (phi_ln947_fu_314 or icmp_ln17_fu_3023_p2);
    m_bp_1_V_fu_1593_p2 <= (xor_ln30_fu_1587_p2 and icmp_ln1065_2_fu_1581_p2);
    m_bp_2_V_fu_1653_p2 <= (xor_ln35_fu_1647_p2 and icmp_ln1065_4_fu_1641_p2);
    m_from_e_d_i_is_store_V_load_load_fu_1286_p1 <= m_from_e_d_i_is_store_V_fu_366;
    msize_V_1_fu_1765_p1 <= msize_V_fu_402(2 - 1 downto 0);
    nbc_out <= nbc_fu_374;

    nbc_out_ap_vld_assign_proc : process(ap_CS_fsm_state3, m_to_w_cancel_V_1_reg_815, is_running_V_fu_3028_p2)
    begin
        if (((is_running_V_fu_3028_p2 = ap_const_lv1_0) and (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            nbc_out_ap_vld <= ap_const_logic_1;
        else 
            nbc_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    nbi_1_fu_3013_p2 <= std_logic_vector(unsigned(zext_ln23_fu_3009_p1) + unsigned(nbi_fu_378));
    nbi_1_out <= std_logic_vector(unsigned(zext_ln23_fu_3009_p1) + unsigned(nbi_fu_378));

    nbi_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state3, m_to_w_cancel_V_1_reg_815, is_running_V_fu_3028_p2)
    begin
        if (((is_running_V_fu_3028_p2 = ap_const_lv1_0) and (m_to_w_cancel_V_1_reg_815 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            nbi_1_out_ap_vld <= ap_const_logic_1;
        else 
            nbi_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    next_pc_V_2_fu_2277_p3 <= 
        i_target_pc_fu_2259_p4 when (e_to_m_d_i_is_jalr_V_fu_330(0) = '1') else 
        npc_fu_2232_p2;
    next_pc_V_3_fu_2269_p3 <= 
        next_pc_V_4_fu_2248_p2 when (ap_phi_mux_cond_V_phi_fu_865_p14(0) = '1') else 
        npc_fu_2232_p2;
    next_pc_V_4_fu_2248_p2 <= std_logic_vector(unsigned(pc_V_1_fu_386) + unsigned(trunc_ln3_fu_2238_p4));
    npc4_fu_2660_p2 <= std_logic_vector(unsigned(r_V_fu_2650_p2) + unsigned(ap_const_lv16_4));
    npc_fu_2232_p2 <= std_logic_vector(unsigned(pc_V_1_fu_386) + unsigned(ap_const_lv16_1));
    opch_fu_2058_p4 <= code_ram_q0(6 downto 5);
    opcl_V_fu_2068_p4 <= code_ram_q0(4 downto 2);
    or_ln102_1_fu_2729_p2 <= (taken_branch_V_reg_3834 or e_to_m_d_i_is_jal_V_load_reg_3740);
    or_ln102_2_fu_2733_p2 <= (e_to_m_d_i_is_jalr_V_load_reg_3735 or ap_phi_mux_empty_26_phi_fu_1037_p10);
    or_ln102_fu_2738_p2 <= (or_ln102_2_fu_2733_p2 or or_ln102_1_fu_2729_p2);
    or_ln30_fu_1563_p2 <= (m_to_w_has_no_dest_V_fu_358 or ap_phi_mux_m_from_e_cancel_V_phi_fu_807_p4);
    or_ln31_fu_1575_p2 <= (or_ln30_fu_1563_p2 or icmp_ln1069_fu_1569_p2);
    or_ln33_fu_1599_p2 <= (icmp_ln1069_fu_1569_p2 or grp_fu_1060_p2);
    or_ln36_fu_1635_p2 <= (or_ln30_fu_1563_p2 or icmp_ln1069_1_fu_1629_p2);
    or_ln38_fu_1659_p2 <= (icmp_ln1069_1_fu_1629_p2 or grp_fu_1060_p2);
    or_ln85_fu_2698_p2 <= (e_to_m_d_i_is_r_type_V_load_reg_3829 or e_to_m_d_i_is_op_imm_V_load_reg_3755);
    or_ln98_fu_2399_p2 <= (xor_ln98_fu_2393_p2 or e_from_e_cancel_V_reg_827);
    or_ln99_fu_2723_p2 <= (xor_ln99_fu_2718_p2 or icmp_ln1065_6_fu_2714_p2);
    r_V_4_fu_1747_p4 <= m_from_e_result_fu_410(17 downto 2);
    r_V_fu_2650_p2 <= std_logic_vector(shift_left(unsigned(pc_V_1_fu_386),to_integer(unsigned('0' & ap_const_lv16_2(16-1 downto 0)))));
    result_10_fu_2160_p3 <= 
        result_8_fu_2150_p2 when (f7_6_reg_840(0) = '1') else 
        result_9_fu_2155_p2;
    result_11_fu_2141_p2 <= (rv1_reg_3626 or rs_fu_2122_p3);
    result_15_fu_2666_p2 <= std_logic_vector(unsigned(imm12_fu_2642_p3) + unsigned(zext_ln106_fu_2656_p1));
    result_16_fu_2702_p3 <= 
        ap_phi_mux_result_26_phi_fu_966_p16 when (or_ln85_fu_2698_p2(0) = '1') else 
        ap_phi_mux_c_result_phi_fu_987_p12;
    result_1_fu_2206_p2 <= std_logic_vector(unsigned(rv1_reg_3626) - unsigned(rs_fu_2122_p3));
    result_20_fu_2779_p3 <= 
        h_reg_3950 when (and_ln44_fu_2774_p2(0) = '1') else 
        ap_const_lv16_0;
    result_21_fu_2796_p3 <= 
        zext_ln17_fu_2763_p1 when (and_ln44_1_fu_2791_p2(0) = '1') else 
        result_20_fu_2779_p3;
    result_22_fu_2818_p3 <= 
        w_reg_3939 when (and_ln44_2_fu_2813_p2(0) = '1') else 
        zext_ln11_fu_2804_p1;
    result_23_fu_2835_p3 <= 
        sext_ln42_fu_2766_p1 when (and_ln44_3_fu_2830_p2(0) = '1') else 
        result_22_fu_2818_p3;
    result_24_fu_2843_p3 <= 
        result_23_fu_2835_p3 when (m_from_e_d_i_is_load_V_load_reg_3765(0) = '1') else 
        m_from_e_result_load_reg_3679;
    result_27_fu_2859_p3 <= 
        sext_ln38_fu_2760_p1 when (and_ln44_4_fu_2854_p2(0) = '1') else 
        result_24_fu_2843_p3;
    result_2_fu_2211_p2 <= std_logic_vector(unsigned(rs_fu_2122_p3) + unsigned(rv1_reg_3626));
    result_3_fu_2216_p3 <= 
        result_1_fu_2206_p2 when (and_ln46_fu_2200_p2(0) = '1') else 
        result_2_fu_2211_p2;
    result_4_fu_2195_p2 <= std_logic_vector(shift_left(unsigned(rv1_reg_3626),to_integer(unsigned('0' & zext_ln51_fu_2191_p1(31-1 downto 0)))));
    result_5_fu_2182_p2 <= "1" when (signed(rv1_reg_3626) < signed(rs_fu_2122_p3)) else "0";
    result_6_fu_2173_p2 <= "1" when (unsigned(rv1_reg_3626) < unsigned(rs_fu_2122_p3)) else "0";
    result_7_fu_2168_p2 <= (rv1_reg_3626 xor rs_fu_2122_p3);
    result_8_fu_2150_p2 <= std_logic_vector(shift_right(signed(rv1_reg_3626),to_integer(unsigned('0' & zext_ln60_fu_2146_p1(31-1 downto 0)))));
    result_9_fu_2155_p2 <= std_logic_vector(shift_right(unsigned(rv1_reg_3626),to_integer(unsigned('0' & zext_ln60_fu_2146_p1(31-1 downto 0)))));
    result_V_1_fu_2097_p2 <= "1" when (rv1_reg_3626 = e_to_m_rv2_reg_3650) else "0";
    result_V_2_fu_2092_p2 <= "0" when (rv1_reg_3626 = e_to_m_rv2_reg_3650) else "1";
    result_V_4_fu_2086_p2 <= (icmp_ln23_reg_3660 xor ap_const_lv1_1);
    result_V_fu_2102_p2 <= (icmp_ln29_reg_3665 xor ap_const_lv1_1);
    result_fu_2224_p2 <= (rv1_reg_3626 and rs_fu_2122_p3);
    ret_V_3_fu_2575_p3 <= (tmp_2_fu_2566_p4 & f_to_e_d_i_rd_V_reg_3789);
    ret_V_4_fu_2549_p5 <= (((d_imm_inst_31_V_fu_2505_p3 & d_imm_inst_7_V_fu_2528_p3) & tmp_4_fu_2540_p4) & d_imm_inst_11_8_V_fu_2519_p4);
    ret_V_6_fu_2629_p5 <= (((d_imm_inst_31_V_fu_2505_p3 & tmp_fu_2611_p4) & d_imm_inst_20_V_fu_2512_p3) & tmp_1_fu_2620_p4);
    ret_V_7_fu_2419_p1 <= data_ram_q0(16 - 1 downto 0);
    ret_V_8_fu_2443_p4 <= data_ram_q0(31 downto 16);
    ret_V_fu_2587_p4 <= instruction_reg_3775(31 downto 20);
    rs_fu_2122_p3 <= 
        e_to_m_rv2_reg_3650 when (e_to_m_d_i_is_r_type_V_fu_354(0) = '1') else 
        sext_ln82_fu_2114_p1;
    rv1_fu_1697_p3 <= 
        select_ln8_fu_1689_p3 when (bypass_rs1_V_fu_1623_p2(0) = '1') else 
        r1_fu_1423_p34;
    rv2_01_fu_1773_p1 <= rv2_1_fu_406(16 - 1 downto 0);
    rv2_0_fu_1769_p1 <= rv2_1_fu_406(8 - 1 downto 0);
    select_ln103_fu_2672_p3 <= 
        imm12_fu_2642_p3 when (e_to_m_d_i_is_lui_V_load_reg_3750(0) = '1') else 
        result_15_fu_2666_p2;
    select_ln49_fu_3053_p3 <= 
        ap_phi_mux_e_to_f_target_pc_1_phi_fu_1018_p10 when (e_to_f_set_pc_V_fu_2744_p2(0) = '1') else 
        add_ln232_fu_3048_p2;
    select_ln87_fu_2680_p3 <= 
        grp_fu_1093_p2 when (e_to_m_d_i_is_load_V_load_reg_3730(0) = '1') else 
        ap_const_lv32_0;
    select_ln8_1_fu_1711_p3 <= 
        m_from_e_result_fu_410 when (m_bp_2_V_fu_1653_p2(0) = '1') else 
        reg_file_31_fu_546;
    select_ln8_fu_1689_p3 <= 
        m_from_e_result_fu_410 when (m_bp_1_V_fu_1593_p2(0) = '1') else 
        reg_file_31_fu_546;
        sext_ln38_fu_2760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_reg_3944),32));

        sext_ln42_fu_2766_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_reg_3950),32));

        sext_ln75_1_fu_2582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_3_fu_2575_p3),20));

        sext_ln75_2_fu_2561_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_4_fu_2549_p5),20));

        sext_ln75_fu_2596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_fu_2587_p4),20));

    sext_ln82_fu_2114_p0 <= e_to_m_d_i_imm_V_fu_414;
        sext_ln82_fu_2114_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln82_fu_2114_p0),32));

    shift_V_1_fu_2133_p3 <= 
        shift_V_fu_2129_p1 when (e_to_m_d_i_is_r_type_V_fu_354(0) = '1') else 
        e_to_m_d_i_rs2_V_fu_398;
    shift_V_fu_2129_p1 <= rs_fu_2122_p3(5 - 1 downto 0);
    shl_ln76_1_fu_1831_p3 <= (a01_fu_1735_p1 & ap_const_lv3_0);
    shl_ln76_2_fu_1843_p2 <= std_logic_vector(shift_left(unsigned(zext_ln76_fu_1817_p1),to_integer(unsigned('0' & zext_ln76_2_fu_1839_p1(31-1 downto 0)))));
    shl_ln76_fu_1825_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln76_1_fu_1821_p1(4-1 downto 0)))));
    shl_ln79_1_fu_1799_p3 <= (a1_fu_1739_p3 & ap_const_lv4_0);
    shl_ln79_2_fu_1811_p2 <= std_logic_vector(shift_left(unsigned(zext_ln79_fu_1777_p1),to_integer(unsigned('0' & zext_ln79_2_fu_1807_p1(31-1 downto 0)))));
    shl_ln79_fu_1793_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln79_1_fu_1789_p1(4-1 downto 0)))));
    taken_branch_V_fu_2108_p2 <= (e_to_m_d_i_is_branch_V_fu_326 and ap_phi_mux_cond_V_phi_fu_865_p14);
    tmp_1_fu_2620_p4 <= instruction_reg_3775(30 downto 21);
    tmp_2_fu_2566_p4 <= instruction_reg_3775(31 downto 25);
    tmp_4_fu_2540_p4 <= instruction_reg_3775(30 downto 25);
    tmp_fu_2611_p4 <= instruction_reg_3775(19 downto 12);
    trunc_ln3_fu_2238_p4 <= e_to_m_d_i_imm_V_fu_414(16 downto 1);
    trunc_ln59_fu_1707_p1 <= rv1_fu_1697_p3(18 - 1 downto 0);
    trunc_ln81_fu_2118_p0 <= e_to_m_d_i_imm_V_fu_414;
    trunc_ln81_fu_2118_p1 <= trunc_ln81_fu_2118_p0(18 - 1 downto 0);
    w_bp_1_V_fu_1617_p2 <= (xor_ln32_fu_1611_p2 and icmp_ln1065_3_fu_1605_p2);
    w_bp_2_V_fu_1677_p2 <= (xor_ln37_fu_1671_p2 and icmp_ln1065_5_fu_1665_p2);
    xor_ln1069_fu_2297_p2 <= (icmp_ln1069_3_fu_2291_p2 xor ap_const_lv1_1);
    xor_ln30_fu_1587_p2 <= (or_ln31_fu_1575_p2 xor ap_const_lv1_1);
    xor_ln32_fu_1611_p2 <= (or_ln33_fu_1599_p2 xor ap_const_lv1_1);
    xor_ln35_fu_1647_p2 <= (or_ln36_fu_1635_p2 xor ap_const_lv1_1);
    xor_ln37_fu_1671_p2 <= (or_ln38_fu_1659_p2 xor ap_const_lv1_1);
    xor_ln49_fu_3043_p2 <= (m_to_w_is_ret_V_load_reg_3760 xor ap_const_lv1_1);
    xor_ln92_1_fu_2309_p2 <= (xor_ln92_fu_2303_p2 xor f_to_e_d_i_is_jal_V_fu_1959_p2);
    xor_ln92_fu_2303_p2 <= (icmp_ln1069_3_fu_2291_p2 xor icmp_ln1069_2_fu_2285_p2);
    xor_ln947_1_fu_2872_p2 <= (m_to_w_cancel_V_1_reg_815 xor ap_const_lv1_1);
    xor_ln947_fu_2387_p2 <= (e_from_e_cancel_V_reg_827 xor ap_const_lv1_1);
    xor_ln94_1_fu_2339_p2 <= (f_to_e_d_i_is_jal_V_fu_1959_p2 xor ap_const_lv1_1);
    xor_ln94_fu_2333_p2 <= (icmp_ln1069_5_fu_2327_p2 xor f_to_e_d_i_is_op_imm_V_fu_1977_p2);
    xor_ln98_fu_2393_p2 <= (e_to_m_d_i_is_load_V_fu_318 xor ap_const_lv1_1);
    xor_ln99_fu_2718_p2 <= (is_rs2_reg_V_reg_3913 xor ap_const_lv1_1);
    zext_ln106_fu_2656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_2650_p2),32));
    zext_ln109_fu_2693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_2660_p2),32));
    zext_ln110_fu_2749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_e_to_f_target_pc_1_phi_fu_1018_p10),32));
    zext_ln11_fu_2804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_21_fu_2796_p3),32));
    zext_ln17_fu_2763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_reg_3944),16));
    zext_ln23_fu_3009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln947_1_fu_2872_p2),32));
    zext_ln51_fu_2191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_1_fu_2133_p3),32));
    zext_ln53_fu_2187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_5_fu_2182_p2),32));
    zext_ln55_fu_2178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_6_fu_2173_p2),32));
    zext_ln587_1_fu_1757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_fu_1747_p4),64));
    zext_ln587_fu_1301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_pc_V),64));
    zext_ln60_fu_2146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_1_fu_2133_p3),32));
    zext_ln76_1_fu_1821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a01_fu_1735_p1),4));
    zext_ln76_2_fu_1839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln76_1_fu_1831_p3),32));
    zext_ln76_fu_1817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_0_fu_1769_p1),32));
    zext_ln79_1_fu_1789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_1781_p3),4));
    zext_ln79_2_fu_1807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln79_1_fu_1799_p3),32));
    zext_ln79_fu_1777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_01_fu_1773_p1),32));
    zext_ln86_fu_2688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_2660_p2),32));
end behav;
