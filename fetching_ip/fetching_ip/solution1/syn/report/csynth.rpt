

================================================================
== Synthesis Summary Report of 'fetching_ip'
================================================================
+ General Information: 
    * Date:           Thu Jul 28 09:55:15 2022
    * Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
    * Project:        fetching_ip
    * Solution:       solution1 (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z020-clg400-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +-------------------------+------+------+---------+--------+----------+---------+------+----------+-----------+----+-----------+-----------+-----+
    |         Modules         | Issue|      | Latency | Latency| Iteration|         | Trip |          |           |    |           |           |     |
    |         & Loops         | Type | Slack| (cycles)|  (ns)  |  Latency | Interval| Count| Pipelined|   BRAM    | DSP|     FF    |    LUT    | URAM|
    +-------------------------+------+------+---------+--------+----------+---------+------+----------+-----------+----+-----------+-----------+-----+
    |+ fetching_ip            |     -|  1.57|        -|       -|         -|        -|     -|        no|  128 (45%)|   -|  225 (~0%)|  272 (~0%)|    -|
    | o VITIS_LOOP_20_1       |     -|  7.30|        -|       -|         4|        -|     -|        no|          -|   -|          -|          -|    -|
    |  + fetch                |     -|  4.05|        1|  10.000|         -|        1|     -|        no|          -|   -|   34 (~0%)|   23 (~0%)|    -|
    |  + execute              |     -|  5.22|        0|   0.000|         -|        0|     -|        no|          -|   -|          -|   23 (~0%)|    -|
    |  + running_cond_update  |     -|  4.83|        0|   0.000|         -|        0|     -|        no|          -|   -|          -|   18 (~0%)|    -|
    +-------------------------+------+------+---------+--------+----------+---------+------+----------+-----------+----+-----------+-----------+-----+


================================================================
== HW Interfaces
================================================================
* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+-------------------+
| Interface     | Data Width | Address Width | Offset | Register | Resource Estimate |
+---------------+------------+---------------+--------+----------+-------------------+
| s_axi_control | 32         | 19            | 16     | 0        | BRAM=128          |
+---------------+------------+---------------+--------+----------+-------------------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | start_pc | 0x10   | 32    | W      | Data signal of start_pc          |                                                                      |
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+---------------+
| Argument | Direction | Datatype      |
+----------+-----------+---------------+
| start_pc | in        | unsigned int  |
| code_ram | in        | unsigned int* |
+----------+-----------+---------------+

* SW-to-HW Mapping
+----------+---------------+----------+------------------------------------------+
| Argument | HW Interface  | HW Type  | HW Info                                  |
+----------+---------------+----------+------------------------------------------+
| start_pc | s_axi_control | register | name=start_pc offset=0x10 range=32       |
| code_ram | s_axi_control | memory   | name=code_ram offset=262144 range=262144 |
+----------+---------------+----------+------------------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

  No burst in design

================================================================
== Bind Op Report
================================================================
+---------------+-----+--------+-----------+-----+--------+---------+
| Name          | DSP | Pragma | Variable  | Op  | Impl   | Latency |
+---------------+-----+--------+-----------+-----+--------+---------+
| + fetching_ip | 0   |        |           |     |        |         |
|  + execute    | 0   |        |           |     |        |         |
|    ap_return  | -   |        | add_ln232 | add | fabric | 0       |
+---------------+-----+--------+-----------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
  No bind storage info in design

================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------+-------------------------+---------------------------------------------+
| Type      | Options                 | Location                                    |
+-----------+-------------------------+---------------------------------------------+
| inline    |                         | execute.cpp:4 in compute_next_pc            |
| inline    | off                     | execute.cpp:10 in execute                   |
| inline    | off                     | fetch.cpp:12 in fetch                       |
| inline    | off                     | fetching_ip.cpp:7 in running_cond_update    |
| interface | s_axilite port=start_pc | fetching_ip.cpp:13 in fetching_ip, start_pc |
| interface | s_axilite port=code_ram | fetching_ip.cpp:14 in fetching_ip, code_ram |
| interface | s_axilite port=return   | fetching_ip.cpp:15 in fetching_ip, return   |
| pipeline  | off                     | fetching_ip.cpp:21 in fetching_ip           |
+-----------+-------------------------+---------------------------------------------+


