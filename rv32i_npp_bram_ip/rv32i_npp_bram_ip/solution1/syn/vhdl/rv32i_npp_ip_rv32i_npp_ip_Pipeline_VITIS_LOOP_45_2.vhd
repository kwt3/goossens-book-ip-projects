-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rv32i_npp_ip_rv32i_npp_ip_Pipeline_VITIS_LOOP_45_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    reg_file_26_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_27_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_28_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_29_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_30_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    pc_V : IN STD_LOGIC_VECTOR (15 downto 0);
    reg_file_25_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_24_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_23_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_22_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_21_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_20_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_19_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_18_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_17_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_16_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_15_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_14_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_13_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_12_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_11_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_10_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    reg_file_31_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    code_ram_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    code_ram_EN_A : OUT STD_LOGIC;
    code_ram_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    code_ram_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    code_ram_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    data_ram_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_ram_EN_A : OUT STD_LOGIC;
    data_ram_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    data_ram_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_ram_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    nbi_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    nbi_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of rv32i_npp_ip_rv32i_npp_ip_Pipeline_VITIS_LOOP_45_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8067 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000001100111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal and_ln57_fu_2402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage6 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal d_i_type_V_reg_688 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_imm_V_6_reg_745 : STD_LOGIC_VECTOR (19 downto 0);
    signal result_29_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_863_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal d_i_is_jalr_V_reg_2734 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_load_V_reg_2726 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_fu_847_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal pc_V_2_reg_2672 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal instruction_reg_2684 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal d_i_opcode_V_fu_1088_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_i_opcode_V_reg_2690 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_i_rd_V_fu_1099_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_i_rd_V_reg_2696 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_i_func3_V_reg_2701 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_rs2_V_reg_2712 : STD_LOGIC_VECTOR (4 downto 0);
    signal f7_6_reg_2718 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_load_V_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_store_V_reg_2730 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_jalr_V_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_lui_V_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_lui_V_reg_2739 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_op_imm_V_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_op_imm_V_reg_2744 : STD_LOGIC_VECTOR (0 downto 0);
    signal opch_fu_1171_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal opcl_V_fu_1181_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_is_r_type_V_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_r_type_V_reg_2756 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln75_2_fu_1253_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_d_i_type_V_phi_fu_691_p34 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln75_1_fu_1275_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln75_fu_1289_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_6_fu_1323_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal rv1_fu_1431_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv1_reg_2789 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln251_fu_1501_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln251_reg_2817 : STD_LOGIC_VECTOR (17 downto 0);
    signal rv2_fu_1505_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_reg_2822 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln117_fu_1603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln111_fu_1613_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln108_fu_1741_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_28_fu_1755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_27_fu_1774_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_24_fu_1781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln64_1_fu_1791_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln62_1_fu_1800_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_21_fu_1808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_20_fu_1822_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_17_fu_1830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln95_fu_1835_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_15_fu_1848_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_14_fu_1866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_11_fu_1873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln64_fu_1877_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln62_fu_1881_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_8_fu_1889_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_7_fu_1906_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_4_fu_1914_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a01_fu_1918_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal a01_reg_2941 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal icmp_ln188_fu_2033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_reg_2956 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_1_fu_2038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_1_reg_2961 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_2_fu_2043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_2_reg_2966 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_d_i_type_V_reg_688 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_result_29_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_reg_file_33_phi_fu_825_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln200_fu_2140_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_reg_file_33_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal zext_ln196_fu_2122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln195_fu_2117_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln199_fu_2135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln587_fu_1083_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_1_fu_1937_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal msize_V_fu_1922_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln236_3_fu_1984_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln233_3_fu_2023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_2_fu_2028_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal nbi_fu_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln40_fu_2411_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal pc_V_1_fu_304 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_897_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_902_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_pc_V_4_fu_2369_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal cond_V_fu_2321_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_pc_V_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_file_fu_308 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1069_fu_2145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_22_fu_2155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_file_1_fu_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_2_fu_316 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_3_fu_320 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_4_fu_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_5_fu_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_6_fu_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_7_fu_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_8_fu_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_9_fu_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_10_fu_348 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_11_fu_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_12_fu_356 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_13_fu_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_14_fu_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_15_fu_368 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_16_fu_372 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_17_fu_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_18_fu_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_19_fu_384 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_20_fu_388 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_21_fu_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_22_fu_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_23_fu_400 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_24_fu_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_25_fu_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_26_fu_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_27_fu_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_28_fu_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_29_fu_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_30_fu_428 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_31_fu_432 : STD_LOGIC_VECTOR (31 downto 0);
    signal code_ram_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln236_2_fu_1977_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln236_fu_1958_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln233_2_fu_2016_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln233_fu_1997_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_850_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln85_fu_1575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_867_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_887_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_imm_inst_31_V_fu_1197_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_imm_inst_7_V_fu_1223_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1231_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal d_imm_inst_11_8_V_fu_1213_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_4_fu_1241_p5 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_1257_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_3_fu_1267_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_fu_1279_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_1303_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_imm_inst_20_V_fu_1205_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1313_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal rv1_fu_1431_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1505_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_fu_1588_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal npc4_fu_1597_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal imm12_fu_1580_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln114_fu_1593_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_fu_1607_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_fu_1634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_2_fu_1658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln37_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_1_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln39_fu_1620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln31_fu_1671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_1663_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_1_fu_1677_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_4_fu_1698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_3_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_fu_1703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_2_fu_1685_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_5_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_fu_1630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_1_fu_1709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_6_fu_1728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_fu_1626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_3_fu_1720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1733_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_V_3_fu_1745_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shift_V_5_fu_1749_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln69_1_fu_1760_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_25_fu_1764_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_26_fu_1769_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_23_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_22_fu_1795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln60_1_fu_1804_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln55_1_fu_1813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_18_fu_1817_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_V_fu_1839_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shift_V_2_fu_1842_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln69_fu_1852_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_fu_1856_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_13_fu_1861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln60_fu_1885_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln55_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_5_fu_1898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_6_fu_1902_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_867_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal rv2_01_fu_1934_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_878_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln_fu_1946_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln236_1_fu_1954_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln236_1_fu_1965_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln236_fu_1942_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln236_2_fu_1973_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_0_fu_1931_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln233_1_fu_1993_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln233_1_fu_2004_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln233_fu_1989_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln233_2_fu_2012_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_fu_2066_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b3_fu_2076_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b1_fu_2052_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_4_fu_2096_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b0_fu_2048_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_5_fu_2103_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_2110_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_8_fu_2086_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_fu_2062_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_33_fu_2127_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_fu_2150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln138_fu_2350_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln138_fu_2354_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal next_pc_V_2_fu_2359_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln18_fu_2391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_1_fu_2396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_395 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component rv32i_npp_ip_mux_325_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rv32i_npp_ip_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_325_32_1_1_U33 : component rv32i_npp_ip_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => reg_file_27_fu_416,
        din1 => reg_file_28_fu_420,
        din2 => reg_file_29_fu_424,
        din3 => reg_file_30_fu_428,
        din4 => reg_file_31_fu_432,
        din5 => reg_file_26_fu_412,
        din6 => reg_file_25_fu_408,
        din7 => reg_file_24_fu_404,
        din8 => reg_file_23_fu_400,
        din9 => reg_file_22_fu_396,
        din10 => reg_file_21_fu_392,
        din11 => reg_file_20_fu_388,
        din12 => reg_file_19_fu_384,
        din13 => reg_file_18_fu_380,
        din14 => reg_file_17_fu_376,
        din15 => reg_file_16_fu_372,
        din16 => reg_file_15_fu_368,
        din17 => reg_file_14_fu_364,
        din18 => reg_file_13_fu_360,
        din19 => reg_file_12_fu_356,
        din20 => reg_file_11_fu_352,
        din21 => reg_file_10_fu_348,
        din22 => reg_file_9_fu_344,
        din23 => reg_file_8_fu_340,
        din24 => reg_file_7_fu_336,
        din25 => reg_file_6_fu_332,
        din26 => reg_file_5_fu_328,
        din27 => reg_file_4_fu_324,
        din28 => reg_file_3_fu_320,
        din29 => reg_file_2_fu_316,
        din30 => reg_file_1_fu_312,
        din31 => reg_file_fu_308,
        din32 => rv1_fu_1431_p33,
        dout => rv1_fu_1431_p34);

    mux_325_32_1_1_U34 : component rv32i_npp_ip_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => reg_file_27_fu_416,
        din1 => reg_file_28_fu_420,
        din2 => reg_file_29_fu_424,
        din3 => reg_file_30_fu_428,
        din4 => reg_file_31_fu_432,
        din5 => reg_file_26_fu_412,
        din6 => reg_file_25_fu_408,
        din7 => reg_file_24_fu_404,
        din8 => reg_file_23_fu_400,
        din9 => reg_file_22_fu_396,
        din10 => reg_file_21_fu_392,
        din11 => reg_file_20_fu_388,
        din12 => reg_file_19_fu_384,
        din13 => reg_file_18_fu_380,
        din14 => reg_file_17_fu_376,
        din15 => reg_file_16_fu_372,
        din16 => reg_file_15_fu_368,
        din17 => reg_file_14_fu_364,
        din18 => reg_file_13_fu_360,
        din19 => reg_file_12_fu_356,
        din20 => reg_file_11_fu_352,
        din21 => reg_file_10_fu_348,
        din22 => reg_file_9_fu_344,
        din23 => reg_file_8_fu_340,
        din24 => reg_file_7_fu_336,
        din25 => reg_file_6_fu_332,
        din26 => reg_file_5_fu_328,
        din27 => reg_file_4_fu_324,
        din28 => reg_file_3_fu_320,
        din29 => reg_file_2_fu_316,
        din30 => reg_file_1_fu_312,
        din31 => reg_file_fu_308,
        din32 => rv2_fu_1505_p33,
        dout => rv2_fu_1505_p34);

    flow_control_loop_pipe_sequential_init_U : component rv32i_npp_ip_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage6,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((ap_const_boolean_1 = ap_condition_395)) then 
                    ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745 <= ap_const_lv20_0;
                elsif ((ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_2)) then 
                    ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745 <= sext_ln75_fu_1289_p1;
                elsif ((ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_3)) then 
                    ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745 <= sext_ln75_1_fu_1275_p1;
                elsif ((ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_4)) then 
                    ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745 <= sext_ln75_2_fu_1253_p1;
                elsif ((ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_5)) then 
                    ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745 <= code_ram_Dout_A(31 downto 12);
                elsif ((ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_6)) then 
                    ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745 <= ret_V_6_fu_1323_p5;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_result_29_reg_765_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_1) and (d_i_func3_V_reg_2701 = ap_const_lv3_0) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_20_fu_1822_p3;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_1) and (d_i_func3_V_reg_2701 = ap_const_lv3_1) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_21_fu_1808_p2;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_1) and (d_i_func3_V_reg_2701 = ap_const_lv3_2) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= zext_ln62_1_fu_1800_p1;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_1) and (d_i_func3_V_reg_2701 = ap_const_lv3_3) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= zext_ln64_1_fu_1791_p1;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_1) and (d_i_func3_V_reg_2701 = ap_const_lv3_4) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_24_fu_1781_p2;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_1) and (d_i_func3_V_reg_2701 = ap_const_lv3_5) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_27_fu_1774_p3;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_1) and (d_i_func3_V_reg_2701 = ap_const_lv3_6) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_28_fu_1755_p2;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_func3_V_reg_2701 = ap_const_lv3_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_7_fu_1906_p3;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_func3_V_reg_2701 = ap_const_lv3_1))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_8_fu_1889_p2;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_func3_V_reg_2701 = ap_const_lv3_2))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= zext_ln62_fu_1881_p1;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_func3_V_reg_2701 = ap_const_lv3_3))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= zext_ln64_fu_1877_p1;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_func3_V_reg_2701 = ap_const_lv3_4))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_11_fu_1873_p2;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_func3_V_reg_2701 = ap_const_lv3_5))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_14_fu_1866_p3;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_func3_V_reg_2701 = ap_const_lv3_6))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_15_fu_1848_p2;
            elsif ((((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_0) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and ((d_i_type_V_reg_688 = ap_const_lv3_7) or (d_i_type_V_reg_688 = ap_const_lv3_0))))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= ap_const_lv32_0;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_V_reg_2744 = ap_const_lv1_1) and (d_i_func3_V_reg_2701 = ap_const_lv3_7) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_17_fu_1830_p2;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_func3_V_reg_2701 = ap_const_lv3_7))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= result_4_fu_1914_p2;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= zext_ln95_fu_1835_p1;
            elsif ((((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1) and (d_i_is_jalr_V_reg_2734 = ap_const_lv1_0)) or ((d_i_type_V_reg_688 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= grp_fu_863_p2;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= zext_ln108_fu_1741_p1;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= zext_ln117_fu_1603_p1;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ap_phi_reg_pp0_iter0_result_29_reg_765 <= select_ln111_fu_1613_p3;
            end if; 
        end if;
    end process;

    d_i_type_V_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_0) and (opch_fu_1171_p4 = ap_const_lv2_3))) then 
                d_i_type_V_reg_688 <= ap_const_lv3_4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_3) and (opch_fu_1171_p4 = ap_const_lv2_3))) then 
                d_i_type_V_reg_688 <= ap_const_lv3_6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_0) and (opch_fu_1171_p4 = ap_const_lv2_1))) then 
                d_i_type_V_reg_688 <= ap_const_lv3_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_4) and (opch_fu_1171_p4 = ap_const_lv2_1))) then 
                d_i_type_V_reg_688 <= ap_const_lv3_1;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_1) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_4) and (opch_fu_1171_p4 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_0) and (opch_fu_1171_p4 = ap_const_lv2_0)))) then 
                d_i_type_V_reg_688 <= ap_const_lv3_2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_5) and (opch_fu_1171_p4 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_5) and (opch_fu_1171_p4 = ap_const_lv2_0)))) then 
                d_i_type_V_reg_688 <= ap_const_lv3_5;
            elsif (((not((opcl_V_fu_1181_p4 = ap_const_lv3_4)) and not((opcl_V_fu_1181_p4 = ap_const_lv3_5)) and not((opcl_V_fu_1181_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (opch_fu_1171_p4 = ap_const_lv2_1)) or (not((opcl_V_fu_1181_p4 = ap_const_lv3_4)) and not((opcl_V_fu_1181_p4 = ap_const_lv3_5)) and not((opcl_V_fu_1181_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (opch_fu_1171_p4 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_2) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_6) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opch_fu_1171_p4 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_4) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_5) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_V_fu_1181_p4 = ap_const_lv3_7) and (opch_fu_1171_p4 = ap_const_lv2_3)))) then 
                d_i_type_V_reg_688 <= ap_const_lv3_7;
            elsif ((not((ap_const_lv1_1 = and_ln57_fu_2402_p2)) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                d_i_type_V_reg_688 <= ap_phi_reg_pp0_iter0_d_i_type_V_reg_688;
            end if; 
        end if;
    end process;

    nbi_fu_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                nbi_fu_300 <= ap_const_lv32_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = and_ln57_fu_2402_p2))) then 
                nbi_fu_300 <= add_ln40_fu_2411_p2;
            end if; 
        end if;
    end process;

    pc_V_1_fu_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                pc_V_1_fu_304 <= pc_V;
            elsif (((d_i_type_V_reg_688 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                pc_V_1_fu_304 <= next_pc_V_4_fu_2369_p3;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and ((d_i_type_V_reg_688 = ap_const_lv3_7) or (d_i_type_V_reg_688 = ap_const_lv3_0))) or ((d_i_type_V_reg_688 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((d_i_type_V_reg_688 = ap_const_lv3_4) and (cond_V_fu_2321_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((d_i_type_V_reg_688 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((d_i_type_V_reg_688 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                pc_V_1_fu_304 <= grp_fu_902_p2;
            elsif ((((d_i_type_V_reg_688 = ap_const_lv3_4) and (cond_V_fu_2321_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((d_i_type_V_reg_688 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                pc_V_1_fu_304 <= grp_fu_897_p2;
            end if; 
        end if;
    end process;

    reg_file_10_fu_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_10_fu_348 <= reg_file_9_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_15))) then 
                reg_file_10_fu_348 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_11_fu_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_11_fu_352 <= reg_file_10_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_14))) then 
                reg_file_11_fu_352 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_12_fu_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_12_fu_356 <= reg_file_11_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_13))) then 
                reg_file_12_fu_356 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_13_fu_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_13_fu_360 <= reg_file_12_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_12))) then 
                reg_file_13_fu_360 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_14_fu_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_14_fu_364 <= reg_file_13_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_11))) then 
                reg_file_14_fu_364 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_15_fu_368_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_15_fu_368 <= reg_file_14_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_10))) then 
                reg_file_15_fu_368 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_16_fu_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_16_fu_372 <= reg_file_15_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_F))) then 
                reg_file_16_fu_372 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_17_fu_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_17_fu_376 <= reg_file_16_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_E))) then 
                reg_file_17_fu_376 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_18_fu_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_18_fu_380 <= reg_file_17_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_D))) then 
                reg_file_18_fu_380 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_19_fu_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_19_fu_384 <= reg_file_18_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_C))) then 
                reg_file_19_fu_384 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_1_fu_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_1_fu_312 <= reg_file_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_1E))) then 
                reg_file_1_fu_312 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_20_fu_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_20_fu_388 <= reg_file_19_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_B))) then 
                reg_file_20_fu_388 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_21_fu_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_21_fu_392 <= reg_file_20_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_A))) then 
                reg_file_21_fu_392 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_22_fu_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_22_fu_396 <= reg_file_21_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_9))) then 
                reg_file_22_fu_396 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_23_fu_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_23_fu_400 <= reg_file_22_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_8))) then 
                reg_file_23_fu_400 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_24_fu_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_24_fu_404 <= reg_file_23_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_7))) then 
                reg_file_24_fu_404 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_25_fu_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_25_fu_408 <= reg_file_24_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_6))) then 
                reg_file_25_fu_408 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_26_fu_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_26_fu_412 <= reg_file_25_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_5))) then 
                reg_file_26_fu_412 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_27_fu_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_27_fu_416 <= reg_file_30_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_0))) then 
                reg_file_27_fu_416 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_28_fu_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_28_fu_420 <= reg_file_29_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_1))) then 
                reg_file_28_fu_420 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_29_fu_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_29_fu_424 <= reg_file_28_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_2))) then 
                reg_file_29_fu_424 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_2_fu_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_2_fu_316 <= reg_file_1_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_1D))) then 
                reg_file_2_fu_316 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_30_fu_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_30_fu_428 <= reg_file_27_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_3))) then 
                reg_file_30_fu_428 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_31_fu_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_31_fu_432 <= reg_file_26_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_4))) then 
                reg_file_31_fu_432 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_3_fu_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_3_fu_320 <= reg_file_2_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_1C))) then 
                reg_file_3_fu_320 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_4_fu_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_4_fu_324 <= reg_file_3_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_1B))) then 
                reg_file_4_fu_324 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_5_fu_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_5_fu_328 <= reg_file_4_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_1A))) then 
                reg_file_5_fu_328 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_6_fu_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_6_fu_332 <= reg_file_5_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_19))) then 
                reg_file_6_fu_332 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_7_fu_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_7_fu_336 <= reg_file_6_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_18))) then 
                reg_file_7_fu_336 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_8_fu_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_8_fu_340 <= reg_file_7_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_17))) then 
                reg_file_8_fu_340 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_9_fu_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_9_fu_344 <= reg_file_8_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_16))) then 
                reg_file_9_fu_344 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;

    reg_file_fu_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                reg_file_fu_308 <= reg_file_31_reload;
            elsif (((empty_22_fu_2155_p2 = ap_const_lv1_0) and (icmp_ln1069_fu_2145_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_V_reg_2696 = ap_const_lv5_1F))) then 
                reg_file_fu_308 <= ap_phi_mux_reg_file_33_phi_fu_825_p16;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                a01_reg_2941 <= a01_fu_1918_p1;
                result_29_reg_765 <= ap_phi_reg_pp0_iter0_result_29_reg_765;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_load_V_reg_2726 = ap_const_lv1_0))) then
                ap_phi_reg_pp0_iter0_reg_file_33_reg_822 <= ap_phi_reg_pp0_iter0_result_29_reg_765;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                d_i_func3_V_reg_2701 <= code_ram_Dout_A(14 downto 12);
                d_i_is_jalr_V_reg_2734 <= d_i_is_jalr_V_fu_1153_p2;
                d_i_is_load_V_reg_2726 <= d_i_is_load_V_fu_1147_p2;
                d_i_is_lui_V_reg_2739 <= d_i_is_lui_V_fu_1159_p2;
                d_i_is_op_imm_V_reg_2744 <= d_i_is_op_imm_V_fu_1165_p2;
                d_i_is_r_type_V_reg_2756 <= d_i_is_r_type_V_fu_1191_p2;
                d_i_is_store_V_reg_2730 <= grp_fu_850_p2;
                d_i_opcode_V_reg_2690 <= code_ram_Dout_A(6 downto 2);
                d_i_rd_V_reg_2696 <= code_ram_Dout_A(11 downto 7);
                d_i_rs2_V_reg_2712 <= code_ram_Dout_A(24 downto 20);
                f7_6_reg_2718 <= code_ram_Dout_A(30 downto 30);
                instruction_reg_2684 <= code_ram_Dout_A;
                rv1_reg_2789 <= rv1_fu_1431_p34;
                rv2_reg_2822 <= rv2_fu_1505_p34;
                trunc_ln251_reg_2817 <= trunc_ln251_fu_1501_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                d_i_imm_V_6_reg_745 <= ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1))) then
                icmp_ln188_1_reg_2961 <= icmp_ln188_1_fu_2038_p2;
                icmp_ln188_2_reg_2966 <= icmp_ln188_2_fu_2043_p2;
                icmp_ln188_reg_2956 <= icmp_ln188_fu_2033_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                pc_V_2_reg_2672 <= grp_load_fu_847_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    a01_fu_1918_p1 <= ap_phi_reg_pp0_iter0_result_29_reg_765(2 - 1 downto 0);
    add_ln138_fu_2354_p2 <= std_logic_vector(unsigned(trunc_ln251_reg_2817) + unsigned(trunc_ln138_fu_2350_p1));
    add_ln40_fu_2411_p2 <= std_logic_vector(unsigned(nbi_fu_300) + unsigned(ap_const_lv32_1));
    and_ln31_1_fu_1709_p2 <= (select_ln31_2_fu_1685_p3 and and_ln31_fu_1703_p2);
    and_ln31_fu_1703_p2 <= (icmp_ln31_4_fu_1698_p2 and icmp_ln31_3_fu_1693_p2);
    and_ln55_1_fu_1813_p2 <= (f7_6_reg_2718 and d_i_is_r_type_V_reg_2756);
    and_ln55_fu_1894_p2 <= (f7_6_reg_2718 and d_i_is_r_type_V_reg_2756);
    and_ln57_fu_2402_p2 <= (icmp_ln18_fu_2391_p2 and icmp_ln1069_1_fu_2396_p2);
    and_ln_fu_1946_p3 <= (grp_fu_878_p3 & ap_const_lv1_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_395_assign_proc : process(ap_phi_mux_d_i_type_V_phi_fu_691_p34)
    begin
                ap_condition_395 <= ((ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_0) or ((ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_7) or (ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_1)));
    end process;


    ap_condition_exit_pp0_iter0_stage6_assign_proc : process(ap_CS_fsm_state7, and_ln57_fu_2402_p2)
    begin
        if (((ap_const_lv1_1 = and_ln57_fu_2402_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state7, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage6;

    ap_phi_mux_d_i_type_V_phi_fu_691_p34_assign_proc : process(opch_fu_1171_p4, opcl_V_fu_1181_p4, ap_phi_reg_pp0_iter0_d_i_type_V_reg_688)
    begin
        if (((opcl_V_fu_1181_p4 = ap_const_lv3_0) and (opch_fu_1171_p4 = ap_const_lv2_3))) then 
            ap_phi_mux_d_i_type_V_phi_fu_691_p34 <= ap_const_lv3_4;
        elsif (((opcl_V_fu_1181_p4 = ap_const_lv3_3) and (opch_fu_1171_p4 = ap_const_lv2_3))) then 
            ap_phi_mux_d_i_type_V_phi_fu_691_p34 <= ap_const_lv3_6;
        elsif (((opcl_V_fu_1181_p4 = ap_const_lv3_0) and (opch_fu_1171_p4 = ap_const_lv2_1))) then 
            ap_phi_mux_d_i_type_V_phi_fu_691_p34 <= ap_const_lv3_3;
        elsif (((opcl_V_fu_1181_p4 = ap_const_lv3_4) and (opch_fu_1171_p4 = ap_const_lv2_1))) then 
            ap_phi_mux_d_i_type_V_phi_fu_691_p34 <= ap_const_lv3_1;
        elsif ((((opcl_V_fu_1181_p4 = ap_const_lv3_1) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((opcl_V_fu_1181_p4 = ap_const_lv3_4) and (opch_fu_1171_p4 = ap_const_lv2_0)) or ((opcl_V_fu_1181_p4 = ap_const_lv3_0) and (opch_fu_1171_p4 = ap_const_lv2_0)))) then 
            ap_phi_mux_d_i_type_V_phi_fu_691_p34 <= ap_const_lv3_2;
        elsif ((((opcl_V_fu_1181_p4 = ap_const_lv3_5) and (opch_fu_1171_p4 = ap_const_lv2_1)) or ((opcl_V_fu_1181_p4 = ap_const_lv3_5) and (opch_fu_1171_p4 = ap_const_lv2_0)))) then 
            ap_phi_mux_d_i_type_V_phi_fu_691_p34 <= ap_const_lv3_5;
        elsif (((opch_fu_1171_p4 = ap_const_lv2_2) or ((opcl_V_fu_1181_p4 = ap_const_lv3_2) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((opcl_V_fu_1181_p4 = ap_const_lv3_6) and (opch_fu_1171_p4 = ap_const_lv2_3)) or (not((opcl_V_fu_1181_p4 = ap_const_lv3_4)) and not((opcl_V_fu_1181_p4 = ap_const_lv3_5)) and not((opcl_V_fu_1181_p4 = ap_const_lv3_0)) and (opch_fu_1171_p4 = ap_const_lv2_1)) or (not((opcl_V_fu_1181_p4 = ap_const_lv3_4)) and not((opcl_V_fu_1181_p4 = ap_const_lv3_5)) and not((opcl_V_fu_1181_p4 = ap_const_lv3_0)) and (opch_fu_1171_p4 = ap_const_lv2_0)) or ((opcl_V_fu_1181_p4 = ap_const_lv3_4) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((opcl_V_fu_1181_p4 = ap_const_lv3_5) and (opch_fu_1171_p4 = ap_const_lv2_3)) or ((opcl_V_fu_1181_p4 = ap_const_lv3_7) and (opch_fu_1171_p4 = ap_const_lv2_3)))) then 
            ap_phi_mux_d_i_type_V_phi_fu_691_p34 <= ap_const_lv3_7;
        else 
            ap_phi_mux_d_i_type_V_phi_fu_691_p34 <= ap_phi_reg_pp0_iter0_d_i_type_V_reg_688;
        end if; 
    end process;


    ap_phi_mux_reg_file_33_phi_fu_825_p16_assign_proc : process(data_ram_Dout_A, d_i_is_load_V_reg_2726, d_i_func3_V_reg_2701, zext_ln200_fu_2140_p1, ap_phi_reg_pp0_iter0_reg_file_33_reg_822, zext_ln196_fu_2122_p1, sext_ln195_fu_2117_p1, sext_ln199_fu_2135_p1)
    begin
        if (((d_i_func3_V_reg_2701 = ap_const_lv3_1) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1))) then 
            ap_phi_mux_reg_file_33_phi_fu_825_p16 <= sext_ln199_fu_2135_p1;
        elsif (((d_i_func3_V_reg_2701 = ap_const_lv3_0) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1))) then 
            ap_phi_mux_reg_file_33_phi_fu_825_p16 <= sext_ln195_fu_2117_p1;
        elsif (((d_i_func3_V_reg_2701 = ap_const_lv3_2) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1))) then 
            ap_phi_mux_reg_file_33_phi_fu_825_p16 <= data_ram_Dout_A;
        elsif ((((d_i_func3_V_reg_2701 = ap_const_lv3_7) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1)) or ((d_i_func3_V_reg_2701 = ap_const_lv3_3) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1)) or ((d_i_func3_V_reg_2701 = ap_const_lv3_6) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1)))) then 
            ap_phi_mux_reg_file_33_phi_fu_825_p16 <= ap_const_lv32_0;
        elsif (((d_i_func3_V_reg_2701 = ap_const_lv3_4) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1))) then 
            ap_phi_mux_reg_file_33_phi_fu_825_p16 <= zext_ln196_fu_2122_p1;
        elsif (((d_i_func3_V_reg_2701 = ap_const_lv3_5) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1))) then 
            ap_phi_mux_reg_file_33_phi_fu_825_p16 <= zext_ln200_fu_2140_p1;
        else 
            ap_phi_mux_reg_file_33_phi_fu_825_p16 <= ap_phi_reg_pp0_iter0_reg_file_33_reg_822;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_d_i_type_V_reg_688 <= "XXX";

    ap_ready_int_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_pc_V_2_assign_proc : process(ap_CS_fsm_state1, pc_V, ap_loop_init, pc_V_1_fu_304)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_pc_V_2 <= pc_V;
        else 
            ap_sig_allocacmp_pc_V_2 <= pc_V_1_fu_304;
        end if; 
    end process;

    b0_fu_2048_p1 <= data_ram_Dout_A(8 - 1 downto 0);
    b1_fu_2052_p4 <= data_ram_Dout_A(15 downto 8);
    b2_fu_2066_p4 <= data_ram_Dout_A(23 downto 16);
    b3_fu_2076_p4 <= data_ram_Dout_A(31 downto 24);
    b_4_fu_2096_p3 <= 
        b2_fu_2066_p4 when (icmp_ln188_reg_2956(0) = '1') else 
        b3_fu_2076_p4;
    b_5_fu_2103_p3 <= 
        b1_fu_2052_p4 when (icmp_ln188_1_reg_2961(0) = '1') else 
        b_4_fu_2096_p3;
    b_fu_2110_p3 <= 
        b0_fu_2048_p1 when (icmp_ln188_2_reg_2966(0) = '1') else 
        b_5_fu_2103_p3;
    code_ram_Addr_A <= std_logic_vector(shift_left(unsigned(code_ram_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    code_ram_Addr_A_orig <= zext_ln587_fu_1083_p1(32 - 1 downto 0);
    code_ram_Din_A <= ap_const_lv32_0;

    code_ram_EN_A_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
            code_ram_EN_A <= ap_const_logic_1;
        else 
            code_ram_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    code_ram_WEN_A <= ap_const_lv4_0;
    cond_V_fu_2321_p1 <= ap_phi_mux_reg_file_33_phi_fu_825_p16(1 - 1 downto 0);
    d_i_is_jalr_V_fu_1153_p2 <= "1" when (d_i_opcode_V_fu_1088_p4 = ap_const_lv5_19) else "0";
    d_i_is_load_V_fu_1147_p2 <= "1" when (d_i_opcode_V_fu_1088_p4 = ap_const_lv5_0) else "0";
    d_i_is_lui_V_fu_1159_p2 <= "1" when (d_i_opcode_V_fu_1088_p4 = ap_const_lv5_D) else "0";
    d_i_is_op_imm_V_fu_1165_p2 <= "1" when (d_i_opcode_V_fu_1088_p4 = ap_const_lv5_4) else "0";
    d_i_is_r_type_V_fu_1191_p2 <= "1" when (ap_phi_mux_d_i_type_V_phi_fu_691_p34 = ap_const_lv3_1) else "0";
    d_i_opcode_V_fu_1088_p4 <= code_ram_Dout_A(6 downto 2);
    d_i_rd_V_fu_1099_p4 <= code_ram_Dout_A(11 downto 7);
    d_imm_inst_11_8_V_fu_1213_p4 <= code_ram_Dout_A(11 downto 8);
    d_imm_inst_20_V_fu_1205_p3 <= code_ram_Dout_A(20 downto 20);
    d_imm_inst_31_V_fu_1197_p3 <= code_ram_Dout_A(31 downto 31);
    d_imm_inst_7_V_fu_1223_p3 <= code_ram_Dout_A(7 downto 7);
    data_ram_Addr_A <= std_logic_vector(shift_left(unsigned(data_ram_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    data_ram_Addr_A_orig_assign_proc : process(d_i_is_load_V_reg_2726, d_i_is_store_V_reg_2730, ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln587_1_fu_1937_p1, msize_V_fu_1922_p4, zext_ln236_3_fu_1984_p1, zext_ln233_3_fu_2023_p1, zext_ln587_2_fu_2028_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1))) then 
            data_ram_Addr_A_orig <= zext_ln587_2_fu_2028_p1(32 - 1 downto 0);
        elsif (((msize_V_fu_1922_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_V_reg_2730 = ap_const_lv1_1))) then 
            data_ram_Addr_A_orig <= zext_ln233_3_fu_2023_p1(32 - 1 downto 0);
        elsif (((msize_V_fu_1922_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_V_reg_2730 = ap_const_lv1_1))) then 
            data_ram_Addr_A_orig <= zext_ln236_3_fu_1984_p1(32 - 1 downto 0);
        elsif (((msize_V_fu_1922_p4 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_V_reg_2730 = ap_const_lv1_1))) then 
            data_ram_Addr_A_orig <= zext_ln587_1_fu_1937_p1(32 - 1 downto 0);
        else 
            data_ram_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_Din_A_assign_proc : process(d_i_is_store_V_reg_2730, rv2_reg_2822, ap_CS_fsm_state4, msize_V_fu_1922_p4, shl_ln236_2_fu_1977_p2, shl_ln233_2_fu_2016_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_V_reg_2730 = ap_const_lv1_1))) then
            if ((msize_V_fu_1922_p4 = ap_const_lv2_0)) then 
                data_ram_Din_A <= shl_ln233_2_fu_2016_p2;
            elsif ((msize_V_fu_1922_p4 = ap_const_lv2_1)) then 
                data_ram_Din_A <= shl_ln236_2_fu_1977_p2;
            elsif ((msize_V_fu_1922_p4 = ap_const_lv2_2)) then 
                data_ram_Din_A <= rv2_reg_2822;
            else 
                data_ram_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            data_ram_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_EN_A_assign_proc : process(d_i_is_load_V_reg_2726, d_i_is_store_V_reg_2730, ap_CS_fsm_state4, ap_CS_fsm_state5, msize_V_fu_1922_p4)
    begin
        if ((((msize_V_fu_1922_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_V_reg_2730 = ap_const_lv1_1)) or ((msize_V_fu_1922_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_V_reg_2730 = ap_const_lv1_1)) or ((msize_V_fu_1922_p4 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_V_reg_2730 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_is_load_V_reg_2726 = ap_const_lv1_1)))) then 
            data_ram_EN_A <= ap_const_logic_1;
        else 
            data_ram_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    data_ram_WEN_A_assign_proc : process(d_i_is_store_V_reg_2730, ap_CS_fsm_state4, msize_V_fu_1922_p4, shl_ln236_fu_1958_p2, shl_ln233_fu_1997_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_V_reg_2730 = ap_const_lv1_1))) then
            if ((msize_V_fu_1922_p4 = ap_const_lv2_0)) then 
                data_ram_WEN_A <= shl_ln233_fu_1997_p2;
            elsif ((msize_V_fu_1922_p4 = ap_const_lv2_1)) then 
                data_ram_WEN_A <= shl_ln236_fu_1958_p2;
            elsif ((msize_V_fu_1922_p4 = ap_const_lv2_2)) then 
                data_ram_WEN_A <= ap_const_lv4_F;
            else 
                data_ram_WEN_A <= ap_const_lv4_0;
            end if;
        else 
            data_ram_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    empty_22_fu_2155_p2 <= (grp_fu_850_p2 or empty_fu_2150_p2);
    empty_fu_2150_p2 <= "1" when (d_i_opcode_V_reg_2690 = ap_const_lv5_18) else "0";

    grp_fu_850_p0_assign_proc : process(code_ram_Dout_A, ap_CS_fsm_state2, d_i_opcode_V_reg_2690, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_850_p0 <= d_i_opcode_V_reg_2690;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_850_p0 <= code_ram_Dout_A(6 downto 2);
        else 
            grp_fu_850_p0 <= "XXXXX";
        end if; 
    end process;

    grp_fu_850_p2 <= "1" when (grp_fu_850_p0 = ap_const_lv5_8) else "0";
    grp_fu_855_p2 <= "1" when (unsigned(rv1_reg_2789) < unsigned(rv2_reg_2822)) else "0";
    grp_fu_859_p2 <= "1" when (signed(rv1_reg_2789) < signed(rv2_reg_2822)) else "0";
    grp_fu_863_p2 <= std_logic_vector(unsigned(rv1_reg_2789) + unsigned(sext_ln85_fu_1575_p1));

    grp_fu_867_p1_assign_proc : process(result_29_reg_765, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_phi_reg_pp0_iter0_result_29_reg_765)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_867_p1 <= result_29_reg_765;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_867_p1 <= ap_phi_reg_pp0_iter0_result_29_reg_765;
        else 
            grp_fu_867_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_867_p4 <= grp_fu_867_p1(17 downto 2);

    grp_fu_878_p1_assign_proc : process(result_29_reg_765, ap_CS_fsm_state4, ap_phi_reg_pp0_iter0_result_29_reg_765, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_878_p1 <= result_29_reg_765;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_878_p1 <= ap_phi_reg_pp0_iter0_result_29_reg_765;
        else 
            grp_fu_878_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_878_p3 <= grp_fu_878_p1(1 downto 1);
    grp_fu_887_p4 <= d_i_imm_V_6_reg_745(16 downto 1);
    grp_fu_897_p2 <= std_logic_vector(unsigned(grp_fu_887_p4) + unsigned(pc_V_2_reg_2672));
    grp_fu_902_p2 <= std_logic_vector(unsigned(pc_V_2_reg_2672) + unsigned(ap_const_lv16_1));

    grp_load_fu_847_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state7, pc_V_1_fu_304, ap_sig_allocacmp_pc_V_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_load_fu_847_p1 <= pc_V_1_fu_304;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_load_fu_847_p1 <= ap_sig_allocacmp_pc_V_2;
        else 
            grp_load_fu_847_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln1069_1_fu_2396_p2 <= "1" when (grp_load_fu_847_p1 = ap_const_lv16_0) else "0";
    icmp_ln1069_fu_2145_p2 <= "1" when (d_i_rd_V_reg_2696 = ap_const_lv5_0) else "0";
    icmp_ln188_1_fu_2038_p2 <= "1" when (a01_reg_2941 = ap_const_lv2_1) else "0";
    icmp_ln188_2_fu_2043_p2 <= "1" when (a01_reg_2941 = ap_const_lv2_0) else "0";
    icmp_ln188_fu_2033_p2 <= "1" when (a01_reg_2941 = ap_const_lv2_2) else "0";
    icmp_ln18_fu_2391_p2 <= "1" when (instruction_reg_2684 = ap_const_lv32_8067) else "0";
    icmp_ln31_1_fu_1653_p2 <= "1" when (d_i_func3_V_reg_2701 = ap_const_lv3_5) else "0";
    icmp_ln31_2_fu_1658_p2 <= "1" when (d_i_func3_V_reg_2701 = ap_const_lv3_4) else "0";
    icmp_ln31_3_fu_1693_p2 <= "0" when (d_i_func3_V_reg_2701 = ap_const_lv3_2) else "1";
    icmp_ln31_4_fu_1698_p2 <= "0" when (d_i_func3_V_reg_2701 = ap_const_lv3_3) else "1";
    icmp_ln31_5_fu_1715_p2 <= "1" when (d_i_func3_V_reg_2701 = ap_const_lv3_1) else "0";
    icmp_ln31_6_fu_1728_p2 <= "1" when (d_i_func3_V_reg_2701 = ap_const_lv3_0) else "0";
    icmp_ln31_fu_1648_p2 <= "1" when (d_i_func3_V_reg_2701 = ap_const_lv3_6) else "0";
    icmp_ln32_fu_1626_p2 <= "1" when (rv1_reg_2789 = rv2_reg_2822) else "0";
    icmp_ln33_fu_1630_p2 <= "0" when (rv1_reg_2789 = rv2_reg_2822) else "1";
    icmp_ln37_fu_1634_p2 <= "1" when (signed(rv1_reg_2789) < signed(rv2_reg_2822)) else "0";
    icmp_ln38_fu_1644_p2 <= "1" when (unsigned(rv1_reg_2789) < unsigned(rv2_reg_2822)) else "0";
    imm12_fu_1580_p3 <= (ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745 & ap_const_lv12_0);
    msize_V_fu_1922_p4 <= instruction_reg_2684(13 downto 12);
    nbi_out <= nbi_fu_300;

    nbi_out_ap_vld_assign_proc : process(ap_CS_fsm_state7, and_ln57_fu_2402_p2)
    begin
        if (((ap_const_lv1_1 = and_ln57_fu_2402_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            nbi_out_ap_vld <= ap_const_logic_1;
        else 
            nbi_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    next_pc_V_2_fu_2359_p4 <= add_ln138_fu_2354_p2(17 downto 2);
    next_pc_V_4_fu_2369_p3 <= 
        next_pc_V_2_fu_2359_p4 when (d_i_is_jalr_V_reg_2734(0) = '1') else 
        grp_fu_902_p2;
    npc4_fu_1597_p2 <= std_logic_vector(unsigned(r_V_fu_1588_p2) + unsigned(ap_const_lv16_4));
    opch_fu_1171_p4 <= code_ram_Dout_A(6 downto 5);
    opcl_V_fu_1181_p4 <= code_ram_Dout_A(4 downto 2);
    or_ln31_fu_1671_p2 <= (icmp_ln31_2_fu_1658_p2 or icmp_ln31_1_fu_1653_p2);
    r_V_fu_1588_p2 <= std_logic_vector(shift_left(unsigned(pc_V_2_reg_2672),to_integer(unsigned('0' & ap_const_lv16_2(16-1 downto 0)))));
    result_11_fu_1873_p2 <= (rv2_reg_2822 xor rv1_reg_2789);
    result_12_fu_1856_p2 <= std_logic_vector(shift_right(signed(rv1_reg_2789),to_integer(unsigned('0' & zext_ln69_fu_1852_p1(31-1 downto 0)))));
    result_13_fu_1861_p2 <= std_logic_vector(shift_right(unsigned(rv1_reg_2789),to_integer(unsigned('0' & zext_ln69_fu_1852_p1(31-1 downto 0)))));
    result_14_fu_1866_p3 <= 
        result_12_fu_1856_p2 when (f7_6_reg_2718(0) = '1') else 
        result_13_fu_1861_p2;
    result_15_fu_1848_p2 <= (rv2_reg_2822 or rv1_reg_2789);
    result_17_fu_1830_p2 <= (sext_ln85_fu_1575_p1 and rv1_reg_2789);
    result_18_fu_1817_p2 <= std_logic_vector(unsigned(rv1_reg_2789) - unsigned(sext_ln85_fu_1575_p1));
    result_1_fu_1733_p3 <= 
        icmp_ln32_fu_1626_p2 when (icmp_ln31_6_fu_1728_p2(0) = '1') else 
        select_ln31_3_fu_1720_p3;
    result_20_fu_1822_p3 <= 
        result_18_fu_1817_p2 when (and_ln55_1_fu_1813_p2(0) = '1') else 
        grp_fu_863_p2;
    result_21_fu_1808_p2 <= std_logic_vector(shift_left(unsigned(rv1_reg_2789),to_integer(unsigned('0' & zext_ln60_1_fu_1804_p1(31-1 downto 0)))));
    result_22_fu_1795_p2 <= "1" when (signed(sext_ln85_fu_1575_p1) > signed(rv1_reg_2789)) else "0";
    result_23_fu_1786_p2 <= "1" when (unsigned(sext_ln85_fu_1575_p1) > unsigned(rv1_reg_2789)) else "0";
    result_24_fu_1781_p2 <= (sext_ln85_fu_1575_p1 xor rv1_reg_2789);
    result_25_fu_1764_p2 <= std_logic_vector(shift_right(signed(rv1_reg_2789),to_integer(unsigned('0' & zext_ln69_1_fu_1760_p1(31-1 downto 0)))));
    result_26_fu_1769_p2 <= std_logic_vector(shift_right(unsigned(rv1_reg_2789),to_integer(unsigned('0' & zext_ln69_1_fu_1760_p1(31-1 downto 0)))));
    result_27_fu_1774_p3 <= 
        result_25_fu_1764_p2 when (f7_6_reg_2718(0) = '1') else 
        result_26_fu_1769_p2;
    result_28_fu_1755_p2 <= (sext_ln85_fu_1575_p1 or rv1_reg_2789);
    result_2_fu_1607_p2 <= std_logic_vector(unsigned(imm12_fu_1580_p3) + unsigned(zext_ln114_fu_1593_p1));
    result_33_fu_2127_p3 <= 
        ret_V_8_fu_2086_p4 when (grp_fu_878_p3(0) = '1') else 
        ret_V_7_fu_2062_p1;
    result_4_fu_1914_p2 <= (rv2_reg_2822 and rv1_reg_2789);
    result_5_fu_1898_p2 <= std_logic_vector(unsigned(rv1_reg_2789) - unsigned(rv2_reg_2822));
    result_6_fu_1902_p2 <= std_logic_vector(unsigned(rv2_reg_2822) + unsigned(rv1_reg_2789));
    result_7_fu_1906_p3 <= 
        result_5_fu_1898_p2 when (and_ln55_fu_1894_p2(0) = '1') else 
        result_6_fu_1902_p2;
    result_8_fu_1889_p2 <= std_logic_vector(shift_left(unsigned(rv1_reg_2789),to_integer(unsigned('0' & zext_ln60_fu_1885_p1(31-1 downto 0)))));
    ret_V_3_fu_1267_p3 <= (tmp_2_fu_1257_p4 & d_i_rd_V_fu_1099_p4);
    ret_V_4_fu_1241_p5 <= (((d_imm_inst_31_V_fu_1197_p3 & d_imm_inst_7_V_fu_1223_p3) & tmp_4_fu_1231_p4) & d_imm_inst_11_8_V_fu_1213_p4);
    ret_V_6_fu_1323_p5 <= (((d_imm_inst_31_V_fu_1197_p3 & tmp_fu_1303_p4) & d_imm_inst_20_V_fu_1205_p3) & tmp_1_fu_1313_p4);
    ret_V_7_fu_2062_p1 <= data_ram_Dout_A(16 - 1 downto 0);
    ret_V_8_fu_2086_p4 <= data_ram_Dout_A(31 downto 16);
    ret_V_fu_1279_p4 <= code_ram_Dout_A(31 downto 20);
    rv1_fu_1431_p33 <= code_ram_Dout_A(19 downto 15);
    rv2_01_fu_1934_p1 <= rv2_reg_2822(16 - 1 downto 0);
    rv2_0_fu_1931_p1 <= rv2_reg_2822(8 - 1 downto 0);
    rv2_fu_1505_p33 <= code_ram_Dout_A(24 downto 20);
    select_ln111_fu_1613_p3 <= 
        imm12_fu_1580_p3 when (d_i_is_lui_V_reg_2739(0) = '1') else 
        result_2_fu_1607_p2;
    select_ln31_1_fu_1677_p3 <= 
        icmp_ln38_fu_1644_p2 when (icmp_ln31_fu_1648_p2(0) = '1') else 
        xor_ln39_fu_1620_p2;
    select_ln31_2_fu_1685_p3 <= 
        select_ln31_fu_1663_p3 when (or_ln31_fu_1671_p2(0) = '1') else 
        select_ln31_1_fu_1677_p3;
    select_ln31_3_fu_1720_p3 <= 
        icmp_ln33_fu_1630_p2 when (icmp_ln31_5_fu_1715_p2(0) = '1') else 
        and_ln31_1_fu_1709_p2;
    select_ln31_fu_1663_p3 <= 
        grp_fu_859_p2 when (icmp_ln31_2_fu_1658_p2(0) = '1') else 
        xor_ln37_fu_1638_p2;
        sext_ln195_fu_2117_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_fu_2110_p3),32));

        sext_ln199_fu_2135_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_33_fu_2127_p3),32));

        sext_ln75_1_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_3_fu_1267_p3),20));

        sext_ln75_2_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_4_fu_1241_p5),20));

        sext_ln75_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_fu_1279_p4),20));

        sext_ln85_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745),32));

    shift_V_2_fu_1842_p3 <= 
        shift_V_fu_1839_p1 when (d_i_is_r_type_V_reg_2756(0) = '1') else 
        d_i_rs2_V_reg_2712;
    shift_V_3_fu_1745_p1 <= ap_phi_reg_pp0_iter0_d_i_imm_V_6_reg_745(5 - 1 downto 0);
    shift_V_5_fu_1749_p3 <= 
        shift_V_3_fu_1745_p1 when (d_i_is_r_type_V_reg_2756(0) = '1') else 
        d_i_rs2_V_reg_2712;
    shift_V_fu_1839_p1 <= rv2_reg_2822(5 - 1 downto 0);
    shl_ln233_1_fu_2004_p3 <= (a01_fu_1918_p1 & ap_const_lv3_0);
    shl_ln233_2_fu_2016_p2 <= std_logic_vector(shift_left(unsigned(zext_ln233_fu_1989_p1),to_integer(unsigned('0' & zext_ln233_2_fu_2012_p1(31-1 downto 0)))));
    shl_ln233_fu_1997_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln233_1_fu_1993_p1(4-1 downto 0)))));
    shl_ln236_1_fu_1965_p3 <= (grp_fu_878_p3 & ap_const_lv4_0);
    shl_ln236_2_fu_1977_p2 <= std_logic_vector(shift_left(unsigned(zext_ln236_fu_1942_p1),to_integer(unsigned('0' & zext_ln236_2_fu_1973_p1(31-1 downto 0)))));
    shl_ln236_fu_1958_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln236_1_fu_1954_p1(4-1 downto 0)))));
    tmp_1_fu_1313_p4 <= code_ram_Dout_A(30 downto 21);
    tmp_2_fu_1257_p4 <= code_ram_Dout_A(31 downto 25);
    tmp_4_fu_1231_p4 <= code_ram_Dout_A(30 downto 25);
    tmp_fu_1303_p4 <= code_ram_Dout_A(19 downto 12);
    trunc_ln138_fu_2350_p1 <= d_i_imm_V_6_reg_745(18 - 1 downto 0);
    trunc_ln251_fu_1501_p1 <= rv1_fu_1431_p34(18 - 1 downto 0);
    xor_ln37_fu_1638_p2 <= (icmp_ln37_fu_1634_p2 xor ap_const_lv1_1);
    xor_ln39_fu_1620_p2 <= (grp_fu_855_p2 xor ap_const_lv1_1);
    zext_ln108_fu_1741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_1_fu_1733_p3),32));
    zext_ln114_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1588_p2),32));
    zext_ln117_fu_1603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_1597_p2),32));
    zext_ln196_fu_2122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_fu_2110_p3),32));
    zext_ln200_fu_2140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_33_fu_2127_p3),32));
    zext_ln233_1_fu_1993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a01_fu_1918_p1),4));
    zext_ln233_2_fu_2012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln233_1_fu_2004_p3),32));
    zext_ln233_3_fu_2023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_867_p4),64));
    zext_ln233_fu_1989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_0_fu_1931_p1),32));
    zext_ln236_1_fu_1954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_1946_p3),4));
    zext_ln236_2_fu_1973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln236_1_fu_1965_p3),32));
    zext_ln236_3_fu_1984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_867_p4),64));
    zext_ln236_fu_1942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_01_fu_1934_p1),32));
    zext_ln587_1_fu_1937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_867_p4),64));
    zext_ln587_2_fu_2028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_867_p4),64));
    zext_ln587_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_load_fu_847_p1),64));
    zext_ln60_1_fu_1804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_5_fu_1749_p3),32));
    zext_ln60_fu_1885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_2_fu_1842_p3),32));
    zext_ln62_1_fu_1800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_22_fu_1795_p2),32));
    zext_ln62_fu_1881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_859_p2),32));
    zext_ln64_1_fu_1791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_23_fu_1786_p2),32));
    zext_ln64_fu_1877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_855_p2),32));
    zext_ln69_1_fu_1760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_5_fu_1749_p3),32));
    zext_ln69_fu_1852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_2_fu_1842_p3),32));
    zext_ln95_fu_1835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_1597_p2),32));
end behav;
