#test_branch.h
000: ff800513      li x10, -8
     x10 =               -8 (fffffff8)
004: 00500593      li x11, 5
     x11 =                5 (       5)
008: 00b50463      beq x10, x11, 16
     pc  =               12 (       c)
012: 00100613      li x12, 1
     x12 =                1 (       1)
016: 00b51463      bne x10, x11, 24
     pc  =               24 (      18)
024: 00b54463      blt x10, x11, 32
     pc  =               32 (      20)
032: 00b55463      bge x10, x11, 40
     pc  =               36 (      24)
036: 00200693      li x13, 2
     x13 =                2 (       2)
040: 00b56463      bltu x10, x11, 48
     pc  =               44 (      2c)
044: 00100713      li x14, 1
     x14 =                1 (       1)
048: 00b57463      bgeu x10, x11, 56
     pc  =               56 (      38)
056: 00008067      ret
     pc  =                0 (       0)
12 fetched and decoded instructions
register
x[ 0] =          0 (       0)
x[ 1] =          0 (       0)
x[ 2] =          0 (       0)
x[ 3] =          0 (       0)
x[ 4] =          0 (       0)
x[ 5] =          0 (       0)
x[ 6] =          0 (       0)
x[ 7] =          0 (       0)
x[ 8] =          0 (       0)
x[ 9] =          0 (       0)
x[10] =         -8 (fffffff8)
x[11] =          5 (       5)
x[12] =          1 (       1)
x[13] =          2 (       2)
x[14] =          1 (       1)
x[15] =          0 (       0)
x[16] =          0 (       0)
x[17] =          0 (       0)
x[18] =          0 (       0)
x[19] =          0 (       0)
x[20] =          0 (       0)
x[21] =          0 (       0)
x[22] =          0 (       0)
x[23] =          0 (       0)
x[24] =          0 (       0)
x[25] =          0 (       0)
x[26] =          0 (       0)
x[27] =          0 (       0)
x[28] =          0 (       0)
x[29] =          0 (       0)
x[30] =          0 (       0)
x[31] =          0 (       0)
memory

#test_jal_jalr.h
000: 00008293      addi x5, x1, 0
     x5  =                0 (       0)
004: 00000517      auipc x10, 0
     x10 =                4 (       4)
008: 00000597      auipc x11, 0
     x11 =                8 (       8)
012: 00000613      li x12, 0
     x12 =                0 (       0)
016: 00000713      li x14, 0
     x14 =                0 (       0)
020: 0040006f      j 24
     pc  =               24 (      18)
024: 00160613      addi x12, x12, 1
     x12 =                1 (       1)
028: 020000ef      jal x1, 60
     pc  =               60 (      3c)
     x1  =               32 (      20)
060: 00160613      addi x12, x12, 1
     x12 =                2 (       2)
064: 00008067      ret
     pc  =               32 (      20)
032: 00300693      li x13, 3
     x13 =                3 (       3)
036: 034580e7      jalr 52(x11)
     pc  =               60 (      3c)
     x1  =               40 (      28)
060: 00160613      addi x12, x12, 1
     x12 =                3 (       3)
064: 00008067      ret
     pc  =               40 (      28)
040: 02c50067      jr 44(x10)
     pc  =               48 (      30)
048: 00170713      addi x14, x14, 1
     x14 =                1 (       1)
052: 00028093      addi x1, x5, 0
     x1  =                0 (       0)
056: 00008067      ret
     pc  =                0 (       0)
18 fetched and decoded instructions
register
x[ 0] =          0 (       0)
x[ 1] =          0 (       0)
x[ 2] =          0 (       0)
x[ 3] =          0 (       0)
x[ 4] =          0 (       0)
x[ 5] =          0 (       0)
x[ 6] =          0 (       0)
x[ 7] =          0 (       0)
x[ 8] =          0 (       0)
x[ 9] =          0 (       0)
x[10] =          4 (       4)
x[11] =          8 (       8)
x[12] =          3 (       3)
x[13] =          3 (       3)
x[14] =          1 (       1)
x[15] =          0 (       0)
x[16] =          0 (       0)
x[17] =          0 (       0)
x[18] =          0 (       0)
x[19] =          0 (       0)
x[20] =          0 (       0)
x[21] =          0 (       0)
x[22] =          0 (       0)
x[23] =          0 (       0)
x[24] =          0 (       0)
x[25] =          0 (       0)
x[26] =          0 (       0)
x[27] =          0 (       0)
x[28] =          0 (       0)
x[29] =          0 (       0)
x[30] =          0 (       0)
x[31] =          0 (       0)
memory

#test_load_store.h
000: 00100293      li x5, 1
     x5  =                1 (       1)
004: 00200313      li x6, 2
     x6  =                2 (       2)
008: ffd00393      li x7, -3
     x7  =               -3 (fffffffd)
012: ffc00e13      li x28, -4
     x28 =               -4 (fffffffc)
016: 00000513      li x10, 0
     x10 =                0 (       0)
020: 00552023      sw x5, 0(x10)
     m[       0] =                1 (       1)
024: 00450513      addi x10, x10, 4
     x10 =                4 (       4)
028: 00651023      sh x6, 0(x10)
     m[       4] =                2 (       2)
032: 00551123      sh x5, 2(x10)
     m[       6] =                1 (       1)
036: 00450513      addi x10, x10, 4
     x10 =                8 (       8)
040: 01c50023      sb x28, 0(x10)
     m[       8] =               -4 (fffffffc)
044: 007500a3      sb x7, 1(x10)
     m[       9] =               -3 (fffffffd)
048: 00650123      sb x6, 2(x10)
     m[       a] =                2 (       2)
052: 005501a3      sb x5, 3(x10)
     m[       b] =                1 (       1)
056: 00050583      lb x11, 0(x10)
     x11 =               -4 (fffffffc)    (m[       8])
060: 00150603      lb x12, 1(x10)
     x12 =               -3 (fffffffd)    (m[       9])
064: 00250683      lb x13, 2(x10)
     x13 =                2 (       2)    (m[       a])
068: 00350703      lb x14, 3(x10)
     x14 =                1 (       1)    (m[       b])
072: 00054783      lbu x15, 0(x10)
     x15 =              252 (      fc)    (m[       8])
076: 00154803      lbu x16, 1(x10)
     x16 =              253 (      fd)    (m[       9])
080: 00254883      lbu x17, 2(x10)
     x17 =                2 (       2)    (m[       a])
084: ffc50513      addi x10, x10, -4
     x10 =                4 (       4)
088: 00251403      lh x8, 2(x10)
     x8  =                1 (       1)    (m[       6])
092: 00051483      lh x9, 0(x10)
     x9  =                2 (       2)    (m[       4])
096: 00455903      lhu x18, 4(x10)
     x18 =            65020 (    fdfc)    (m[       8])
100: 00655983      lhu x19, 6(x10)
     x19 =              258 (     102)    (m[       a])
104: ffc50513      addi x10, x10, -4
     x10 =                0 (       0)
108: 00852a03      lw x20, 8(x10)
     x20 =         16973308 ( 102fdfc)    (m[       8])
112: 00008067      ret
     pc  =                0 (       0)
29 fetched and decoded instructions
register
x[ 0] =          0 (       0)
x[ 1] =          0 (       0)
x[ 2] =          0 (       0)
x[ 3] =          0 (       0)
x[ 4] =          0 (       0)
x[ 5] =          1 (       1)
x[ 6] =          2 (       2)
x[ 7] =         -3 (fffffffd)
x[ 8] =          1 (       1)
x[ 9] =          2 (       2)
x[10] =          0 (       0)
x[11] =         -4 (fffffffc)
x[12] =         -3 (fffffffd)
x[13] =          2 (       2)
x[14] =          1 (       1)
x[15] =        252 (      fc)
x[16] =        253 (      fd)
x[17] =          2 (       2)
x[18] =      65020 (    fdfc)
x[19] =        258 (     102)
x[20] =   16973308 ( 102fdfc)
x[21] =          0 (       0)
x[22] =          0 (       0)
x[23] =          0 (       0)
x[24] =          0 (       0)
x[25] =          0 (       0)
x[26] =          0 (       0)
x[27] =          0 (       0)
x[28] =         -4 (fffffffc)
x[29] =          0 (       0)
x[30] =          0 (       0)
x[31] =          0 (       0)
memory
m[   0] =                1 (       1)
m[   1] =            65538 (   10002)
m[   2] =         16973308 ( 102fdfc)

#test_lui_auipc.h
000: 000015b7      lui x11, 1
     x11 =             4096 (    1000)
004: 00001617      auipc x12, 1
     x12 =             4100 (    1004)
008: 40b60633      sub x12, x12, x11
     x12 =                4 (       4)
012: 01460613      addi x12, x12, 20
     x12 =               24 (      18)
016: 00060067      jr x12
     pc  =               24 (      18)
024: 06400693      li x13, 100
     x13 =              100 (      64)
028: 00008067      ret
     pc  =                0 (       0)
7 fetched and decoded instructions
register
x[ 0] =          0 (       0)
x[ 1] =          0 (       0)
x[ 2] =          0 (       0)
x[ 3] =          0 (       0)
x[ 4] =          0 (       0)
x[ 5] =          0 (       0)
x[ 6] =          0 (       0)
x[ 7] =          0 (       0)
x[ 8] =          0 (       0)
x[ 9] =          0 (       0)
x[10] =          0 (       0)
x[11] =       4096 (    1000)
x[12] =         24 (      18)
x[13] =        100 (      64)
x[14] =          0 (       0)
x[15] =          0 (       0)
x[16] =          0 (       0)
x[17] =          0 (       0)
x[18] =          0 (       0)
x[19] =          0 (       0)
x[20] =          0 (       0)
x[21] =          0 (       0)
x[22] =          0 (       0)
x[23] =          0 (       0)
x[24] =          0 (       0)
x[25] =          0 (       0)
x[26] =          0 (       0)
x[27] =          0 (       0)
x[28] =          0 (       0)
x[29] =          0 (       0)
x[30] =          0 (       0)
x[31] =          0 (       0)
memory

#test_mem.h
000: 00000513      li x10, 0
     x10 =                0 (       0)
004: 00000593      li x11, 0
     x11 =                0 (       0)
008: 00000613      li x12, 0
     x12 =                0 (       0)
012: 02860693      addi x13, x12, 40
     x13 =               40 (      28)
016: 00158593      addi x11, x11, 1
     x11 =                1 (       1)
020: 00b62023      sw x11, 0(x12)
     m[       0] =                1 (       1)
024: 00460613      addi x12, x12, 4
     x12 =                4 (       4)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                2 (       2)
020: 00b62023      sw x11, 0(x12)
     m[       4] =                2 (       2)
024: 00460613      addi x12, x12, 4
     x12 =                8 (       8)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                3 (       3)
020: 00b62023      sw x11, 0(x12)
     m[       8] =                3 (       3)
024: 00460613      addi x12, x12, 4
     x12 =               12 (       c)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                4 (       4)
020: 00b62023      sw x11, 0(x12)
     m[       c] =                4 (       4)
024: 00460613      addi x12, x12, 4
     x12 =               16 (      10)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                5 (       5)
020: 00b62023      sw x11, 0(x12)
     m[      10] =                5 (       5)
024: 00460613      addi x12, x12, 4
     x12 =               20 (      14)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                6 (       6)
020: 00b62023      sw x11, 0(x12)
     m[      14] =                6 (       6)
024: 00460613      addi x12, x12, 4
     x12 =               24 (      18)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                7 (       7)
020: 00b62023      sw x11, 0(x12)
     m[      18] =                7 (       7)
024: 00460613      addi x12, x12, 4
     x12 =               28 (      1c)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                8 (       8)
020: 00b62023      sw x11, 0(x12)
     m[      1c] =                8 (       8)
024: 00460613      addi x12, x12, 4
     x12 =               32 (      20)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =                9 (       9)
020: 00b62023      sw x11, 0(x12)
     m[      20] =                9 (       9)
024: 00460613      addi x12, x12, 4
     x12 =               36 (      24)
028: fed61ae3      bne x12, x13, 16
     pc  =               16 (      10)
016: 00158593      addi x11, x11, 1
     x11 =               10 (       a)
020: 00b62023      sw x11, 0(x12)
     m[      24] =               10 (       a)
024: 00460613      addi x12, x12, 4
     x12 =               40 (      28)
028: fed61ae3      bne x12, x13, 16
     pc  =               32 (      20)
032: 00000593      li x11, 0
     x11 =                0 (       0)
036: 00000613      li x12, 0
     x12 =                0 (       0)
040: 00062703      lw x14, 0(x12)
     x14 =                1 (       1)    (m[       0])
044: 00e50533      add x10, x10, x14
     x10 =                1 (       1)
048: 00460613      addi x12, x12, 4
     x12 =                4 (       4)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                2 (       2)    (m[       4])
044: 00e50533      add x10, x10, x14
     x10 =                3 (       3)
048: 00460613      addi x12, x12, 4
     x12 =                8 (       8)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                3 (       3)    (m[       8])
044: 00e50533      add x10, x10, x14
     x10 =                6 (       6)
048: 00460613      addi x12, x12, 4
     x12 =               12 (       c)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                4 (       4)    (m[       c])
044: 00e50533      add x10, x10, x14
     x10 =               10 (       a)
048: 00460613      addi x12, x12, 4
     x12 =               16 (      10)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                5 (       5)    (m[      10])
044: 00e50533      add x10, x10, x14
     x10 =               15 (       f)
048: 00460613      addi x12, x12, 4
     x12 =               20 (      14)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                6 (       6)    (m[      14])
044: 00e50533      add x10, x10, x14
     x10 =               21 (      15)
048: 00460613      addi x12, x12, 4
     x12 =               24 (      18)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                7 (       7)    (m[      18])
044: 00e50533      add x10, x10, x14
     x10 =               28 (      1c)
048: 00460613      addi x12, x12, 4
     x12 =               28 (      1c)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                8 (       8)    (m[      1c])
044: 00e50533      add x10, x10, x14
     x10 =               36 (      24)
048: 00460613      addi x12, x12, 4
     x12 =               32 (      20)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =                9 (       9)    (m[      20])
044: 00e50533      add x10, x10, x14
     x10 =               45 (      2d)
048: 00460613      addi x12, x12, 4
     x12 =               36 (      24)
052: fed61ae3      bne x12, x13, 40
     pc  =               40 (      28)
040: 00062703      lw x14, 0(x12)
     x14 =               10 (       a)    (m[      24])
044: 00e50533      add x10, x10, x14
     x10 =               55 (      37)
048: 00460613      addi x12, x12, 4
     x12 =               40 (      28)
052: fed61ae3      bne x12, x13, 40
     pc  =               56 (      38)
056: 00008067      ret
     pc  =                0 (       0)
87 fetched and decoded instructions
register
x[ 0] =          0 (       0)
x[ 1] =          0 (       0)
x[ 2] =          0 (       0)
x[ 3] =          0 (       0)
x[ 4] =          0 (       0)
x[ 5] =          0 (       0)
x[ 6] =          0 (       0)
x[ 7] =          0 (       0)
x[ 8] =          0 (       0)
x[ 9] =          0 (       0)
x[10] =         55 (      37)
x[11] =          0 (       0)
x[12] =         40 (      28)
x[13] =         40 (      28)
x[14] =         10 (       a)
x[15] =          0 (       0)
x[16] =          0 (       0)
x[17] =          0 (       0)
x[18] =          0 (       0)
x[19] =          0 (       0)
x[20] =          0 (       0)
x[21] =          0 (       0)
x[22] =          0 (       0)
x[23] =          0 (       0)
x[24] =          0 (       0)
x[25] =          0 (       0)
x[26] =          0 (       0)
x[27] =          0 (       0)
x[28] =          0 (       0)
x[29] =          0 (       0)
x[30] =          0 (       0)
x[31] =          0 (       0)
memory
m[   0] =                1 (       1)
m[   1] =                2 (       2)
m[   2] =                3 (       3)
m[   3] =                4 (       4)
m[   4] =                5 (       5)
m[   5] =                6 (       6)
m[   6] =                7 (       7)
m[   7] =                8 (       8)
m[   8] =                9 (       9)
m[   9] =               10 (       a)

#test_op.h
000: 00d00513      li x10, 13
     x10 =               13 (       d)
004: 00c00713      li x14, 12
     x14 =               12 (       c)
008: 00700593      li x11, 7
     x11 =                7 (       7)
012: 01c00293      li x5, 28
     x5  =               28 (      1c)
016: ff600f93      li x31, -10
     x31 =              -10 (fffffff6)
020: 7e600913      li x18, 2022
     x18 =             2022 (     7e6)
024: 00058633      add x12, x11, x0
     x12 =                7 (       7)
028: 00a676b3      and x13, x12, x10
     x13 =                5 (       5)
032: 00e6e7b3      or x15, x13, x14
     x15 =               13 (       d)
036: 0057c833      xor x16, x15, x5
     x16 =               17 (      11)
040: 40b80833      sub x16, x16, x11
     x16 =               10 (       a)
044: 00a838b3      sltu x17, x16, x10
     x17 =                1 (       1)
048: 00581333      sll x6, x16, x5
     x6  =      -1610612736 (a0000000)
052: 01f323b3      slt x7, x6, x31
     x7  =                1 (       1)
056: 01233e33      sltu x28, x6, x18
     x28 =                0 (       0)
060: 00535eb3      srl x29, x6, x5
     x29 =               10 (       a)
064: 40535f33      sra x30, x6, x5
     x30 =               -6 (fffffffa)
068: 00008067      ret
     pc  =                0 (       0)
18 fetched and decoded instructions
register
x[ 0] =          0 (       0)
x[ 1] =          0 (       0)
x[ 2] =          0 (       0)
x[ 3] =          0 (       0)
x[ 4] =          0 (       0)
x[ 5] =         28 (      1c)
x[ 6] = -1610612736 (a0000000)
x[ 7] =          1 (       1)
x[ 8] =          0 (       0)
x[ 9] =          0 (       0)
x[10] =         13 (       d)
x[11] =          7 (       7)
x[12] =          7 (       7)
x[13] =          5 (       5)
x[14] =         12 (       c)
x[15] =         13 (       d)
x[16] =         10 (       a)
x[17] =          1 (       1)
x[18] =       2022 (     7e6)
x[19] =          0 (       0)
x[20] =          0 (       0)
x[21] =          0 (       0)
x[22] =          0 (       0)
x[23] =          0 (       0)
x[24] =          0 (       0)
x[25] =          0 (       0)
x[26] =          0 (       0)
x[27] =          0 (       0)
x[28] =          0 (       0)
x[29] =         10 (       a)
x[30] =         -6 (fffffffa)
x[31] =        -10 (fffffff6)
memory

#test_op_imm.h
000: 00500593      li x11, 5
     x11 =                5 (       5)
004: 00158613      addi x12, x11, 1
     x12 =                6 (       6)
008: 00c67693      andi x13, x12, 12
     x13 =                4 (       4)
012: fff68713      addi x14, x13, -1
     x14 =                3 (       3)
016: 00576793      ori x15, x14, 5
     x15 =                7 (       7)
020: 00c7c813      xori x16, x15, 12
     x16 =               11 (       b)
024: 00d83893      sltiu x17, x16, 13
     x17 =                1 (       1)
028: 00b83293      sltiu x5, x16, 11
     x5  =                0 (       0)
032: 01c81313      slli x6, x16, 28
     x6  =      -1342177280 (b0000000)
036: ff632393      slti x7, x6, -10
     x7  =                1 (       1)
040: 7e633e13      sltiu x28, x6, 2022
     x28 =                0 (       0)
044: 01c35e93      srli x29, x6, 28
     x29 =               11 (       b)
048: 41c35f13      srai x30, x6, 28
     x30 =               -5 (fffffffb)
052: 00008067      ret
     pc  =                0 (       0)
14 fetched and decoded instructions
register
x[ 0] =          0 (       0)
x[ 1] =          0 (       0)
x[ 2] =          0 (       0)
x[ 3] =          0 (       0)
x[ 4] =          0 (       0)
x[ 5] =          0 (       0)
x[ 6] = -1342177280 (b0000000)
x[ 7] =          1 (       1)
x[ 8] =          0 (       0)
x[ 9] =          0 (       0)
x[10] =          0 (       0)
x[11] =          5 (       5)
x[12] =          6 (       6)
x[13] =          4 (       4)
x[14] =          3 (       3)
x[15] =          7 (       7)
x[16] =         11 (       b)
x[17] =          1 (       1)
x[18] =          0 (       0)
x[19] =          0 (       0)
x[20] =          0 (       0)
x[21] =          0 (       0)
x[22] =          0 (       0)
x[23] =          0 (       0)
x[24] =          0 (       0)
x[25] =          0 (       0)
x[26] =          0 (       0)
x[27] =          0 (       0)
x[28] =          0 (       0)
x[29] =         11 (       b)
x[30] =         -5 (fffffffb)
x[31] =          0 (       0)
memory

#test_sum.h
000: 00000513      li x10, 0
     x10 =                0 (       0)
004: 00000593      li x11, 0
     x11 =                0 (       0)
008: 00a00613      li x12, 10
     x12 =               10 (       a)
012: 00158593      addi x11, x11, 1
     x11 =                1 (       1)
016: 00b50533      add x10, x10, x11
     x10 =                1 (       1)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =                2 (       2)
016: 00b50533      add x10, x10, x11
     x10 =                3 (       3)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =                3 (       3)
016: 00b50533      add x10, x10, x11
     x10 =                6 (       6)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =                4 (       4)
016: 00b50533      add x10, x10, x11
     x10 =               10 (       a)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =                5 (       5)
016: 00b50533      add x10, x10, x11
     x10 =               15 (       f)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =                6 (       6)
016: 00b50533      add x10, x10, x11
     x10 =               21 (      15)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =                7 (       7)
016: 00b50533      add x10, x10, x11
     x10 =               28 (      1c)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =                8 (       8)
016: 00b50533      add x10, x10, x11
     x10 =               36 (      24)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =                9 (       9)
016: 00b50533      add x10, x10, x11
     x10 =               45 (      2d)
020: fec59ce3      bne x11, x12, 12
     pc  =               12 (       c)
012: 00158593      addi x11, x11, 1
     x11 =               10 (       a)
016: 00b50533      add x10, x10, x11
     x10 =               55 (      37)
020: fec59ce3      bne x11, x12, 12
     pc  =               24 (      18)
024: 00008067      ret
     pc  =                0 (       0)
34 fetched and decoded instructions
register
x[ 0] =          0 (       0)
x[ 1] =          0 (       0)
x[ 2] =          0 (       0)
x[ 3] =          0 (       0)
x[ 4] =          0 (       0)
x[ 5] =          0 (       0)
x[ 6] =          0 (       0)
x[ 7] =          0 (       0)
x[ 8] =          0 (       0)
x[ 9] =          0 (       0)
x[10] =         55 (      37)
x[11] =         10 (       a)
x[12] =         10 (       a)
x[13] =          0 (       0)
x[14] =          0 (       0)
x[15] =          0 (       0)
x[16] =          0 (       0)
x[17] =          0 (       0)
x[18] =          0 (       0)
x[19] =          0 (       0)
x[20] =          0 (       0)
x[21] =          0 (       0)
x[22] =          0 (       0)
x[23] =          0 (       0)
x[24] =          0 (       0)
x[25] =          0 (       0)
x[26] =          0 (       0)
x[27] =          0 (       0)
x[28] =          0 (       0)
x[29] =          0 (       0)
x[30] =          0 (       0)
x[31] =          0 (       0)
memory
