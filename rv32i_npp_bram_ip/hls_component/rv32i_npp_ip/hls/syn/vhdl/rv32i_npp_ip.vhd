-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rv32i_npp_ip is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    code_ram_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    code_ram_EN_A : OUT STD_LOGIC;
    code_ram_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    code_ram_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    code_ram_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    code_ram_Clk_A : OUT STD_LOGIC;
    code_ram_Rst_A : OUT STD_LOGIC;
    data_ram_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_ram_EN_A : OUT STD_LOGIC;
    data_ram_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    data_ram_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_ram_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    data_ram_Clk_A : OUT STD_LOGIC;
    data_ram_Rst_A : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of rv32i_npp_ip is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "rv32i_npp_ip_rv32i_npp_ip,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.688200,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2974,HLS_SYN_LUT=3536,HLS_VERSION=2024_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv15_2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_const_lv15_4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8067 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000001100111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal or_ln18_fu_2330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage6 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal start_pc : STD_LOGIC_VECTOR (31 downto 0);
    signal nb_instruction_ap_vld : STD_LOGIC;
    signal d_i_type_reg_478 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_imm_5_reg_523 : STD_LOGIC_VECTOR (19 downto 0);
    signal result_30_reg_543 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_652 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal d_i_is_jalr_reg_2867 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_load_reg_2859 : STD_LOGIC_VECTOR (0 downto 0);
    signal pc_1_reg_2599 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal reg_file_32_reg_2612 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal reg_file_33_reg_2618 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_34_reg_2624 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_35_reg_2630 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_36_reg_2636 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_37_reg_2642 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_38_reg_2648 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_39_reg_2654 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_40_reg_2660 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_41_reg_2666 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_42_reg_2672 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_43_reg_2678 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_44_reg_2684 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_45_reg_2690 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_46_reg_2696 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_47_reg_2702 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_48_reg_2708 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_49_reg_2714 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_50_reg_2720 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_51_reg_2726 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_52_reg_2732 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_53_reg_2738 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_54_reg_2744 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_55_reg_2750 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_56_reg_2756 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_57_reg_2762 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_58_reg_2768 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_59_reg_2774 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_60_reg_2780 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_61_reg_2786 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_62_reg_2792 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_file_63_reg_2798 : STD_LOGIC_VECTOR (31 downto 0);
    signal instruction_reg_2804 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_i_rd_reg_2817 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_imm_inst_19_12_reg_2823 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_i_func3_reg_2828 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_rs1_reg_2839 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_i_rs2_reg_2844 : STD_LOGIC_VECTOR (4 downto 0);
    signal f7_6_reg_2851 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_load_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_store_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_store_reg_2863 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_jalr_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_lui_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_lui_reg_2872 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_op_imm_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_op_imm_reg_2877 : STD_LOGIC_VECTOR (0 downto 0);
    signal opch_fu_1034_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal opcl_fu_1044_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_is_r_type_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_r_type_reg_2889 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_imm_inst_31_reg_2897 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_imm_inst_11_8_reg_2903 : STD_LOGIC_VECTOR (3 downto 0);
    signal d_imm_inst_7_reg_2908 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln251_fu_1287_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln251_reg_2913 : STD_LOGIC_VECTOR (16 downto 0);
    signal rv2_fu_1291_p67 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_reg_2918 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln117_fu_1420_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_fu_1434_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_reg_2930 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_1_fu_1534_p17 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_reg_2935 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_29_fu_1580_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_29_reg_2940 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_28_fu_1602_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_28_reg_2945 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_25_fu_1609_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_25_reg_2950 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_24_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_24_reg_2955 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_23_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_23_reg_2960 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_22_fu_1631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_22_reg_2965 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_21_fu_1647_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_21_reg_2970 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_18_fu_1655_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_18_reg_2975 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln95_fu_1661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_16_fu_1675_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_16_reg_2985 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_15_fu_1697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_15_reg_2990 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_fu_1704_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_reg_2995 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_11_reg_3000 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_10_reg_3005 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_9_fu_1714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_9_reg_3010 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_8_fu_1736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_8_reg_3015 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_5_fu_1744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_5_reg_3020 : STD_LOGIC_VECTOR (31 downto 0);
    signal a01_fu_1770_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal a01_reg_3025 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal msize_fu_1774_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal msize_reg_3032 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_637_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal a1_reg_3036 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln236_fu_1818_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln236_reg_3041 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln236_2_fu_1836_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln236_2_reg_3046 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sext_ln195_fu_1995_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln196_fu_1999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln199_fu_2011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln200_fu_2015_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln18_fu_2316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_reg_3084 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_phi_mux_d_i_type_phi_fu_481_p26 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_d_i_type_reg_478 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_d_i_imm_5_phi_fu_527_p12 : STD_LOGIC_VECTOR (19 downto 0);
    signal d_i_imm_fu_1170_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_d_i_imm_5_reg_523 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln39_fu_1104_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln38_fu_1125_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln37_fu_1139_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_result_30_phi_fu_547_p48 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_result_30_reg_543 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln108_fu_1750_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred90_state4 : BOOLEAN;
    signal ap_predicate_pred448_state4 : BOOLEAN;
    signal ap_predicate_pred453_state4 : BOOLEAN;
    signal ap_predicate_pred466_state4 : BOOLEAN;
    signal ap_predicate_pred471_state4 : BOOLEAN;
    signal ap_predicate_pred476_state4 : BOOLEAN;
    signal zext_ln64_1_fu_1754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred482_state4 : BOOLEAN;
    signal zext_ln62_1_fu_1758_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred488_state4 : BOOLEAN;
    signal ap_predicate_pred493_state4 : BOOLEAN;
    signal ap_predicate_pred498_state4 : BOOLEAN;
    signal ap_predicate_pred502_state4 : BOOLEAN;
    signal ap_predicate_pred506_state4 : BOOLEAN;
    signal ap_predicate_pred510_state4 : BOOLEAN;
    signal zext_ln64_fu_1762_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred515_state4 : BOOLEAN;
    signal zext_ln62_fu_1766_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred520_state4 : BOOLEAN;
    signal ap_predicate_pred524_state4 : BOOLEAN;
    signal ap_predicate_pred528_state4 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_result_35_reg_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln12_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln239_fu_1789_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln233_3_fu_1876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln175_fu_1881_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_3_fu_1886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal nbi_fu_282 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal add_ln40_fu_2338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal pc_fu_286 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal add_ln153_fu_2227_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_647_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln147_fu_2260_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln136_fu_2294_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln43_fu_658_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_allocacmp_pc_1 : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_file_fu_290 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal and_ln22_fu_2047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_file_1_fu_294 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_2_fu_298 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_3_fu_302 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_4_fu_306 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_5_fu_310 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_6_fu_314 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_7_fu_318 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_8_fu_322 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_9_fu_326 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_10_fu_330 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_11_fu_334 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_12_fu_338 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_13_fu_342 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_14_fu_346 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_15_fu_350 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_16_fu_354 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_17_fu_358 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_18_fu_362 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_19_fu_366 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_20_fu_370 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_21_fu_374 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_22_fu_378 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_23_fu_382 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_24_fu_386 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_25_fu_390 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_26_fu_394 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_27_fu_398 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_28_fu_402 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_29_fu_406 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_30_fu_410 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_31_fu_414 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal code_ram_EN_A_local : STD_LOGIC;
    signal code_ram_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_EN_A_local : STD_LOGIC;
    signal data_ram_WEN_A_local : STD_LOGIC_VECTOR (3 downto 0);
    signal data_ram_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_Din_A_local : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln233_2_fu_1869_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln233_fu_1850_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal rv1_fu_1181_p67 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln85_fu_1396_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_i_opcode_fu_936_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_1086_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal d_i_imm_4_fu_1095_p5 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_1109_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal d_i_imm_3_fu_1118_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal d_i_imm_2_fu_1130_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_1154_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1161_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal rv1_fu_1181_p65 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_fu_1291_p65 : STD_LOGIC_VECTOR (31 downto 0);
    signal pc4_fu_1409_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal npc4_fu_1414_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal imm12_fu_1401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln114_fu_1424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_fu_1428_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln37_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_5_fu_1502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_6_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_fu_1477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_1_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_2_fu_1487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_3_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_4_fu_1497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln31_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1534_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1534_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1534_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1534_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1534_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1534_p15 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_fu_1534_p16 : STD_LOGIC_VECTOR (5 downto 0);
    signal shift_2_fu_1570_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shift_3_fu_1574_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln69_1_fu_1586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_26_fu_1590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_27_fu_1596_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln60_1_fu_1627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln55_1_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_19_fu_1641_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_fu_1665_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shift_1_fu_1669_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln69_fu_1681_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_13_fu_1685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_14_fu_1691_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln60_fu_1710_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln55_fu_1720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_6_fu_1724_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_7_fu_1730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_01_fu_1786_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_1798_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln_fu_1806_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln236_1_fu_1814_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln236_1_fu_1824_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln236_fu_1794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln236_2_fu_1832_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_0_fu_1783_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln233_1_fu_1846_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln233_1_fu_1857_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln233_fu_1842_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln233_2_fu_1865_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln188_fu_1946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_1_fu_1951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln188_2_fu_1956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_fu_1971_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_1971_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_1971_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_1971_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_1971_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_1971_p10 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_1971_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal a1_1_fu_1890_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal h1_fu_1936_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal h0_fu_1912_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal h_fu_2003_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_2024_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln_fu_2033_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln22_fu_2019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_1_fu_2041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln6_fu_2217_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal cond_fu_2213_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln5_fu_2242_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal conv25_i110_i_i_pn_fu_2252_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln138_fu_2275_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln138_fu_2279_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln4_fu_2284_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln18_1_fu_2324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal rv1_fu_1181_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p7 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p9 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p11 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p13 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p15 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p17 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p19 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p21 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p23 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p25 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p27 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p29 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p31 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p35 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p37 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p39 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p41 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p43 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p45 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p47 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p49 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p51 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p53 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p55 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p57 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p59 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p61 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1181_p63 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p7 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p9 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p11 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p13 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p15 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p17 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p19 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p21 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p23 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p25 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p27 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p29 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p31 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p35 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p37 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p39 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p41 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p43 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p45 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p47 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p49 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p51 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p53 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p55 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p57 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p59 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p61 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1291_p63 : STD_LOGIC_VECTOR (4 downto 0);
    signal result_1_fu_1534_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_1_fu_1534_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_1_fu_1534_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_1_fu_1534_p7 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_1_fu_1534_p9 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_1_fu_1534_p11 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_1_fu_1534_p13 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_fu_1971_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_1971_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_1971_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_1971_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component rv32i_npp_ip_sparsemux_65_5_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (4 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (4 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (4 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (4 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (4 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (4 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (4 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (4 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (4 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (4 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (4 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (4 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (4 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (4 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (4 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (4 downto 0);
        din15_WIDTH : INTEGER;
        CASE16 : STD_LOGIC_VECTOR (4 downto 0);
        din16_WIDTH : INTEGER;
        CASE17 : STD_LOGIC_VECTOR (4 downto 0);
        din17_WIDTH : INTEGER;
        CASE18 : STD_LOGIC_VECTOR (4 downto 0);
        din18_WIDTH : INTEGER;
        CASE19 : STD_LOGIC_VECTOR (4 downto 0);
        din19_WIDTH : INTEGER;
        CASE20 : STD_LOGIC_VECTOR (4 downto 0);
        din20_WIDTH : INTEGER;
        CASE21 : STD_LOGIC_VECTOR (4 downto 0);
        din21_WIDTH : INTEGER;
        CASE22 : STD_LOGIC_VECTOR (4 downto 0);
        din22_WIDTH : INTEGER;
        CASE23 : STD_LOGIC_VECTOR (4 downto 0);
        din23_WIDTH : INTEGER;
        CASE24 : STD_LOGIC_VECTOR (4 downto 0);
        din24_WIDTH : INTEGER;
        CASE25 : STD_LOGIC_VECTOR (4 downto 0);
        din25_WIDTH : INTEGER;
        CASE26 : STD_LOGIC_VECTOR (4 downto 0);
        din26_WIDTH : INTEGER;
        CASE27 : STD_LOGIC_VECTOR (4 downto 0);
        din27_WIDTH : INTEGER;
        CASE28 : STD_LOGIC_VECTOR (4 downto 0);
        din28_WIDTH : INTEGER;
        CASE29 : STD_LOGIC_VECTOR (4 downto 0);
        din29_WIDTH : INTEGER;
        CASE30 : STD_LOGIC_VECTOR (4 downto 0);
        din30_WIDTH : INTEGER;
        CASE31 : STD_LOGIC_VECTOR (4 downto 0);
        din31_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rv32i_npp_ip_sparsemux_15_6_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (5 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (5 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (5 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (5 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (5 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (5 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (5 downto 0);
        din6_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        def : IN STD_LOGIC_VECTOR (0 downto 0);
        sel : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component rv32i_npp_ip_sparsemux_9_3_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component rv32i_npp_ip_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        start_pc : OUT STD_LOGIC_VECTOR (31 downto 0);
        nb_instruction : IN STD_LOGIC_VECTOR (31 downto 0);
        nb_instruction_ap_vld : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component rv32i_npp_ip_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component rv32i_npp_ip_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        start_pc => start_pc,
        nb_instruction => nbi_fu_282,
        nb_instruction_ap_vld => nb_instruction_ap_vld,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    sparsemux_65_5_32_1_1_U1 : component rv32i_npp_ip_sparsemux_65_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000",
        din0_WIDTH => 32,
        CASE1 => "00001",
        din1_WIDTH => 32,
        CASE2 => "00010",
        din2_WIDTH => 32,
        CASE3 => "00011",
        din3_WIDTH => 32,
        CASE4 => "00100",
        din4_WIDTH => 32,
        CASE5 => "00101",
        din5_WIDTH => 32,
        CASE6 => "00110",
        din6_WIDTH => 32,
        CASE7 => "00111",
        din7_WIDTH => 32,
        CASE8 => "01000",
        din8_WIDTH => 32,
        CASE9 => "01001",
        din9_WIDTH => 32,
        CASE10 => "01010",
        din10_WIDTH => 32,
        CASE11 => "01011",
        din11_WIDTH => 32,
        CASE12 => "01100",
        din12_WIDTH => 32,
        CASE13 => "01101",
        din13_WIDTH => 32,
        CASE14 => "01110",
        din14_WIDTH => 32,
        CASE15 => "01111",
        din15_WIDTH => 32,
        CASE16 => "10000",
        din16_WIDTH => 32,
        CASE17 => "10001",
        din17_WIDTH => 32,
        CASE18 => "10010",
        din18_WIDTH => 32,
        CASE19 => "10011",
        din19_WIDTH => 32,
        CASE20 => "10100",
        din20_WIDTH => 32,
        CASE21 => "10101",
        din21_WIDTH => 32,
        CASE22 => "10110",
        din22_WIDTH => 32,
        CASE23 => "10111",
        din23_WIDTH => 32,
        CASE24 => "11000",
        din24_WIDTH => 32,
        CASE25 => "11001",
        din25_WIDTH => 32,
        CASE26 => "11010",
        din26_WIDTH => 32,
        CASE27 => "11011",
        din27_WIDTH => 32,
        CASE28 => "11100",
        din28_WIDTH => 32,
        CASE29 => "11101",
        din29_WIDTH => 32,
        CASE30 => "11110",
        din30_WIDTH => 32,
        CASE31 => "11111",
        din31_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => reg_file_32_reg_2612,
        din1 => reg_file_33_reg_2618,
        din2 => reg_file_34_reg_2624,
        din3 => reg_file_35_reg_2630,
        din4 => reg_file_36_reg_2636,
        din5 => reg_file_37_reg_2642,
        din6 => reg_file_38_reg_2648,
        din7 => reg_file_39_reg_2654,
        din8 => reg_file_40_reg_2660,
        din9 => reg_file_41_reg_2666,
        din10 => reg_file_42_reg_2672,
        din11 => reg_file_43_reg_2678,
        din12 => reg_file_44_reg_2684,
        din13 => reg_file_45_reg_2690,
        din14 => reg_file_46_reg_2696,
        din15 => reg_file_47_reg_2702,
        din16 => reg_file_48_reg_2708,
        din17 => reg_file_49_reg_2714,
        din18 => reg_file_50_reg_2720,
        din19 => reg_file_51_reg_2726,
        din20 => reg_file_52_reg_2732,
        din21 => reg_file_53_reg_2738,
        din22 => reg_file_54_reg_2744,
        din23 => reg_file_55_reg_2750,
        din24 => reg_file_56_reg_2756,
        din25 => reg_file_57_reg_2762,
        din26 => reg_file_58_reg_2768,
        din27 => reg_file_59_reg_2774,
        din28 => reg_file_60_reg_2780,
        din29 => reg_file_61_reg_2786,
        din30 => reg_file_62_reg_2792,
        din31 => reg_file_63_reg_2798,
        def => rv1_fu_1181_p65,
        sel => d_i_rs1_reg_2839,
        dout => rv1_fu_1181_p67);

    sparsemux_65_5_32_1_1_U2 : component rv32i_npp_ip_sparsemux_65_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000",
        din0_WIDTH => 32,
        CASE1 => "00001",
        din1_WIDTH => 32,
        CASE2 => "00010",
        din2_WIDTH => 32,
        CASE3 => "00011",
        din3_WIDTH => 32,
        CASE4 => "00100",
        din4_WIDTH => 32,
        CASE5 => "00101",
        din5_WIDTH => 32,
        CASE6 => "00110",
        din6_WIDTH => 32,
        CASE7 => "00111",
        din7_WIDTH => 32,
        CASE8 => "01000",
        din8_WIDTH => 32,
        CASE9 => "01001",
        din9_WIDTH => 32,
        CASE10 => "01010",
        din10_WIDTH => 32,
        CASE11 => "01011",
        din11_WIDTH => 32,
        CASE12 => "01100",
        din12_WIDTH => 32,
        CASE13 => "01101",
        din13_WIDTH => 32,
        CASE14 => "01110",
        din14_WIDTH => 32,
        CASE15 => "01111",
        din15_WIDTH => 32,
        CASE16 => "10000",
        din16_WIDTH => 32,
        CASE17 => "10001",
        din17_WIDTH => 32,
        CASE18 => "10010",
        din18_WIDTH => 32,
        CASE19 => "10011",
        din19_WIDTH => 32,
        CASE20 => "10100",
        din20_WIDTH => 32,
        CASE21 => "10101",
        din21_WIDTH => 32,
        CASE22 => "10110",
        din22_WIDTH => 32,
        CASE23 => "10111",
        din23_WIDTH => 32,
        CASE24 => "11000",
        din24_WIDTH => 32,
        CASE25 => "11001",
        din25_WIDTH => 32,
        CASE26 => "11010",
        din26_WIDTH => 32,
        CASE27 => "11011",
        din27_WIDTH => 32,
        CASE28 => "11100",
        din28_WIDTH => 32,
        CASE29 => "11101",
        din29_WIDTH => 32,
        CASE30 => "11110",
        din30_WIDTH => 32,
        CASE31 => "11111",
        din31_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => reg_file_32_reg_2612,
        din1 => reg_file_33_reg_2618,
        din2 => reg_file_34_reg_2624,
        din3 => reg_file_35_reg_2630,
        din4 => reg_file_36_reg_2636,
        din5 => reg_file_37_reg_2642,
        din6 => reg_file_38_reg_2648,
        din7 => reg_file_39_reg_2654,
        din8 => reg_file_40_reg_2660,
        din9 => reg_file_41_reg_2666,
        din10 => reg_file_42_reg_2672,
        din11 => reg_file_43_reg_2678,
        din12 => reg_file_44_reg_2684,
        din13 => reg_file_45_reg_2690,
        din14 => reg_file_46_reg_2696,
        din15 => reg_file_47_reg_2702,
        din16 => reg_file_48_reg_2708,
        din17 => reg_file_49_reg_2714,
        din18 => reg_file_50_reg_2720,
        din19 => reg_file_51_reg_2726,
        din20 => reg_file_52_reg_2732,
        din21 => reg_file_53_reg_2738,
        din22 => reg_file_54_reg_2744,
        din23 => reg_file_55_reg_2750,
        din24 => reg_file_56_reg_2756,
        din25 => reg_file_57_reg_2762,
        din26 => reg_file_58_reg_2768,
        din27 => reg_file_59_reg_2774,
        din28 => reg_file_60_reg_2780,
        din29 => reg_file_61_reg_2786,
        din30 => reg_file_62_reg_2792,
        din31 => reg_file_63_reg_2798,
        def => rv2_fu_1291_p65,
        sel => d_i_rs2_reg_2844,
        dout => rv2_fu_1291_p67);

    sparsemux_15_6_1_1_1_U3 : component rv32i_npp_ip_sparsemux_15_6_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100000",
        din0_WIDTH => 1,
        CASE1 => "010000",
        din1_WIDTH => 1,
        CASE2 => "001000",
        din2_WIDTH => 1,
        CASE3 => "000100",
        din3_WIDTH => 1,
        CASE4 => "000010",
        din4_WIDTH => 1,
        CASE5 => "000001",
        din5_WIDTH => 1,
        CASE6 => "000000",
        din6_WIDTH => 1,
        def_WIDTH => 1,
        sel_WIDTH => 6,
        dout_WIDTH => 1)
    port map (
        din0 => result_1_fu_1534_p2,
        din1 => result_1_fu_1534_p4,
        din2 => result_1_fu_1534_p6,
        din3 => result_1_fu_1534_p8,
        din4 => result_1_fu_1534_p10,
        din5 => ap_const_lv1_0,
        din6 => result_1_fu_1534_p14,
        def => result_1_fu_1534_p15,
        sel => result_1_fu_1534_p16,
        dout => result_1_fu_1534_p17);

    sparsemux_9_3_8_1_1_U4 : component rv32i_npp_ip_sparsemux_9_3_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100",
        din0_WIDTH => 8,
        CASE1 => "010",
        din1_WIDTH => 8,
        CASE2 => "001",
        din2_WIDTH => 8,
        CASE3 => "000",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => b_fu_1971_p2,
        din1 => b_fu_1971_p4,
        din2 => b_fu_1971_p6,
        din3 => b_fu_1971_p8,
        def => b_fu_1971_p9,
        sel => b_fu_1971_p10,
        dout => b_fu_1971_p11);

    flow_control_loop_pipe_U : component rv32i_npp_ip_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage6,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_const_logic_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_result_30_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state3) and ((d_i_type_reg_478 = ap_const_lv3_0) or (d_i_type_reg_478 = ap_const_lv3_7))) or ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_0)))) then 
                ap_phi_reg_pp0_iter0_result_30_reg_543(2) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(3) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(4) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(5) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(6) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(7) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(8) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(9) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(10) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(11) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(12) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(13) <= '0';
                ap_phi_reg_pp0_iter0_result_30_reg_543(14) <= '0';
            elsif (((d_i_is_jalr_reg_2867 = ap_const_lv1_1) and (d_i_type_reg_478 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                                ap_phi_reg_pp0_iter0_result_30_reg_543(14 downto 2) <= zext_ln95_fu_1661_p1(14 downto 2);
            elsif (((d_i_type_reg_478 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                                ap_phi_reg_pp0_iter0_result_30_reg_543(14 downto 2) <= zext_ln117_fu_1420_p1(14 downto 2);
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_result_35_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ap_phi_reg_pp0_iter0_result_35_reg_600 <= result_30_reg_543;
            elsif (((d_i_is_load_reg_2859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_func3_reg_2828 = ap_const_lv3_5))) then 
                ap_phi_reg_pp0_iter0_result_35_reg_600 <= zext_ln200_fu_2015_p1;
            elsif (((d_i_is_load_reg_2859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_func3_reg_2828 = ap_const_lv3_0))) then 
                ap_phi_reg_pp0_iter0_result_35_reg_600 <= sext_ln195_fu_1995_p1;
            elsif (((d_i_is_load_reg_2859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_func3_reg_2828 = ap_const_lv3_1))) then 
                ap_phi_reg_pp0_iter0_result_35_reg_600 <= sext_ln199_fu_2011_p1;
            elsif (((d_i_is_load_reg_2859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_func3_reg_2828 = ap_const_lv3_2))) then 
                ap_phi_reg_pp0_iter0_result_35_reg_600 <= data_ram_Dout_A;
            elsif (((d_i_is_load_reg_2859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_func3_reg_2828 = ap_const_lv3_4))) then 
                ap_phi_reg_pp0_iter0_result_35_reg_600 <= zext_ln196_fu_1999_p1;
            elsif ((((d_i_is_load_reg_2859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_func3_reg_2828 = ap_const_lv3_3)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((d_i_is_load_reg_2859 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_6)) or ((d_i_is_load_reg_2859 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_7)))))) then 
                ap_phi_reg_pp0_iter0_result_35_reg_600 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    d_i_imm_5_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((d_i_type_reg_478 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                d_i_imm_5_reg_523 <= sext_ln37_fu_1139_p1;
            elsif (((d_i_type_reg_478 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                d_i_imm_5_reg_523 <= sext_ln38_fu_1125_p1;
            elsif (((d_i_type_reg_478 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                d_i_imm_5_reg_523 <= sext_ln39_fu_1104_p1;
            elsif (((d_i_type_reg_478 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                d_i_imm_5_reg_523 <= instruction_reg_2804(31 downto 12);
            elsif (((d_i_type_reg_478 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                d_i_imm_5_reg_523 <= d_i_imm_fu_1170_p5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (not((or_ln18_fu_2330_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                d_i_imm_5_reg_523 <= ap_phi_reg_pp0_iter0_d_i_imm_5_reg_523;
            end if; 
        end if;
    end process;

    d_i_type_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_0) and (opch_fu_1034_p4 = ap_const_lv2_1))) then 
                d_i_type_reg_478 <= ap_const_lv3_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_4) and (opch_fu_1034_p4 = ap_const_lv2_1))) then 
                d_i_type_reg_478 <= ap_const_lv3_1;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_5) and (opch_fu_1034_p4 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_5) and (opch_fu_1034_p4 = ap_const_lv2_0)))) then 
                d_i_type_reg_478 <= ap_const_lv3_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_0) and (opch_fu_1034_p4 = ap_const_lv2_3))) then 
                d_i_type_reg_478 <= ap_const_lv3_4;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_1) and (opch_fu_1034_p4 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_4) and (opch_fu_1034_p4 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_0) and (opch_fu_1034_p4 = ap_const_lv2_0)))) then 
                d_i_type_reg_478 <= ap_const_lv3_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (opcl_fu_1044_p4 = ap_const_lv3_3) and (opch_fu_1034_p4 = ap_const_lv2_3))) then 
                d_i_type_reg_478 <= ap_const_lv3_6;
            elsif (((not((opcl_fu_1044_p4 = ap_const_lv3_3)) and not((opcl_fu_1044_p4 = ap_const_lv3_1)) and not((opcl_fu_1044_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (opch_fu_1034_p4 = ap_const_lv2_3)) or (not((opcl_fu_1044_p4 = ap_const_lv3_4)) and not((opcl_fu_1044_p4 = ap_const_lv3_5)) and not((opcl_fu_1044_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (opch_fu_1034_p4 = ap_const_lv2_1)) or (not((opcl_fu_1044_p4 = ap_const_lv3_4)) and not((opcl_fu_1044_p4 = ap_const_lv3_5)) and not((opcl_fu_1044_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (opch_fu_1034_p4 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (opch_fu_1034_p4 = ap_const_lv2_2)))) then 
                d_i_type_reg_478 <= ap_const_lv3_7;
            elsif ((not((or_ln18_fu_2330_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                d_i_type_reg_478 <= ap_phi_reg_pp0_iter0_d_i_type_reg_478;
            end if; 
        end if;
    end process;

    nbi_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                nbi_fu_282 <= ap_const_lv32_1;
            elsif (((or_ln18_fu_2330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                nbi_fu_282 <= add_ln40_fu_2338_p2;
            end if; 
        end if;
    end process;

    pc_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pc_fu_286 <= trunc_ln43_fu_658_p1;
            elsif (((d_i_type_reg_478 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                pc_fu_286 <= select_ln136_fu_2294_p3;
            elsif (((d_i_type_reg_478 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                pc_fu_286 <= add_ln147_fu_2260_p2;
            elsif ((((d_i_type_reg_478 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((d_i_type_reg_478 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((d_i_type_reg_478 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and ((d_i_type_reg_478 = ap_const_lv3_0) or (d_i_type_reg_478 = ap_const_lv3_7))))) then 
                pc_fu_286 <= grp_fu_647_p2;
            elsif (((d_i_type_reg_478 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                pc_fu_286 <= add_ln153_fu_2227_p2;
            end if; 
        end if;
    end process;

    reg_file_10_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_10_fu_330 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_A))) then 
                reg_file_10_fu_330 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_11_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_11_fu_334 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_B))) then 
                reg_file_11_fu_334 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_12_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_12_fu_338 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_C))) then 
                reg_file_12_fu_338 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_13_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_13_fu_342 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_D))) then 
                reg_file_13_fu_342 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_14_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_14_fu_346 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_E))) then 
                reg_file_14_fu_346 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_15_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_15_fu_350 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_F))) then 
                reg_file_15_fu_350 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_16_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_16_fu_354 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_10))) then 
                reg_file_16_fu_354 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_17_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_17_fu_358 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_11))) then 
                reg_file_17_fu_358 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_18_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_18_fu_362 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_12))) then 
                reg_file_18_fu_362 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_19_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_19_fu_366 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_13))) then 
                reg_file_19_fu_366 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_1_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_1_fu_294 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_1))) then 
                reg_file_1_fu_294 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_20_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_20_fu_370 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_14))) then 
                reg_file_20_fu_370 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_21_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_21_fu_374 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_15))) then 
                reg_file_21_fu_374 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_22_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_22_fu_378 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_16))) then 
                reg_file_22_fu_378 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_23_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_23_fu_382 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_17))) then 
                reg_file_23_fu_382 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_24_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_24_fu_386 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_18))) then 
                reg_file_24_fu_386 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_25_fu_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_25_fu_390 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_19))) then 
                reg_file_25_fu_390 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_26_fu_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_26_fu_394 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_1A))) then 
                reg_file_26_fu_394 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_27_fu_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_27_fu_398 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_1B))) then 
                reg_file_27_fu_398 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_28_fu_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_28_fu_402 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_1C))) then 
                reg_file_28_fu_402 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_29_fu_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_29_fu_406 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_1D))) then 
                reg_file_29_fu_406 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_2_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_2_fu_298 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_2))) then 
                reg_file_2_fu_298 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_30_fu_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_30_fu_410 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_1E))) then 
                reg_file_30_fu_410 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_31_fu_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_31_fu_414 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_1F))) then 
                reg_file_31_fu_414 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_3_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_3_fu_302 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_3))) then 
                reg_file_3_fu_302 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_4_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_4_fu_306 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_4))) then 
                reg_file_4_fu_306 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_5_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_5_fu_310 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_5))) then 
                reg_file_5_fu_310 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_6_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_6_fu_314 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_6))) then 
                reg_file_6_fu_314 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_7_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_7_fu_318 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_7))) then 
                reg_file_7_fu_318 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_8_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_8_fu_322 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_8))) then 
                reg_file_8_fu_322 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_9_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_9_fu_326 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_9))) then 
                reg_file_9_fu_326 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    reg_file_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_file_fu_290 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = and_ln22_fu_2047_p2) and (ap_const_logic_1 = ap_CS_fsm_state6) and (d_i_rd_reg_2817 = ap_const_lv5_0))) then 
                reg_file_fu_290 <= ap_phi_reg_pp0_iter0_result_35_reg_600;
            end if; 
        end if;
    end process;

    result_30_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_pred528_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_8_reg_3015;
            elsif (((ap_predicate_pred524_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_9_reg_3010;
            elsif (((ap_predicate_pred520_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= zext_ln62_fu_1766_p1;
            elsif (((ap_predicate_pred515_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= zext_ln64_fu_1762_p1;
            elsif (((ap_predicate_pred510_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_12_reg_2995;
            elsif (((ap_predicate_pred506_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_15_reg_2990;
            elsif (((ap_predicate_pred502_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_16_reg_2985;
            elsif (((ap_predicate_pred498_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_21_reg_2970;
            elsif (((ap_predicate_pred493_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_22_reg_2965;
            elsif (((ap_predicate_pred488_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= zext_ln62_1_fu_1758_p1;
            elsif (((ap_predicate_pred482_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= zext_ln64_1_fu_1754_p1;
            elsif (((ap_predicate_pred476_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_25_reg_2950;
            elsif (((ap_predicate_pred471_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_28_reg_2945;
            elsif (((ap_predicate_pred466_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_29_reg_2940;
            elsif (((ap_predicate_pred453_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_5_reg_3020;
            elsif (((ap_predicate_pred448_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_18_reg_2975;
            elsif ((((d_i_type_reg_478 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_predicate_pred90_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                result_30_reg_543 <= reg_652;
            elsif (((d_i_type_reg_478 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= zext_ln108_fu_1750_p1;
            elsif (((d_i_type_reg_478 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_reg_543 <= result_3_reg_2930;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (not((or_ln18_fu_2330_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                result_30_reg_543 <= ap_phi_reg_pp0_iter0_result_30_reg_543;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                a01_reg_3025 <= a01_fu_1770_p1;
                a1_reg_3036 <= ap_phi_mux_result_30_phi_fu_547_p48(16 downto 2);
                msize_reg_3032 <= instruction_reg_2804(13 downto 12);
                shl_ln236_2_reg_3046 <= shl_ln236_2_fu_1836_p2;
                shl_ln236_reg_3041 <= shl_ln236_fu_1818_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    ap_predicate_pred448_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_7));
                    ap_predicate_pred453_state4 <= ((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_7));
                    ap_predicate_pred466_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_6));
                    ap_predicate_pred471_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_5));
                    ap_predicate_pred476_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_4));
                    ap_predicate_pred482_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_3));
                    ap_predicate_pred488_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_2));
                    ap_predicate_pred493_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_1));
                    ap_predicate_pred498_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_0));
                    ap_predicate_pred502_state4 <= ((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_6));
                    ap_predicate_pred506_state4 <= ((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_5));
                    ap_predicate_pred510_state4 <= ((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_4));
                    ap_predicate_pred515_state4 <= ((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_3));
                    ap_predicate_pred520_state4 <= ((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_2));
                    ap_predicate_pred524_state4 <= ((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_1));
                    ap_predicate_pred528_state4 <= ((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_0));
                    ap_predicate_pred90_state4 <= ((d_i_is_load_reg_2859 = ap_const_lv1_1) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2));
                result_10_reg_3005 <= grp_fu_629_p2;
                result_11_reg_3000 <= grp_fu_625_p2;
                result_12_reg_2995 <= result_12_fu_1704_p2;
                result_15_reg_2990 <= result_15_fu_1697_p3;
                result_16_reg_2985 <= result_16_fu_1675_p2;
                result_18_reg_2975 <= result_18_fu_1655_p2;
                result_1_reg_2935 <= result_1_fu_1534_p17;
                result_21_reg_2970 <= result_21_fu_1647_p3;
                result_22_reg_2965 <= result_22_fu_1631_p2;
                result_23_reg_2960 <= result_23_fu_1621_p2;
                result_24_reg_2955 <= result_24_fu_1615_p2;
                result_25_reg_2950 <= result_25_fu_1609_p2;
                result_28_reg_2945 <= result_28_fu_1602_p3;
                result_29_reg_2940 <= result_29_fu_1580_p2;
                    result_3_reg_2930(31 downto 2) <= result_3_fu_1434_p3(31 downto 2);
                result_5_reg_3020 <= result_5_fu_1744_p2;
                result_8_reg_3015 <= result_8_fu_1736_p3;
                result_9_reg_3010 <= result_9_fu_1714_p2;
                rv2_reg_2918 <= rv2_fu_1291_p67;
                trunc_ln251_reg_2913 <= trunc_ln251_fu_1287_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                d_i_func3_reg_2828 <= code_ram_Dout_A(14 downto 12);
                d_i_is_jalr_reg_2867 <= d_i_is_jalr_fu_1016_p2;
                d_i_is_load_reg_2859 <= d_i_is_load_fu_1004_p2;
                d_i_is_lui_reg_2872 <= d_i_is_lui_fu_1022_p2;
                d_i_is_op_imm_reg_2877 <= d_i_is_op_imm_fu_1028_p2;
                d_i_is_r_type_reg_2889 <= d_i_is_r_type_fu_1054_p2;
                d_i_is_store_reg_2863 <= d_i_is_store_fu_1010_p2;
                d_i_rd_reg_2817 <= code_ram_Dout_A(11 downto 7);
                d_i_rs1_reg_2839 <= code_ram_Dout_A(19 downto 15);
                d_i_rs2_reg_2844 <= code_ram_Dout_A(24 downto 20);
                d_imm_inst_11_8_reg_2903 <= code_ram_Dout_A(11 downto 8);
                d_imm_inst_19_12_reg_2823 <= code_ram_Dout_A(19 downto 12);
                d_imm_inst_31_reg_2897 <= code_ram_Dout_A(31 downto 31);
                d_imm_inst_7_reg_2908 <= code_ram_Dout_A(7 downto 7);
                f7_6_reg_2851 <= code_ram_Dout_A(30 downto 30);
                instruction_reg_2804 <= code_ram_Dout_A;
                reg_file_32_reg_2612 <= reg_file_fu_290;
                reg_file_33_reg_2618 <= reg_file_1_fu_294;
                reg_file_34_reg_2624 <= reg_file_2_fu_298;
                reg_file_35_reg_2630 <= reg_file_3_fu_302;
                reg_file_36_reg_2636 <= reg_file_4_fu_306;
                reg_file_37_reg_2642 <= reg_file_5_fu_310;
                reg_file_38_reg_2648 <= reg_file_6_fu_314;
                reg_file_39_reg_2654 <= reg_file_7_fu_318;
                reg_file_40_reg_2660 <= reg_file_8_fu_322;
                reg_file_41_reg_2666 <= reg_file_9_fu_326;
                reg_file_42_reg_2672 <= reg_file_10_fu_330;
                reg_file_43_reg_2678 <= reg_file_11_fu_334;
                reg_file_44_reg_2684 <= reg_file_12_fu_338;
                reg_file_45_reg_2690 <= reg_file_13_fu_342;
                reg_file_46_reg_2696 <= reg_file_14_fu_346;
                reg_file_47_reg_2702 <= reg_file_15_fu_350;
                reg_file_48_reg_2708 <= reg_file_16_fu_354;
                reg_file_49_reg_2714 <= reg_file_17_fu_358;
                reg_file_50_reg_2720 <= reg_file_18_fu_362;
                reg_file_51_reg_2726 <= reg_file_19_fu_366;
                reg_file_52_reg_2732 <= reg_file_20_fu_370;
                reg_file_53_reg_2738 <= reg_file_21_fu_374;
                reg_file_54_reg_2744 <= reg_file_22_fu_378;
                reg_file_55_reg_2750 <= reg_file_23_fu_382;
                reg_file_56_reg_2756 <= reg_file_24_fu_386;
                reg_file_57_reg_2762 <= reg_file_25_fu_390;
                reg_file_58_reg_2768 <= reg_file_26_fu_394;
                reg_file_59_reg_2774 <= reg_file_27_fu_398;
                reg_file_60_reg_2780 <= reg_file_28_fu_402;
                reg_file_61_reg_2786 <= reg_file_29_fu_406;
                reg_file_62_reg_2792 <= reg_file_30_fu_410;
                reg_file_63_reg_2798 <= reg_file_31_fu_414;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln18_reg_3084 <= icmp_ln18_fu_2316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                pc_1_reg_2599 <= ap_sig_allocacmp_pc_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((d_i_is_load_reg_2859 = ap_const_lv1_1) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((d_i_type_reg_478 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then
                reg_652 <= grp_fu_633_p2;
            end if;
        end if;
    end process;
    result_3_reg_2930(1 downto 0) <= "00";
    ap_phi_reg_pp0_iter0_result_30_reg_543(1 downto 0) <= "00";
    ap_phi_reg_pp0_iter0_result_30_reg_543(31 downto 15) <= "00000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, ap_block_state1_pp0_stage0_iter0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    a01_fu_1770_p1 <= ap_phi_mux_result_30_phi_fu_547_p48(2 - 1 downto 0);
    a1_1_fu_1890_p3 <= result_30_reg_543(1 downto 1);
    add_ln138_fu_2279_p2 <= std_logic_vector(unsigned(trunc_ln251_reg_2913) + unsigned(trunc_ln138_fu_2275_p1));
    add_ln147_fu_2260_p2 <= std_logic_vector(unsigned(conv25_i110_i_i_pn_fu_2252_p3) + unsigned(pc_1_reg_2599));
    add_ln153_fu_2227_p2 <= std_logic_vector(unsigned(trunc_ln6_fu_2217_p4) + unsigned(pc_1_reg_2599));
    add_ln40_fu_2338_p2 <= std_logic_vector(unsigned(nbi_fu_282) + unsigned(ap_const_lv32_1));
    and_ln22_fu_2047_p2 <= (icmp_ln22_fu_2019_p2 and icmp_ln22_1_fu_2041_p2);
    and_ln55_1_fu_1637_p2 <= (f7_6_reg_2851 and d_i_is_r_type_reg_2889);
    and_ln55_fu_1720_p2 <= (f7_6_reg_2851 and d_i_is_r_type_reg_2889);
    and_ln_fu_1806_p3 <= (tmp_fu_1798_p3 & ap_const_lv1_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage6_assign_proc : process(ap_CS_fsm_state7, or_ln18_fu_2330_p2)
    begin
        if (((or_ln18_fu_2330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_state7, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage6;

    ap_phi_mux_d_i_imm_5_phi_fu_527_p12_assign_proc : process(d_i_type_reg_478, instruction_reg_2804, d_i_imm_fu_1170_p5, sext_ln39_fu_1104_p1, sext_ln38_fu_1125_p1, sext_ln37_fu_1139_p1)
    begin
        if ((d_i_type_reg_478 = ap_const_lv3_2)) then 
            ap_phi_mux_d_i_imm_5_phi_fu_527_p12 <= sext_ln37_fu_1139_p1;
        elsif ((d_i_type_reg_478 = ap_const_lv3_3)) then 
            ap_phi_mux_d_i_imm_5_phi_fu_527_p12 <= sext_ln38_fu_1125_p1;
        elsif ((d_i_type_reg_478 = ap_const_lv3_4)) then 
            ap_phi_mux_d_i_imm_5_phi_fu_527_p12 <= sext_ln39_fu_1104_p1;
        elsif ((d_i_type_reg_478 = ap_const_lv3_5)) then 
            ap_phi_mux_d_i_imm_5_phi_fu_527_p12 <= instruction_reg_2804(31 downto 12);
        elsif ((d_i_type_reg_478 = ap_const_lv3_6)) then 
            ap_phi_mux_d_i_imm_5_phi_fu_527_p12 <= d_i_imm_fu_1170_p5;
        else 
            ap_phi_mux_d_i_imm_5_phi_fu_527_p12 <= ap_const_lv20_0;
        end if; 
    end process;


    ap_phi_mux_d_i_type_phi_fu_481_p26_assign_proc : process(opch_fu_1034_p4, opcl_fu_1044_p4, ap_phi_reg_pp0_iter0_d_i_type_reg_478)
    begin
        if (((opcl_fu_1044_p4 = ap_const_lv3_0) and (opch_fu_1034_p4 = ap_const_lv2_1))) then 
            ap_phi_mux_d_i_type_phi_fu_481_p26 <= ap_const_lv3_3;
        elsif (((opcl_fu_1044_p4 = ap_const_lv3_4) and (opch_fu_1034_p4 = ap_const_lv2_1))) then 
            ap_phi_mux_d_i_type_phi_fu_481_p26 <= ap_const_lv3_1;
        elsif ((((opcl_fu_1044_p4 = ap_const_lv3_5) and (opch_fu_1034_p4 = ap_const_lv2_1)) or ((opcl_fu_1044_p4 = ap_const_lv3_5) and (opch_fu_1034_p4 = ap_const_lv2_0)))) then 
            ap_phi_mux_d_i_type_phi_fu_481_p26 <= ap_const_lv3_5;
        elsif (((opcl_fu_1044_p4 = ap_const_lv3_0) and (opch_fu_1034_p4 = ap_const_lv2_3))) then 
            ap_phi_mux_d_i_type_phi_fu_481_p26 <= ap_const_lv3_4;
        elsif ((((opcl_fu_1044_p4 = ap_const_lv3_1) and (opch_fu_1034_p4 = ap_const_lv2_3)) or ((opcl_fu_1044_p4 = ap_const_lv3_4) and (opch_fu_1034_p4 = ap_const_lv2_0)) or ((opcl_fu_1044_p4 = ap_const_lv3_0) and (opch_fu_1034_p4 = ap_const_lv2_0)))) then 
            ap_phi_mux_d_i_type_phi_fu_481_p26 <= ap_const_lv3_2;
        elsif (((opcl_fu_1044_p4 = ap_const_lv3_3) and (opch_fu_1034_p4 = ap_const_lv2_3))) then 
            ap_phi_mux_d_i_type_phi_fu_481_p26 <= ap_const_lv3_6;
        elsif (((opch_fu_1034_p4 = ap_const_lv2_2) or (not((opcl_fu_1044_p4 = ap_const_lv3_3)) and not((opcl_fu_1044_p4 = ap_const_lv3_1)) and not((opcl_fu_1044_p4 = ap_const_lv3_0)) and (opch_fu_1034_p4 = ap_const_lv2_3)) or (not((opcl_fu_1044_p4 = ap_const_lv3_4)) and not((opcl_fu_1044_p4 = ap_const_lv3_5)) and not((opcl_fu_1044_p4 = ap_const_lv3_0)) and (opch_fu_1034_p4 = ap_const_lv2_1)) or (not((opcl_fu_1044_p4 = ap_const_lv3_4)) and not((opcl_fu_1044_p4 = ap_const_lv3_5)) and not((opcl_fu_1044_p4 = ap_const_lv3_0)) and (opch_fu_1034_p4 = ap_const_lv2_0)))) then 
            ap_phi_mux_d_i_type_phi_fu_481_p26 <= ap_const_lv3_7;
        else 
            ap_phi_mux_d_i_type_phi_fu_481_p26 <= ap_phi_reg_pp0_iter0_d_i_type_reg_478;
        end if; 
    end process;


    ap_phi_mux_result_30_phi_fu_547_p48_assign_proc : process(d_i_type_reg_478, reg_652, d_i_is_jalr_reg_2867, d_i_is_load_reg_2859, d_i_func3_reg_2828, d_i_is_op_imm_reg_2877, result_3_reg_2930, result_29_reg_2940, result_28_reg_2945, result_25_reg_2950, result_22_reg_2965, result_21_reg_2970, result_18_reg_2975, result_16_reg_2985, result_15_reg_2990, result_12_reg_2995, result_9_reg_3010, result_8_reg_3015, result_5_reg_3020, ap_phi_reg_pp0_iter0_result_30_reg_543, zext_ln108_fu_1750_p1, zext_ln64_1_fu_1754_p1, zext_ln62_1_fu_1758_p1, zext_ln64_fu_1762_p1, zext_ln62_fu_1766_p1)
    begin
        if (((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_0))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_8_reg_3015;
        elsif (((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_1))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_9_reg_3010;
        elsif (((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_2))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= zext_ln62_fu_1766_p1;
        elsif (((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_3))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= zext_ln64_fu_1762_p1;
        elsif (((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_4))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_12_reg_2995;
        elsif (((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_5))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_15_reg_2990;
        elsif (((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_6))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_16_reg_2985;
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_0))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_21_reg_2970;
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_1))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_22_reg_2965;
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_2))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= zext_ln62_1_fu_1758_p1;
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_3))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= zext_ln64_1_fu_1754_p1;
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_4))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_25_reg_2950;
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_5))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_28_reg_2945;
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_6))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_29_reg_2940;
        elsif (((d_i_type_reg_478 = ap_const_lv3_1) and (d_i_func3_reg_2828 = ap_const_lv3_7))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_5_reg_3020;
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_0) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2877 = ap_const_lv1_1) and (d_i_func3_reg_2828 = ap_const_lv3_7))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_18_reg_2975;
        elsif (((d_i_type_reg_478 = ap_const_lv3_3) or ((d_i_is_load_reg_2859 = ap_const_lv1_1) and (d_i_is_jalr_reg_2867 = ap_const_lv1_0) and (d_i_type_reg_478 = ap_const_lv3_2)))) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= reg_652;
        elsif ((d_i_type_reg_478 = ap_const_lv3_4)) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= zext_ln108_fu_1750_p1;
        elsif ((d_i_type_reg_478 = ap_const_lv3_5)) then 
            ap_phi_mux_result_30_phi_fu_547_p48 <= result_3_reg_2930;
        else 
            ap_phi_mux_result_30_phi_fu_547_p48 <= ap_phi_reg_pp0_iter0_result_30_reg_543;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_d_i_imm_5_reg_523 <= ap_const_lv20_0;
    ap_phi_reg_pp0_iter0_d_i_type_reg_478 <= "XXX";
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_pc_1_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, pc_fu_286, trunc_ln43_fu_658_p1)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_pc_1 <= trunc_ln43_fu_658_p1;
        else 
            ap_sig_allocacmp_pc_1 <= pc_fu_286;
        end if; 
    end process;

    b_fu_1971_p10 <= ((icmp_ln188_fu_1946_p2 & icmp_ln188_1_fu_1951_p2) & icmp_ln188_2_fu_1956_p2);
    b_fu_1971_p2 <= data_ram_Dout_A(23 downto 16);
    b_fu_1971_p4 <= data_ram_Dout_A(15 downto 8);
    b_fu_1971_p6 <= data_ram_Dout_A(8 - 1 downto 0);
    b_fu_1971_p8 <= data_ram_Dout_A(31 downto 24);
    b_fu_1971_p9 <= "XXXXXXXX";
    code_ram_Addr_A <= std_logic_vector(shift_left(unsigned(code_ram_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    code_ram_Addr_A_orig <= zext_ln12_fu_835_p1(32 - 1 downto 0);
    code_ram_Clk_A <= ap_clk;
    code_ram_Din_A <= ap_const_lv32_0;
    code_ram_EN_A <= code_ram_EN_A_local;

    code_ram_EN_A_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            code_ram_EN_A_local <= ap_const_logic_1;
        else 
            code_ram_EN_A_local <= ap_const_logic_0;
        end if; 
    end process;

    code_ram_Rst_A <= ap_rst_n_inv;
    code_ram_WEN_A <= ap_const_lv4_0;
    cond_fu_2213_p1 <= ap_phi_reg_pp0_iter0_result_35_reg_600(1 - 1 downto 0);
    conv25_i110_i_i_pn_fu_2252_p3 <= 
        trunc_ln5_fu_2242_p4 when (cond_fu_2213_p1(0) = '1') else 
        ap_const_lv15_1;
    d_i_imm_2_fu_1130_p4 <= instruction_reg_2804(31 downto 20);
    d_i_imm_3_fu_1118_p3 <= (tmp_2_fu_1109_p4 & d_i_rd_reg_2817);
    d_i_imm_4_fu_1095_p5 <= (((d_imm_inst_31_reg_2897 & d_imm_inst_7_reg_2908) & tmp_4_fu_1086_p4) & d_imm_inst_11_8_reg_2903);
    d_i_imm_fu_1170_p5 <= (((d_imm_inst_31_reg_2897 & d_imm_inst_19_12_reg_2823) & tmp_6_fu_1154_p3) & tmp_1_fu_1161_p4);
    d_i_is_jalr_fu_1016_p2 <= "1" when (d_i_opcode_fu_936_p4 = ap_const_lv5_19) else "0";
    d_i_is_load_fu_1004_p2 <= "1" when (d_i_opcode_fu_936_p4 = ap_const_lv5_0) else "0";
    d_i_is_lui_fu_1022_p2 <= "1" when (d_i_opcode_fu_936_p4 = ap_const_lv5_D) else "0";
    d_i_is_op_imm_fu_1028_p2 <= "1" when (d_i_opcode_fu_936_p4 = ap_const_lv5_4) else "0";
    d_i_is_r_type_fu_1054_p2 <= "1" when (ap_phi_mux_d_i_type_phi_fu_481_p26 = ap_const_lv3_1) else "0";
    d_i_is_store_fu_1010_p2 <= "1" when (d_i_opcode_fu_936_p4 = ap_const_lv5_8) else "0";
    d_i_opcode_fu_936_p4 <= code_ram_Dout_A(6 downto 2);
    data_ram_Addr_A <= std_logic_vector(shift_left(unsigned(data_ram_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    data_ram_Addr_A_orig_assign_proc : process(d_i_is_load_reg_2859, d_i_is_store_reg_2863, ap_CS_fsm_state4, msize_fu_1774_p4, msize_reg_3032, ap_CS_fsm_state5, zext_ln239_fu_1789_p1, zext_ln233_3_fu_1876_p1, zext_ln175_fu_1881_p1, zext_ln236_3_fu_1886_p1)
    begin
        if (((msize_reg_3032 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_is_store_reg_2863 = ap_const_lv1_1))) then 
            data_ram_Addr_A_orig <= zext_ln236_3_fu_1886_p1(32 - 1 downto 0);
        elsif (((d_i_is_load_reg_2859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            data_ram_Addr_A_orig <= zext_ln175_fu_1881_p1(32 - 1 downto 0);
        elsif (((msize_fu_1774_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_reg_2863 = ap_const_lv1_1))) then 
            data_ram_Addr_A_orig <= zext_ln233_3_fu_1876_p1(32 - 1 downto 0);
        elsif (((msize_fu_1774_p4 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_reg_2863 = ap_const_lv1_1))) then 
            data_ram_Addr_A_orig <= zext_ln239_fu_1789_p1(32 - 1 downto 0);
        else 
            data_ram_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    data_ram_Clk_A <= ap_clk;
    data_ram_Din_A <= data_ram_Din_A_local;

    data_ram_Din_A_local_assign_proc : process(d_i_is_store_reg_2863, rv2_reg_2918, ap_CS_fsm_state4, msize_fu_1774_p4, msize_reg_3032, shl_ln236_2_reg_3046, ap_CS_fsm_state5, shl_ln233_2_fu_1869_p2)
    begin
        if ((d_i_is_store_reg_2863 = ap_const_lv1_1)) then
            if (((msize_reg_3032 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                data_ram_Din_A_local <= shl_ln236_2_reg_3046;
            elsif (((msize_fu_1774_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                data_ram_Din_A_local <= shl_ln233_2_fu_1869_p2;
            elsif (((msize_fu_1774_p4 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                data_ram_Din_A_local <= rv2_reg_2918;
            else 
                data_ram_Din_A_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            data_ram_Din_A_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    data_ram_EN_A <= data_ram_EN_A_local;

    data_ram_EN_A_local_assign_proc : process(d_i_is_load_reg_2859, d_i_is_store_reg_2863, ap_CS_fsm_state4, msize_fu_1774_p4, msize_reg_3032, ap_CS_fsm_state5)
    begin
        if ((((d_i_is_load_reg_2859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((msize_reg_3032 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (d_i_is_store_reg_2863 = ap_const_lv1_1)) or ((msize_fu_1774_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_reg_2863 = ap_const_lv1_1)) or ((msize_fu_1774_p4 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_store_reg_2863 = ap_const_lv1_1)))) then 
            data_ram_EN_A_local <= ap_const_logic_1;
        else 
            data_ram_EN_A_local <= ap_const_logic_0;
        end if; 
    end process;

    data_ram_Rst_A <= ap_rst_n_inv;
    data_ram_WEN_A <= data_ram_WEN_A_local;

    data_ram_WEN_A_local_assign_proc : process(d_i_is_store_reg_2863, ap_CS_fsm_state4, msize_fu_1774_p4, msize_reg_3032, shl_ln236_reg_3041, ap_CS_fsm_state5, shl_ln233_fu_1850_p2)
    begin
        if ((d_i_is_store_reg_2863 = ap_const_lv1_1)) then
            if (((msize_reg_3032 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                data_ram_WEN_A_local <= shl_ln236_reg_3041;
            elsif (((msize_fu_1774_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                data_ram_WEN_A_local <= shl_ln233_fu_1850_p2;
            elsif (((msize_fu_1774_p4 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                data_ram_WEN_A_local <= ap_const_lv4_F;
            else 
                data_ram_WEN_A_local <= ap_const_lv4_0;
            end if;
        else 
            data_ram_WEN_A_local <= ap_const_lv4_0;
        end if; 
    end process;

    grp_fu_625_p2 <= "1" when (unsigned(rv1_fu_1181_p67) < unsigned(rv2_fu_1291_p67)) else "0";
    grp_fu_629_p2 <= "1" when (signed(rv1_fu_1181_p67) < signed(rv2_fu_1291_p67)) else "0";
    grp_fu_633_p2 <= std_logic_vector(unsigned(rv1_fu_1181_p67) + unsigned(sext_ln85_fu_1396_p1));
    grp_fu_637_p4 <= ap_phi_mux_result_30_phi_fu_547_p48(16 downto 2);
    grp_fu_647_p2 <= std_logic_vector(unsigned(pc_1_reg_2599) + unsigned(ap_const_lv15_1));
    h0_fu_1912_p1 <= data_ram_Dout_A(16 - 1 downto 0);
    h1_fu_1936_p4 <= data_ram_Dout_A(31 downto 16);
    h_fu_2003_p3 <= 
        h1_fu_1936_p4 when (a1_1_fu_1890_p3(0) = '1') else 
        h0_fu_1912_p1;
    icmp_ln188_1_fu_1951_p2 <= "1" when (a01_reg_3025 = ap_const_lv2_1) else "0";
    icmp_ln188_2_fu_1956_p2 <= "1" when (a01_reg_3025 = ap_const_lv2_0) else "0";
    icmp_ln188_fu_1946_p2 <= "1" when (a01_reg_3025 = ap_const_lv2_2) else "0";
    icmp_ln18_1_fu_2324_p2 <= "0" when (pc_fu_286 = ap_const_lv15_0) else "1";
    icmp_ln18_fu_2316_p2 <= "0" when (instruction_reg_2804 = ap_const_lv32_8067) else "1";
    icmp_ln22_1_fu_2041_p2 <= "0" when (or_ln_fu_2033_p3 = ap_const_lv5_18) else "1";
    icmp_ln22_fu_2019_p2 <= "0" when (d_i_rd_reg_2817 = ap_const_lv5_0) else "1";
    icmp_ln31_1_fu_1482_p2 <= "1" when (d_i_func3_reg_2828 = ap_const_lv3_5) else "0";
    icmp_ln31_2_fu_1487_p2 <= "1" when (d_i_func3_reg_2828 = ap_const_lv3_4) else "0";
    icmp_ln31_3_fu_1492_p2 <= "1" when (d_i_func3_reg_2828 = ap_const_lv3_1) else "0";
    icmp_ln31_4_fu_1497_p2 <= "1" when (d_i_func3_reg_2828 = ap_const_lv3_0) else "0";
    icmp_ln31_5_fu_1502_p2 <= "1" when (d_i_func3_reg_2828 = ap_const_lv3_2) else "0";
    icmp_ln31_6_fu_1507_p2 <= "1" when (d_i_func3_reg_2828 = ap_const_lv3_3) else "0";
    icmp_ln31_fu_1477_p2 <= "1" when (d_i_func3_reg_2828 = ap_const_lv3_6) else "0";
    icmp_ln37_fu_1459_p2 <= "1" when (signed(rv1_fu_1181_p67) < signed(rv2_fu_1291_p67)) else "0";
    imm12_fu_1401_p3 <= (ap_phi_mux_d_i_imm_5_phi_fu_527_p12 & ap_const_lv12_0);
    msize_fu_1774_p4 <= instruction_reg_2804(13 downto 12);

    nb_instruction_ap_vld_assign_proc : process(ap_CS_fsm_state7, or_ln18_fu_2330_p2, ap_loop_exit_ready)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (or_ln18_fu_2330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            nb_instruction_ap_vld <= ap_const_logic_1;
        else 
            nb_instruction_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    npc4_fu_1414_p2 <= std_logic_vector(unsigned(pc4_fu_1409_p2) + unsigned(ap_const_lv15_4));
    opch_fu_1034_p4 <= code_ram_Dout_A(6 downto 5);
    opcl_fu_1044_p4 <= code_ram_Dout_A(4 downto 2);
    or_ln18_fu_2330_p2 <= (icmp_ln18_reg_3084 or icmp_ln18_1_fu_2324_p2);
    or_ln31_fu_1512_p2 <= (icmp_ln31_6_fu_1507_p2 or icmp_ln31_5_fu_1502_p2);
    or_ln_fu_2033_p3 <= (ap_const_lv1_1 & tmp_8_fu_2024_p4);
    pc4_fu_1409_p2 <= std_logic_vector(shift_left(unsigned(pc_1_reg_2599),to_integer(unsigned('0' & ap_const_lv15_2(15-1 downto 0)))));
    result_12_fu_1704_p2 <= (rv2_fu_1291_p67 xor rv1_fu_1181_p67);
    result_13_fu_1685_p2 <= std_logic_vector(shift_right(signed(rv1_fu_1181_p67),to_integer(unsigned('0' & zext_ln69_fu_1681_p1(31-1 downto 0)))));
    result_14_fu_1691_p2 <= std_logic_vector(shift_right(unsigned(rv1_fu_1181_p67),to_integer(unsigned('0' & zext_ln69_fu_1681_p1(31-1 downto 0)))));
    result_15_fu_1697_p3 <= 
        result_13_fu_1685_p2 when (f7_6_reg_2851(0) = '1') else 
        result_14_fu_1691_p2;
    result_16_fu_1675_p2 <= (rv2_fu_1291_p67 or rv1_fu_1181_p67);
    result_18_fu_1655_p2 <= (sext_ln85_fu_1396_p1 and rv1_fu_1181_p67);
    result_19_fu_1641_p2 <= std_logic_vector(unsigned(rv1_fu_1181_p67) - unsigned(sext_ln85_fu_1396_p1));
    result_1_fu_1534_p10 <= "1" when (rv1_fu_1181_p67 = rv2_fu_1291_p67) else "0";
    result_1_fu_1534_p14 <= (grp_fu_625_p2 xor ap_const_lv1_1);
    result_1_fu_1534_p15 <= "X";
    result_1_fu_1534_p16 <= (((((icmp_ln31_fu_1477_p2 & icmp_ln31_1_fu_1482_p2) & icmp_ln31_2_fu_1487_p2) & icmp_ln31_3_fu_1492_p2) & icmp_ln31_4_fu_1497_p2) & or_ln31_fu_1512_p2);
    result_1_fu_1534_p2 <= "1" when (unsigned(rv1_fu_1181_p67) < unsigned(rv2_fu_1291_p67)) else "0";
    result_1_fu_1534_p4 <= (icmp_ln37_fu_1459_p2 xor ap_const_lv1_1);
    result_1_fu_1534_p6 <= "1" when (signed(rv1_fu_1181_p67) < signed(rv2_fu_1291_p67)) else "0";
    result_1_fu_1534_p8 <= "0" when (rv1_fu_1181_p67 = rv2_fu_1291_p67) else "1";
    result_21_fu_1647_p3 <= 
        result_19_fu_1641_p2 when (and_ln55_1_fu_1637_p2(0) = '1') else 
        grp_fu_633_p2;
    result_22_fu_1631_p2 <= std_logic_vector(shift_left(unsigned(rv1_fu_1181_p67),to_integer(unsigned('0' & zext_ln60_1_fu_1627_p1(31-1 downto 0)))));
    result_23_fu_1621_p2 <= "1" when (signed(rv1_fu_1181_p67) < signed(sext_ln85_fu_1396_p1)) else "0";
    result_24_fu_1615_p2 <= "1" when (unsigned(rv1_fu_1181_p67) < unsigned(sext_ln85_fu_1396_p1)) else "0";
    result_25_fu_1609_p2 <= (sext_ln85_fu_1396_p1 xor rv1_fu_1181_p67);
    result_26_fu_1590_p2 <= std_logic_vector(shift_right(signed(rv1_fu_1181_p67),to_integer(unsigned('0' & zext_ln69_1_fu_1586_p1(31-1 downto 0)))));
    result_27_fu_1596_p2 <= std_logic_vector(shift_right(unsigned(rv1_fu_1181_p67),to_integer(unsigned('0' & zext_ln69_1_fu_1586_p1(31-1 downto 0)))));
    result_28_fu_1602_p3 <= 
        result_26_fu_1590_p2 when (f7_6_reg_2851(0) = '1') else 
        result_27_fu_1596_p2;
    result_29_fu_1580_p2 <= (sext_ln85_fu_1396_p1 or rv1_fu_1181_p67);
    result_2_fu_1428_p2 <= std_logic_vector(unsigned(imm12_fu_1401_p3) + unsigned(zext_ln114_fu_1424_p1));
    result_3_fu_1434_p3 <= 
        imm12_fu_1401_p3 when (d_i_is_lui_reg_2872(0) = '1') else 
        result_2_fu_1428_p2;
    result_5_fu_1744_p2 <= (rv2_fu_1291_p67 and rv1_fu_1181_p67);
    result_6_fu_1724_p2 <= std_logic_vector(unsigned(rv1_fu_1181_p67) - unsigned(rv2_fu_1291_p67));
    result_7_fu_1730_p2 <= std_logic_vector(unsigned(rv2_fu_1291_p67) + unsigned(rv1_fu_1181_p67));
    result_8_fu_1736_p3 <= 
        result_6_fu_1724_p2 when (and_ln55_fu_1720_p2(0) = '1') else 
        result_7_fu_1730_p2;
    result_9_fu_1714_p2 <= std_logic_vector(shift_left(unsigned(rv1_fu_1181_p67),to_integer(unsigned('0' & zext_ln60_fu_1710_p1(31-1 downto 0)))));
    rv1_fu_1181_p65 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    rv2_01_fu_1786_p1 <= rv2_reg_2918(16 - 1 downto 0);
    rv2_0_fu_1783_p1 <= rv2_reg_2918(8 - 1 downto 0);
    rv2_fu_1291_p65 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    select_ln136_fu_2294_p3 <= 
        trunc_ln4_fu_2284_p4 when (d_i_is_jalr_reg_2867(0) = '1') else 
        grp_fu_647_p2;
        sext_ln195_fu_1995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_fu_1971_p11),32));

        sext_ln199_fu_2011_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_fu_2003_p3),32));

        sext_ln37_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_imm_2_fu_1130_p4),20));

        sext_ln38_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_imm_3_fu_1118_p3),20));

        sext_ln39_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_imm_4_fu_1095_p5),20));

        sext_ln85_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_d_i_imm_5_phi_fu_527_p12),32));

    shift_1_fu_1669_p3 <= 
        shift_fu_1665_p1 when (d_i_is_r_type_reg_2889(0) = '1') else 
        d_i_rs2_reg_2844;
    shift_2_fu_1570_p1 <= ap_phi_mux_d_i_imm_5_phi_fu_527_p12(5 - 1 downto 0);
    shift_3_fu_1574_p3 <= 
        shift_2_fu_1570_p1 when (d_i_is_r_type_reg_2889(0) = '1') else 
        d_i_rs2_reg_2844;
    shift_fu_1665_p1 <= rv2_fu_1291_p67(5 - 1 downto 0);
    shl_ln233_1_fu_1857_p3 <= (a01_fu_1770_p1 & ap_const_lv3_0);
    shl_ln233_2_fu_1869_p2 <= std_logic_vector(shift_left(unsigned(zext_ln233_fu_1842_p1),to_integer(unsigned('0' & zext_ln233_2_fu_1865_p1(31-1 downto 0)))));
    shl_ln233_fu_1850_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln233_1_fu_1846_p1(4-1 downto 0)))));
    shl_ln236_1_fu_1824_p3 <= (tmp_fu_1798_p3 & ap_const_lv4_0);
    shl_ln236_2_fu_1836_p2 <= std_logic_vector(shift_left(unsigned(zext_ln236_fu_1794_p1),to_integer(unsigned('0' & zext_ln236_2_fu_1832_p1(31-1 downto 0)))));
    shl_ln236_fu_1818_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln236_1_fu_1814_p1(4-1 downto 0)))));
    tmp_1_fu_1161_p4 <= instruction_reg_2804(30 downto 21);
    tmp_2_fu_1109_p4 <= instruction_reg_2804(31 downto 25);
    tmp_4_fu_1086_p4 <= instruction_reg_2804(30 downto 25);
    tmp_6_fu_1154_p3 <= instruction_reg_2804(20 downto 20);
    tmp_8_fu_2024_p4 <= instruction_reg_2804(5 downto 2);
    tmp_fu_1798_p3 <= ap_phi_mux_result_30_phi_fu_547_p48(1 downto 1);
    trunc_ln138_fu_2275_p1 <= d_i_imm_5_reg_523(17 - 1 downto 0);
    trunc_ln251_fu_1287_p1 <= rv1_fu_1181_p67(17 - 1 downto 0);
    trunc_ln43_fu_658_p1 <= start_pc(15 - 1 downto 0);
    trunc_ln4_fu_2284_p4 <= add_ln138_fu_2279_p2(16 downto 2);
    trunc_ln5_fu_2242_p4 <= d_i_imm_5_reg_523(15 downto 1);
    trunc_ln6_fu_2217_p4 <= d_i_imm_5_reg_523(15 downto 1);
    zext_ln108_fu_1750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_1_reg_2935),32));
    zext_ln114_fu_1424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pc4_fu_1409_p2),32));
    zext_ln117_fu_1420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_1414_p2),32));
    zext_ln12_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_pc_1),64));
    zext_ln175_fu_1881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_637_p4),64));
    zext_ln196_fu_1999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_fu_1971_p11),32));
    zext_ln200_fu_2015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fu_2003_p3),32));
    zext_ln233_1_fu_1846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a01_fu_1770_p1),4));
    zext_ln233_2_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln233_1_fu_1857_p3),32));
    zext_ln233_3_fu_1876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_637_p4),64));
    zext_ln233_fu_1842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_0_fu_1783_p1),32));
    zext_ln236_1_fu_1814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_1806_p3),4));
    zext_ln236_2_fu_1832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln236_1_fu_1824_p3),32));
    zext_ln236_3_fu_1886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a1_reg_3036),64));
    zext_ln236_fu_1794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_01_fu_1786_p1),32));
    zext_ln239_fu_1789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_637_p4),64));
    zext_ln60_1_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_3_fu_1574_p3),32));
    zext_ln60_fu_1710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_1_fu_1669_p3),32));
    zext_ln62_1_fu_1758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_23_reg_2960),32));
    zext_ln62_fu_1766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_10_reg_3005),32));
    zext_ln64_1_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_24_reg_2955),32));
    zext_ln64_fu_1762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_11_reg_3000),32));
    zext_ln69_1_fu_1586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_3_fu_1574_p3),32));
    zext_ln69_fu_1681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_1_fu_1669_p3),32));
    zext_ln95_fu_1661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_1414_p2),32));
end behav;
