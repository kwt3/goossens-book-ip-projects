-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fetching_decoding_ip_execute is
port (
    ap_ready : OUT STD_LOGIC;
    pc : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_type : IN STD_LOGIC_VECTOR (2 downto 0);
    d_i_imm : IN STD_LOGIC_VECTOR (16 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of fetching_decoding_ip_execute is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal icmp_ln7_5_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_4_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_3_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_2_fu_72_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_1_fu_66_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_50_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln7_fu_60_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_1_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_2_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_fu_108_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln7_3_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_1_fu_128_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln7_2_fu_136_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(select_ln7_2_fu_136_p3) + unsigned(pc));
    icmp_ln7_1_fu_66_p2 <= "1" when (d_i_type = ap_const_lv3_5) else "0";
    icmp_ln7_2_fu_72_p2 <= "1" when (d_i_type = ap_const_lv3_4) else "0";
    icmp_ln7_3_fu_78_p2 <= "1" when (d_i_type = ap_const_lv3_3) else "0";
    icmp_ln7_4_fu_84_p2 <= "1" when (d_i_type = ap_const_lv3_2) else "0";
    icmp_ln7_5_fu_90_p2 <= "1" when (d_i_type = ap_const_lv3_1) else "0";
    icmp_ln7_fu_60_p2 <= "1" when (d_i_type = ap_const_lv3_6) else "0";
    or_ln7_1_fu_102_p2 <= (icmp_ln7_3_fu_78_p2 or icmp_ln7_2_fu_72_p2);
    or_ln7_2_fu_116_p2 <= (icmp_ln7_fu_60_p2 or icmp_ln7_1_fu_66_p2);
    or_ln7_3_fu_122_p2 <= (or_ln7_fu_96_p2 or or_ln7_1_fu_102_p2);
    or_ln7_fu_96_p2 <= (icmp_ln7_5_fu_90_p2 or icmp_ln7_4_fu_84_p2);
    select_ln7_1_fu_128_p3 <= 
        select_ln7_fu_108_p3 when (or_ln7_2_fu_116_p2(0) = '1') else 
        ap_const_lv16_1;
    select_ln7_2_fu_136_p3 <= 
        ap_const_lv16_1 when (or_ln7_3_fu_122_p2(0) = '1') else 
        select_ln7_1_fu_128_p3;
    select_ln7_fu_108_p3 <= 
        ap_const_lv16_1 when (icmp_ln7_1_fu_66_p2(0) = '1') else 
        trunc_ln_fu_50_p4;
    trunc_ln_fu_50_p4 <= d_i_imm(16 downto 1);
end behav;
